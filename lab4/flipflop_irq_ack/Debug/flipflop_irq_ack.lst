
Debug/flipflop_irq_ack:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:


__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f8c6 	bl	20000194 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <init_app>:

int count;

void init_app(void) {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
    
    /* starta klockor port D och E */
	* ( (unsigned long *) 0x40023830) = 0x18;
20000014:	4b21      	ldr	r3, [pc, #132]	; (2000009c <init_app+0x8c>)
20000016:	2218      	movs	r2, #24
20000018:	601a      	str	r2, [r3, #0]
	/* starta klockor för SYSCFG */
	* ((unsigned long *)0x40023844) |= 0x4000; 	
2000001a:	4b21      	ldr	r3, [pc, #132]	; (200000a0 <init_app+0x90>)
2000001c:	681a      	ldr	r2, [r3, #0]
2000001e:	4b20      	ldr	r3, [pc, #128]	; (200000a0 <init_app+0x90>)
20000020:	2180      	movs	r1, #128	; 0x80
20000022:	01c9      	lsls	r1, r1, #7
20000024:	430a      	orrs	r2, r1
20000026:	601a      	str	r2, [r3, #0]
	/* Relokera vektortabellen */
	* ((unsigned long *)0xE000ED08) = 0x2001C000;
20000028:	4b1e      	ldr	r3, [pc, #120]	; (200000a4 <init_app+0x94>)
2000002a:	4a1f      	ldr	r2, [pc, #124]	; (200000a8 <init_app+0x98>)
2000002c:	601a      	str	r2, [r3, #0]
        
    // D output
    *GPIO_MODER = 0x00005555;
2000002e:	4b1f      	ldr	r3, [pc, #124]	; (200000ac <init_app+0x9c>)
20000030:	4a1f      	ldr	r2, [pc, #124]	; (200000b0 <init_app+0xa0>)
20000032:	601a      	str	r2, [r3, #0]
    *GPIO_E_MODER = 0x00005500;
20000034:	4b1f      	ldr	r3, [pc, #124]	; (200000b4 <init_app+0xa4>)
20000036:	22aa      	movs	r2, #170	; 0xaa
20000038:	01d2      	lsls	r2, r2, #7
2000003a:	601a      	str	r2, [r3, #0]
    
    count = 1;
2000003c:	4b1e      	ldr	r3, [pc, #120]	; (200000b8 <init_app+0xa8>)
2000003e:	2201      	movs	r2, #1
20000040:	601a      	str	r2, [r3, #0]
    
    // reset på flipflop
    *GPIO_E_ODR_LOW = 0x70; 
20000042:	4b1e      	ldr	r3, [pc, #120]	; (200000bc <init_app+0xac>)
20000044:	2270      	movs	r2, #112	; 0x70
20000046:	701a      	strb	r2, [r3, #0]
    *GPIO_E_ODR_LOW = ~0x70;
20000048:	4b1c      	ldr	r3, [pc, #112]	; (200000bc <init_app+0xac>)
2000004a:	228f      	movs	r2, #143	; 0x8f
2000004c:	701a      	strb	r2, [r3, #0]
    
    *SYSCFG_EXTICR1 |= 0x4000; 
2000004e:	4b1c      	ldr	r3, [pc, #112]	; (200000c0 <init_app+0xb0>)
20000050:	681a      	ldr	r2, [r3, #0]
20000052:	4b1b      	ldr	r3, [pc, #108]	; (200000c0 <init_app+0xb0>)
20000054:	2180      	movs	r1, #128	; 0x80
20000056:	01c9      	lsls	r1, r1, #7
20000058:	430a      	orrs	r2, r1
2000005a:	601a      	str	r2, [r3, #0]

    // aktivera interrupt mask
    *EXTI_IMR |= EXTI3_IRQ_BPOS; 
2000005c:	4b19      	ldr	r3, [pc, #100]	; (200000c4 <init_app+0xb4>)
2000005e:	681a      	ldr	r2, [r3, #0]
20000060:	4b18      	ldr	r3, [pc, #96]	; (200000c4 <init_app+0xb4>)
20000062:	2108      	movs	r1, #8
20000064:	430a      	orrs	r2, r1
20000066:	601a      	str	r2, [r3, #0]
     
    // aktivera rising edge
    *EXTI_RTSR |= EXTI3_IRQ_BPOS;
20000068:	4b17      	ldr	r3, [pc, #92]	; (200000c8 <init_app+0xb8>)
2000006a:	681a      	ldr	r2, [r3, #0]
2000006c:	4b16      	ldr	r3, [pc, #88]	; (200000c8 <init_app+0xb8>)
2000006e:	2108      	movs	r1, #8
20000070:	430a      	orrs	r2, r1
20000072:	601a      	str	r2, [r3, #0]
    // inaktivera falling edge
    *EXTI_FTSR |= EXTI3_IRQ_BPOS;
20000074:	4b15      	ldr	r3, [pc, #84]	; (200000cc <init_app+0xbc>)
20000076:	681a      	ldr	r2, [r3, #0]
20000078:	4b14      	ldr	r3, [pc, #80]	; (200000cc <init_app+0xbc>)
2000007a:	2108      	movs	r1, #8
2000007c:	430a      	orrs	r2, r1
2000007e:	601a      	str	r2, [r3, #0]
    
    
    *((void(**)(void)) EXTI3_VTOR_IRQ) = irq_handler;
20000080:	4b13      	ldr	r3, [pc, #76]	; (200000d0 <init_app+0xc0>)
20000082:	4a14      	ldr	r2, [pc, #80]	; (200000d4 <init_app+0xc4>)
20000084:	601a      	str	r2, [r3, #0]

    // aktivera nvic
    *((unsigned int *) NVIC_ISER0) |= NVIC_EXTI3_IRQ_BPOS;  
20000086:	4b14      	ldr	r3, [pc, #80]	; (200000d8 <init_app+0xc8>)
20000088:	681a      	ldr	r2, [r3, #0]
2000008a:	4b13      	ldr	r3, [pc, #76]	; (200000d8 <init_app+0xc8>)
2000008c:	2180      	movs	r1, #128	; 0x80
2000008e:	0089      	lsls	r1, r1, #2
20000090:	430a      	orrs	r2, r1
20000092:	601a      	str	r2, [r3, #0]
    
}
20000094:	46c0      	nop			; (mov r8, r8)
20000096:	46bd      	mov	sp, r7
20000098:	bd80      	pop	{r7, pc}
2000009a:	46c0      	nop			; (mov r8, r8)
2000009c:	40023830 	andmi	r3, r2, r0, lsr r8
200000a0:	40023844 	andmi	r3, r2, r4, asr #16
200000a4:	e000ed08 	and	lr, r0, r8, lsl #26
200000a8:	2001c000 	andcs	ip, r1, r0
200000ac:	40020c00 	andmi	r0, r2, r0, lsl #24
200000b0:	00005555 	andeq	r5, r0, r5, asr r5
200000b4:	40021000 	andmi	r1, r2, r0
200000b8:	200001b0 			; <UNDEFINED> instruction: 0x200001b0
200000bc:	40021014 	andmi	r1, r2, r4, lsl r0
200000c0:	40013808 	andmi	r3, r1, r8, lsl #16
200000c4:	40013c00 	andmi	r3, r1, r0, lsl #24
200000c8:	40013c08 	andmi	r3, r1, r8, lsl #24
200000cc:	40013c0c 	andmi	r3, r1, ip, lsl #24
200000d0:	2001c064 	andcs	ip, r1, r4, rrx
200000d4:	200000dd 	ldrdcs	r0, [r0], -sp
200000d8:	e000e100 	and	lr, r0, r0, lsl #2

200000dc <irq_handler>:


void irq_handler(void) {
200000dc:	b580      	push	{r7, lr}
200000de:	b082      	sub	sp, #8
200000e0:	af00      	add	r7, sp, #0
    
    char input = 0xF & *GPIO_E_IDR_LOW; // Få bitarna 0-3
200000e2:	4b28      	ldr	r3, [pc, #160]	; (20000184 <irq_handler+0xa8>)
200000e4:	781b      	ldrb	r3, [r3, #0]
200000e6:	b2da      	uxtb	r2, r3
200000e8:	1dfb      	adds	r3, r7, #7
200000ea:	210f      	movs	r1, #15
200000ec:	400a      	ands	r2, r1
200000ee:	701a      	strb	r2, [r3, #0]
    
    if( *EXTI_PR & EXTI3_IRQ_BPOS) {    // om trigg har uppträtt, 
200000f0:	4b25      	ldr	r3, [pc, #148]	; (20000188 <irq_handler+0xac>)
200000f2:	681b      	ldr	r3, [r3, #0]
200000f4:	2208      	movs	r2, #8
200000f6:	4013      	ands	r3, r2
200000f8:	d040      	beq.n	2000017c <irq_handler+0xa0>
        
         *EXTI_PR |= EXTI3_IRQ_BPOS; // återställer flaggan         ÅTERKOM
200000fa:	4b23      	ldr	r3, [pc, #140]	; (20000188 <irq_handler+0xac>)
200000fc:	681a      	ldr	r2, [r3, #0]
200000fe:	4b22      	ldr	r3, [pc, #136]	; (20000188 <irq_handler+0xac>)
20000100:	2108      	movs	r1, #8
20000102:	430a      	orrs	r2, r1
20000104:	601a      	str	r2, [r3, #0]
         
         if(input & 1) {                // Om IRQ0 är triggad
20000106:	1dfb      	adds	r3, r7, #7
20000108:	781b      	ldrb	r3, [r3, #0]
2000010a:	2201      	movs	r2, #1
2000010c:	4013      	ands	r3, r2
2000010e:	d007      	beq.n	20000120 <irq_handler+0x44>
             *GPIO_E_ODR_LOW = 0x10;    // kvittera avbrott IRQ0
20000110:	4b1e      	ldr	r3, [pc, #120]	; (2000018c <irq_handler+0xb0>)
20000112:	2210      	movs	r2, #16
20000114:	701a      	strb	r2, [r3, #0]
             count++;
20000116:	4b1e      	ldr	r3, [pc, #120]	; (20000190 <irq_handler+0xb4>)
20000118:	681b      	ldr	r3, [r3, #0]
2000011a:	1c5a      	adds	r2, r3, #1
2000011c:	4b1c      	ldr	r3, [pc, #112]	; (20000190 <irq_handler+0xb4>)
2000011e:	601a      	str	r2, [r3, #0]
         }
         if(input & 2) {                // Om IRQ1 är triggad
20000120:	1dfb      	adds	r3, r7, #7
20000122:	781b      	ldrb	r3, [r3, #0]
20000124:	2202      	movs	r2, #2
20000126:	4013      	ands	r3, r2
20000128:	d005      	beq.n	20000136 <irq_handler+0x5a>
            *GPIO_E_ODR_LOW = 0x20;     // kvittera avbrott IRQ1
2000012a:	4b18      	ldr	r3, [pc, #96]	; (2000018c <irq_handler+0xb0>)
2000012c:	2220      	movs	r2, #32
2000012e:	701a      	strb	r2, [r3, #0]
            count = 0;
20000130:	4b17      	ldr	r3, [pc, #92]	; (20000190 <irq_handler+0xb4>)
20000132:	2200      	movs	r2, #0
20000134:	601a      	str	r2, [r3, #0]
             
         }
         if(input & 4) {                //Om IRQ2 är triggad
20000136:	1dfb      	adds	r3, r7, #7
20000138:	781b      	ldrb	r3, [r3, #0]
2000013a:	2204      	movs	r2, #4
2000013c:	4013      	ands	r3, r2
2000013e:	d00d      	beq.n	2000015c <irq_handler+0x80>
             
             if ( count ) count = 0; // 
20000140:	4b13      	ldr	r3, [pc, #76]	; (20000190 <irq_handler+0xb4>)
20000142:	681b      	ldr	r3, [r3, #0]
20000144:	2b00      	cmp	r3, #0
20000146:	d003      	beq.n	20000150 <irq_handler+0x74>
20000148:	4b11      	ldr	r3, [pc, #68]	; (20000190 <irq_handler+0xb4>)
2000014a:	2200      	movs	r2, #0
2000014c:	601a      	str	r2, [r3, #0]
2000014e:	e002      	b.n	20000156 <irq_handler+0x7a>
             else count = 0xFF;         // 
20000150:	4b0f      	ldr	r3, [pc, #60]	; (20000190 <irq_handler+0xb4>)
20000152:	22ff      	movs	r2, #255	; 0xff
20000154:	601a      	str	r2, [r3, #0]
             *GPIO_E_ODR_LOW = 0x40;    // kvittera avbrott IRQ2
20000156:	4b0d      	ldr	r3, [pc, #52]	; (2000018c <irq_handler+0xb0>)
20000158:	2240      	movs	r2, #64	; 0x40
2000015a:	701a      	strb	r2, [r3, #0]
         }
         
         // reset på flipflop
        *GPIO_E_ODR_LOW |= 0x70; 
2000015c:	4b0b      	ldr	r3, [pc, #44]	; (2000018c <irq_handler+0xb0>)
2000015e:	781b      	ldrb	r3, [r3, #0]
20000160:	b2db      	uxtb	r3, r3
20000162:	4a0a      	ldr	r2, [pc, #40]	; (2000018c <irq_handler+0xb0>)
20000164:	2170      	movs	r1, #112	; 0x70
20000166:	430b      	orrs	r3, r1
20000168:	b2db      	uxtb	r3, r3
2000016a:	7013      	strb	r3, [r2, #0]
        *GPIO_E_ODR_LOW &= ~0x70;
2000016c:	4b07      	ldr	r3, [pc, #28]	; (2000018c <irq_handler+0xb0>)
2000016e:	781b      	ldrb	r3, [r3, #0]
20000170:	b2db      	uxtb	r3, r3
20000172:	4a06      	ldr	r2, [pc, #24]	; (2000018c <irq_handler+0xb0>)
20000174:	2170      	movs	r1, #112	; 0x70
20000176:	438b      	bics	r3, r1
20000178:	b2db      	uxtb	r3, r3
2000017a:	7013      	strb	r3, [r2, #0]
    }
}
2000017c:	46c0      	nop			; (mov r8, r8)
2000017e:	46bd      	mov	sp, r7
20000180:	b002      	add	sp, #8
20000182:	bd80      	pop	{r7, pc}
20000184:	40021010 	andmi	r1, r2, r0, lsl r0
20000188:	40013c14 	andmi	r3, r1, r4, lsl ip
2000018c:	40021014 	andmi	r1, r2, r4, lsl r0
20000190:	200001b0 			; <UNDEFINED> instruction: 0x200001b0

20000194 <main>:

void main(void)
{
20000194:	b580      	push	{r7, lr}
20000196:	af00      	add	r7, sp, #0
    init_app();
20000198:	f7ff ff3a 	bl	20000010 <init_app>
    while(1) {
        *GPIO_ODR_LOW = count;
2000019c:	4b02      	ldr	r3, [pc, #8]	; (200001a8 <main+0x14>)
2000019e:	681a      	ldr	r2, [r3, #0]
200001a0:	4b02      	ldr	r3, [pc, #8]	; (200001ac <main+0x18>)
200001a2:	b2d2      	uxtb	r2, r2
200001a4:	701a      	strb	r2, [r3, #0]
200001a6:	e7f9      	b.n	2000019c <main+0x8>
200001a8:	200001b0 			; <UNDEFINED> instruction: 0x200001b0
200001ac:	40020c14 	andmi	r0, r2, r4, lsl ip

200001b0 <count>:
200001b0:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000009e 	muleq	r0, lr, r0
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	0000990c 	andeq	r9, r0, ip, lsl #18
  14:	00010200 	andeq	r0, r1, r0, lsl #4
	...
  24:	00f10200 	rscseq	r0, r1, r0, lsl #4
  28:	33010000 	movwcc	r0, #4096	; 0x1000
  2c:	00003705 	andeq	r3, r0, r5, lsl #14
  30:	b0030500 	andlt	r0, r3, r0, lsl #10
  34:	03200001 			; <UNDEFINED> instruction: 0x03200001
  38:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
  3c:	fd040074 	stc2	0, cr0, [r4, #-464]	; 0xfffffe30
  40:	01000000 	mrseq	r0, (UNDEF: 0)
  44:	01940679 	orrseq	r0, r4, r9, ror r6
  48:	001c2000 	andseq	r2, ip, r0
  4c:	9c010000 	stcls	0, cr0, [r1], {-0}
  50:	00007c05 	andeq	r7, r0, r5, lsl #24
  54:	065b0100 	ldrbeq	r0, [fp], -r0, lsl #2
  58:	200000dc 	ldrdcs	r0, [r0], -ip
  5c:	000000b8 	strheq	r0, [r0], -r8
  60:	00769c01 	rsbseq	r9, r6, r1, lsl #24
  64:	f7060000 			; <UNDEFINED> instruction: 0xf7060000
  68:	01000000 	mrseq	r0, (UNDEF: 0)
  6c:	00760a5d 	rsbseq	r0, r6, sp, asr sl
  70:	91020000 	mrsls	r0, (UNDEF: 2)
  74:	01070077 	tsteq	r7, r7, ror r0
  78:	00015008 	andeq	r5, r1, r8
  7c:	00880800 	addeq	r0, r8, r0, lsl #16
  80:	35010000 	strcc	r0, [r1, #-0]
  84:	00001006 	andeq	r1, r0, r6
  88:	0000cc20 	andeq	ip, r0, r0, lsr #24
  8c:	089c0100 	ldmeq	ip, {r8}
  90:	00000091 	muleq	r0, r1, r0
  94:	00062b01 	andeq	r2, r6, r1, lsl #22
  98:	0c200000 	stceq	0, cr0, [r0], #-0
  9c:	01000000 	mrseq	r0, (UNDEF: 0)
  a0:	Address 0x00000000000000a0 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23, 0
  14:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13490b39 	movtne	r0, #39737	; 0x9b39
  20:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
  24:	24030000 	strcs	r0, [r3], #-0
  28:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  2c:	0008030b 	andeq	r0, r8, fp, lsl #6
  30:	002e0400 	eoreq	r0, lr, r0, lsl #8
  34:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  38:	0b3b0b3a 	bleq	ec2d28 <startup-0x1f13d2d8>
  3c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  40:	06120111 			; <UNDEFINED> instruction: 0x06120111
  44:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  48:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
  4c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  50:	0b3a0e03 	bleq	e83864 <startup-0x1f17c79c>
  54:	0b390b3b 	bleq	e42d48 <startup-0x1f1bd2b8>
  58:	01111927 	tsteq	r1, r7, lsr #18
  5c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  60:	01194297 			; <UNDEFINED> instruction: 0x01194297
  64:	06000013 			; <UNDEFINED> instruction: 0x06000013
  68:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  6c:	0b3b0b3a 	bleq	ec2d5c <startup-0x1f13d2a4>
  70:	13490b39 	movtne	r0, #39737	; 0x9b39
  74:	00001802 	andeq	r1, r0, r2, lsl #16
  78:	0b002407 	bleq	909c <startup-0x1fff6f64>
  7c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  80:	0800000e 	stmdaeq	r0, {r1, r2, r3}
  84:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  88:	0b3a0e03 	bleq	e8389c <startup-0x1f17c764>
  8c:	0b390b3b 	bleq	e42d80 <startup-0x1f1bd280>
  90:	01111927 	tsteq	r1, r7, lsr #18
  94:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  98:	00194297 	mulseq	r9, r7, r2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000001a0 	andeq	r0, r0, r0, lsr #3
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001b0 			; <UNDEFINED> instruction: 0x200001b0
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000144 	andeq	r0, r0, r4, asr #2
   4:	006e0003 	rsbeq	r0, lr, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
  20:	616a2f73 	smcvs	41715	; 0xa2f3
  24:	62626f63 	rsbvs	r6, r2, #396	; 0x18c
  28:	66677265 	strbtvs	r7, [r7], -r5, ror #4
  2c:	2f6b6c61 	svccs	0x006b6c61
  30:	6b736544 	blvs	1cd9548 <startup-0x1e326ab8>
  34:	2f706f74 	svccs	0x00706f74
  38:	72702d43 	rsbsvc	r2, r0, #4288	; 0x10c0
  3c:	6172676f 	cmnvs	r2, pc, ror #14
  40:	72656d6d 	rsbvc	r6, r5, #6976	; 0x1b40
  44:	2f676e69 	svccs	0x00676e69
  48:	6c706f6d 	ldclvs	15, cr6, [r0], #-436	; 0xfffffe4c
  4c:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  50:	6f697461 	svcvs	0x00697461
  54:	2f72656e 	svccs	0x0072656e
  58:	70696c66 	rsbvc	r6, r9, r6, ror #24
  5c:	706f6c66 	rsbvc	r6, pc, r6, ror #24
  60:	7172695f 	cmnvc	r2, pc, asr r9
  64:	6b63615f 	blvs	18d85e8 <startup-0x1e727a18>
  68:	74730000 	ldrbtvc	r0, [r3], #-0
  6c:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  70:	00632e70 	rsbeq	r2, r3, r0, ror lr
  74:	00000001 	andeq	r0, r0, r1
  78:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  7c:	00000002 	andeq	r0, r0, r2
  80:	012b0320 			; <UNDEFINED> instruction: 0x012b0320
  84:	2f212113 	svccs	0x00212113
  88:	00030221 	andeq	r0, r3, r1, lsr #4
  8c:	15050101 	strne	r0, [r5, #-257]	; 0xfffffeff
  90:	10020500 	andne	r0, r2, r0, lsl #10
  94:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  98:	02050134 	andeq	r0, r5, #13
  9c:	20240531 	eorcs	r0, r4, r1, lsr r5
  a0:	05302205 	ldreq	r2, [r0, #-517]!	; 0xfffffdfb
  a4:	22057602 	andcs	r7, r5, #2097152	; 0x200000
  a8:	31050520 	tstcc	r5, r0, lsr #10
  ac:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
  b0:	13052f05 	movwne	r2, #24325	; 0x5f05
  b4:	3e0b0520 	cfsh32cc	mvfx0, mvfx11, #16
  b8:	053f0505 	ldreq	r0, [pc, #-1285]!	; fffffbbb <count+0xdffffa0b>
  bc:	05052015 	streq	r2, [r5, #-21]	; 0xffffffeb
  c0:	2015052f 	andscs	r0, r5, pc, lsr #10
  c4:	770f0530 	smladxvc	pc, r0, r5, r0	; <UNPREDICTABLE>
  c8:	68691005 	stmdavs	r9!, {r0, r2, ip}^
  cc:	05690505 	strbeq	r0, [r9, #-1285]!	; 0xfffffafb
  d0:	24052028 	strcs	r2, [r5], #-40	; 0xffffffd8
  d4:	76010531 			; <UNDEFINED> instruction: 0x76010531
  d8:	24021805 	strcs	r1, [r2], #-2053	; 0xfffff7fb
  dc:	3e160515 	mrccc	5, 0, r0, cr6, cr5, {0}
  e0:	053c0a05 	ldreq	r0, [ip, #-2565]!	; 0xfffff5fb
  e4:	12054c09 	andne	r4, r5, #2304	; 0x900
  e8:	2e07052e 	cfsh32cs	mvfx0, mvfx7, #30
  ec:	68221305 	stmdavs	r2!, {r0, r2, r8, r9, ip}
  f0:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
  f4:	1e05210e 	adfnes	f2, f5, #0.5
  f8:	2f130520 	svccs	0x00130520
  fc:	4a0c055a 	bmi	30166c <startup-0x1fcfe994>
 100:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
 104:	1305201d 	movwne	r2, #20509	; 0x501d
 108:	0c053f2f 	stceq	15, cr3, [r5], {47}	; 0x2f
 10c:	2213054a 	andscs	r0, r3, #310378496	; 0x12800000
 110:	052e1105 	streq	r1, [lr, #-261]!	; 0xfffffefb
 114:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
 118:	19052e01 	stmdbne	r5, {r0, r9, sl, fp, sp}
 11c:	3d0e054b 	cfstr32cc	mvfx0, [lr, #-300]	; 0xfffffed4
 120:	05201e05 	streq	r1, [r0, #-3589]!	; 0xfffff1fb
 124:	05833219 	streq	r3, [r3, #537]	; 0x219
 128:	05bd8401 	ldreq	r8, [sp, #1025]!	; 0x401
 12c:	17052f05 	strne	r2, [r5, -r5, lsl #30]
 130:	01040200 	mrseq	r0, R12_usr
 134:	00090530 	andeq	r0, r9, r0, lsr r5
 138:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 13c:	02001705 	andeq	r1, r0, #1310720	; 0x140000
 140:	02200104 	eoreq	r0, r0, #1
 144:	01010007 	tsteq	r1, r7

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	5f717269 	svcpl	0x00717269
  80:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
  84:	0072656c 	rsbseq	r6, r2, ip, ror #10
  88:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
  8c:	7070615f 	rsbsvc	r6, r0, pc, asr r1
  90:	61747300 	cmnvs	r4, r0, lsl #6
  94:	70757472 	rsbsvc	r7, r5, r2, ror r4
  98:	73552f00 	cmpvc	r5, #0, 30
  9c:	2f737265 	svccs	0x00737265
  a0:	6f63616a 	svcvs	0x0063616a
  a4:	72656262 	rsbvc	r6, r5, #536870918	; 0x20000006
  a8:	6c616667 	stclvs	6, cr6, [r1], #-412	; 0xfffffe64
  ac:	65442f6b 	strbvs	r2, [r4, #-3947]	; 0xfffff095
  b0:	6f746b73 	svcvs	0x00746b73
  b4:	2d432f70 	stclcs	15, cr2, [r3, #-448]	; 0xfffffe40
  b8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
  bc:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
  c0:	6e697265 	cdpvs	2, 6, cr7, cr9, cr5, {3}
  c4:	6f6d2f67 	svcvs	0x006d2f67
  c8:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
  cc:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  d0:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
  d4:	6c662f72 	stclvs	15, cr2, [r6], #-456	; 0xfffffe38
  d8:	6c667069 	stclvs	0, cr7, [r6], #-420	; 0xfffffe5c
  dc:	695f706f 	ldmdbvs	pc, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
  e0:	615f7172 	cmpvs	pc, r2, ror r1	; <UNPREDICTABLE>
  e4:	732f6b63 			; <UNDEFINED> instruction: 0x732f6b63
  e8:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  ec:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  f0:	756f6300 	strbvc	r6, [pc, #-768]!	; fffffdf8 <count+0xdffffc48>
  f4:	6900746e 	stmdbvs	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
  f8:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
  fc:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 100:	552f006e 	strpl	r0, [pc, #-110]!	; 9a <startup-0x1fffff66>
 104:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 108:	63616a2f 	cmnvs	r1, #192512	; 0x2f000
 10c:	6562626f 	strbvs	r6, [r2, #-623]!	; 0xfffffd91
 110:	61666772 	smcvs	26226	; 0x6672
 114:	442f6b6c 	strtmi	r6, [pc], #-2924	; 11c <startup-0x1ffffee4>
 118:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
 11c:	432f706f 			; <UNDEFINED> instruction: 0x432f706f
 120:	6f72702d 	svcvs	0x0072702d
 124:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
 128:	6972656d 	ldmdbvs	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
 12c:	6d2f676e 	stcvs	7, cr6, [pc, #-440]!	; ffffff7c <count+0xdffffdcc>
 130:	616c706f 	cmnvs	ip, pc, rrx
 134:	61726f62 	cmnvs	r2, r2, ror #30
 138:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 13c:	662f7265 	strtvs	r7, [pc], -r5, ror #4
 140:	6670696c 	ldrbtvs	r6, [r0], -ip, ror #18
 144:	5f706f6c 	svcpl	0x00706f6c
 148:	5f717269 	svcpl	0x00717269
 14c:	006b6361 	rsbeq	r6, fp, r1, ror #6
 150:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	000000cc 	andeq	r0, r0, ip, asr #1
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	200000dc 	ldrdcs	r0, [r0], -ip
  48:	000000b8 	strheq	r0, [r0], -r8
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  58:	00000007 	andeq	r0, r0, r7
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	20000194 	mulcs	r0, r4, r1
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0000070d 	andeq	r0, r0, sp, lsl #14
