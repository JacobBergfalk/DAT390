
Debug/movepong:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
};

__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f82e 	bl	20000064 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <graphic_initiallize>:

__attribute__((naked))
void graphic_initiallize(void) {
20000010:	4770dff0 			; <UNDEFINED> instruction: 0x4770dff0
    __asm__ volatile (" .HWORD 0xDFF0\n");
    __asm__ volatile (" BX LR\n");
}
20000014:	46c0      	nop			; (mov r8, r8)

20000016 <graphic_clear_screen>:

__attribute__((naked))
void graphic_clear_screen(void) {
20000016:	4770dff1 			; <UNDEFINED> instruction: 0x4770dff1
    __asm__ volatile (" .HWORD 0xDFF1\n");
    __asm__ volatile (" BX LR\n");
}
2000001a:	46c0      	nop			; (mov r8, r8)

2000001c <graphic_pixel_set>:

__attribute__((naked))
void graphic_pixel_set(int x, int y) {
2000001c:	4770dff2 			; <UNDEFINED> instruction: 0x4770dff2
    __asm__ volatile (" .HWORD 0xDFF2\n");
    __asm__ volatile (" BX LR\n");
}
20000020:	46c0      	nop			; (mov r8, r8)

20000022 <graphic_pixel_clear>:

__attribute__((naked))
void graphic_pixel_clear(int x, int y) {
20000022:	4770dff3 			; <UNDEFINED> instruction: 0x4770dff3
    __asm__ volatile (" .HWORD 0xDFF3\n");
    __asm__ volatile (" BX LR\n");
}
20000026:	46c0      	nop			; (mov r8, r8)

20000028 <init_app>:


void init_app( void ) {
20000028:	b580      	push	{r7, lr}
2000002a:	af00      	add	r7, sp, #0
    
        // starta klockor port D och E 
    *((unsigned long *) 0x40023830) = 0x18;
2000002c:	4b07      	ldr	r3, [pc, #28]	; (2000004c <init_app+0x24>)
2000002e:	2218      	movs	r2, #24
20000030:	601a      	str	r2, [r3, #0]
    //*((unsigned long *) GPIO_E_MODER) = 0x00005555;
    *GPIO_D_MODER = 0x55005555;
20000032:	4b07      	ldr	r3, [pc, #28]	; (20000050 <init_app+0x28>)
20000034:	4a07      	ldr	r2, [pc, #28]	; (20000054 <init_app+0x2c>)
20000036:	601a      	str	r2, [r3, #0]
    *GPIO_D_PUPDR = 0x00AA0000;
20000038:	4b07      	ldr	r3, [pc, #28]	; (20000058 <init_app+0x30>)
2000003a:	22aa      	movs	r2, #170	; 0xaa
2000003c:	0412      	lsls	r2, r2, #16
2000003e:	601a      	str	r2, [r3, #0]
    
    *GPIO_D_OSPEEDR = 0x55555555;
20000040:	4b06      	ldr	r3, [pc, #24]	; (2000005c <init_app+0x34>)
20000042:	4a07      	ldr	r2, [pc, #28]	; (20000060 <init_app+0x38>)
20000044:	601a      	str	r2, [r3, #0]
}
20000046:	46c0      	nop			; (mov r8, r8)
20000048:	46bd      	mov	sp, r7
2000004a:	bd80      	pop	{r7, pc}
2000004c:	40023830 	andmi	r3, r2, r0, lsr r8
20000050:	40020c00 	andmi	r0, r2, r0, lsl #24
20000054:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000058:	40020c0c 	andmi	r0, r2, ip, lsl #24
2000005c:	40020c08 	andmi	r0, r2, r8, lsl #24
20000060:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000064 <main>:

void main(void)
{
20000064:	b590      	push	{r4, r7, lr}
20000066:	b083      	sub	sp, #12
20000068:	af00      	add	r7, sp, #0
    unsigned char c;
    POBJECT p = &ball_object;
2000006a:	4b22      	ldr	r3, [pc, #136]	; (200000f4 <main+0x90>)
2000006c:	607b      	str	r3, [r7, #4]
    init_app();
2000006e:	f7ff ffdb 	bl	20000028 <init_app>
    graphic_initiallize();
20000072:	f7ff ffcd 	bl	20000010 <graphic_initiallize>
    graphic_clear_screen();
20000076:	f7ff ffce 	bl	20000016 <graphic_clear_screen>
    
    while(1) {
        p->move(p);
2000007a:	687b      	ldr	r3, [r7, #4]
2000007c:	69db      	ldr	r3, [r3, #28]
2000007e:	687a      	ldr	r2, [r7, #4]
20000080:	0010      	movs	r0, r2
20000082:	4798      	blx	r3
        delay_milli(20);
20000084:	2014      	movs	r0, #20
20000086:	f000 faf9 	bl	2000067c <delay_milli>
        c = keyb();
2000008a:	1cfc      	adds	r4, r7, #3
2000008c:	f000 f8f5 	bl	2000027a <keyb>
20000090:	0003      	movs	r3, r0
20000092:	7023      	strb	r3, [r4, #0]
        switch(c) {
20000094:	1cfb      	adds	r3, r7, #3
20000096:	781b      	ldrb	r3, [r3, #0]
20000098:	2b08      	cmp	r3, #8
2000009a:	d8ee      	bhi.n	2000007a <main+0x16>
2000009c:	009a      	lsls	r2, r3, #2
2000009e:	4b16      	ldr	r3, [pc, #88]	; (200000f8 <main+0x94>)
200000a0:	18d3      	adds	r3, r2, r3
200000a2:	681b      	ldr	r3, [r3, #0]
200000a4:	469f      	mov	pc, r3
            case 6: p->set_speed( p, 3, 0); break;
200000a6:	687b      	ldr	r3, [r7, #4]
200000a8:	6a1b      	ldr	r3, [r3, #32]
200000aa:	6878      	ldr	r0, [r7, #4]
200000ac:	2200      	movs	r2, #0
200000ae:	2103      	movs	r1, #3
200000b0:	4798      	blx	r3
200000b2:	e01d      	b.n	200000f0 <main+0x8c>
            case 4: p->set_speed( p, -3, 0); break;
200000b4:	687b      	ldr	r3, [r7, #4]
200000b6:	6a1b      	ldr	r3, [r3, #32]
200000b8:	2203      	movs	r2, #3
200000ba:	4251      	negs	r1, r2
200000bc:	6878      	ldr	r0, [r7, #4]
200000be:	2200      	movs	r2, #0
200000c0:	4798      	blx	r3
200000c2:	e015      	b.n	200000f0 <main+0x8c>
            case 5: p->set_speed( p, 0, 0); break;
200000c4:	687b      	ldr	r3, [r7, #4]
200000c6:	6a1b      	ldr	r3, [r3, #32]
200000c8:	6878      	ldr	r0, [r7, #4]
200000ca:	2200      	movs	r2, #0
200000cc:	2100      	movs	r1, #0
200000ce:	4798      	blx	r3
200000d0:	e00e      	b.n	200000f0 <main+0x8c>
            case 2: p->set_speed( p, 0, -3); break;
200000d2:	687b      	ldr	r3, [r7, #4]
200000d4:	6a1b      	ldr	r3, [r3, #32]
200000d6:	2203      	movs	r2, #3
200000d8:	4252      	negs	r2, r2
200000da:	6878      	ldr	r0, [r7, #4]
200000dc:	2100      	movs	r1, #0
200000de:	4798      	blx	r3
200000e0:	e006      	b.n	200000f0 <main+0x8c>
            case 8: p->set_speed( p, 0, 3); break;
200000e2:	687b      	ldr	r3, [r7, #4]
200000e4:	6a1b      	ldr	r3, [r3, #32]
200000e6:	6878      	ldr	r0, [r7, #4]
200000e8:	2203      	movs	r2, #3
200000ea:	2100      	movs	r1, #0
200000ec:	4798      	blx	r3
200000ee:	46c0      	nop			; (mov r8, r8)
    while(1) {
200000f0:	e7c3      	b.n	2000007a <main+0x16>
200000f2:	46c0      	nop			; (mov r8, r8)
200000f4:	20000864 	andcs	r0, r0, r4, ror #16
200000f8:	20000888 	andcs	r0, r0, r8, lsl #17

200000fc <draw_ballobject>:
        }
    }
    
}

static void draw_ballobject(POBJECT o) {
200000fc:	b580      	push	{r7, lr}
200000fe:	b084      	sub	sp, #16
20000100:	af00      	add	r7, sp, #0
20000102:	6078      	str	r0, [r7, #4]
    
    for(int p = 0; p < o->geo->numpoints; p++) {
20000104:	2300      	movs	r3, #0
20000106:	60fb      	str	r3, [r7, #12]
20000108:	e01e      	b.n	20000148 <draw_ballobject+0x4c>
        graphic_pixel_set(o->geo->px[p].x + o->posx, o->geo->px[p].y + o->posy);
2000010a:	687b      	ldr	r3, [r7, #4]
2000010c:	681a      	ldr	r2, [r3, #0]
2000010e:	68fb      	ldr	r3, [r7, #12]
20000110:	3304      	adds	r3, #4
20000112:	005b      	lsls	r3, r3, #1
20000114:	18d3      	adds	r3, r2, r3
20000116:	3304      	adds	r3, #4
20000118:	781b      	ldrb	r3, [r3, #0]
2000011a:	001a      	movs	r2, r3
2000011c:	687b      	ldr	r3, [r7, #4]
2000011e:	68db      	ldr	r3, [r3, #12]
20000120:	18d3      	adds	r3, r2, r3
20000122:	0018      	movs	r0, r3
20000124:	687b      	ldr	r3, [r7, #4]
20000126:	681a      	ldr	r2, [r3, #0]
20000128:	68fb      	ldr	r3, [r7, #12]
2000012a:	3304      	adds	r3, #4
2000012c:	005b      	lsls	r3, r3, #1
2000012e:	18d3      	adds	r3, r2, r3
20000130:	3305      	adds	r3, #5
20000132:	781b      	ldrb	r3, [r3, #0]
20000134:	001a      	movs	r2, r3
20000136:	687b      	ldr	r3, [r7, #4]
20000138:	691b      	ldr	r3, [r3, #16]
2000013a:	18d3      	adds	r3, r2, r3
2000013c:	0019      	movs	r1, r3
2000013e:	f7ff ff6d 	bl	2000001c <graphic_pixel_set>
    for(int p = 0; p < o->geo->numpoints; p++) {
20000142:	68fb      	ldr	r3, [r7, #12]
20000144:	3301      	adds	r3, #1
20000146:	60fb      	str	r3, [r7, #12]
20000148:	687b      	ldr	r3, [r7, #4]
2000014a:	681b      	ldr	r3, [r3, #0]
2000014c:	681b      	ldr	r3, [r3, #0]
2000014e:	68fa      	ldr	r2, [r7, #12]
20000150:	429a      	cmp	r2, r3
20000152:	dbda      	blt.n	2000010a <draw_ballobject+0xe>
    }
}
20000154:	46c0      	nop			; (mov r8, r8)
20000156:	46c0      	nop			; (mov r8, r8)
20000158:	46bd      	mov	sp, r7
2000015a:	b004      	add	sp, #16
2000015c:	bd80      	pop	{r7, pc}

2000015e <clear_ballobject>:

static void clear_ballobject( POBJECT o) {
2000015e:	b580      	push	{r7, lr}
20000160:	b084      	sub	sp, #16
20000162:	af00      	add	r7, sp, #0
20000164:	6078      	str	r0, [r7, #4]
    for(int p = 0; p < o->geo->numpoints; p++) {
20000166:	2300      	movs	r3, #0
20000168:	60fb      	str	r3, [r7, #12]
2000016a:	e01e      	b.n	200001aa <clear_ballobject+0x4c>
        graphic_pixel_clear(o->geo->px[p].x + o->posx, o->geo->px[p].y + o->posy);
2000016c:	687b      	ldr	r3, [r7, #4]
2000016e:	681a      	ldr	r2, [r3, #0]
20000170:	68fb      	ldr	r3, [r7, #12]
20000172:	3304      	adds	r3, #4
20000174:	005b      	lsls	r3, r3, #1
20000176:	18d3      	adds	r3, r2, r3
20000178:	3304      	adds	r3, #4
2000017a:	781b      	ldrb	r3, [r3, #0]
2000017c:	001a      	movs	r2, r3
2000017e:	687b      	ldr	r3, [r7, #4]
20000180:	68db      	ldr	r3, [r3, #12]
20000182:	18d3      	adds	r3, r2, r3
20000184:	0018      	movs	r0, r3
20000186:	687b      	ldr	r3, [r7, #4]
20000188:	681a      	ldr	r2, [r3, #0]
2000018a:	68fb      	ldr	r3, [r7, #12]
2000018c:	3304      	adds	r3, #4
2000018e:	005b      	lsls	r3, r3, #1
20000190:	18d3      	adds	r3, r2, r3
20000192:	3305      	adds	r3, #5
20000194:	781b      	ldrb	r3, [r3, #0]
20000196:	001a      	movs	r2, r3
20000198:	687b      	ldr	r3, [r7, #4]
2000019a:	691b      	ldr	r3, [r3, #16]
2000019c:	18d3      	adds	r3, r2, r3
2000019e:	0019      	movs	r1, r3
200001a0:	f7ff ff3f 	bl	20000022 <graphic_pixel_clear>
    for(int p = 0; p < o->geo->numpoints; p++) {
200001a4:	68fb      	ldr	r3, [r7, #12]
200001a6:	3301      	adds	r3, #1
200001a8:	60fb      	str	r3, [r7, #12]
200001aa:	687b      	ldr	r3, [r7, #4]
200001ac:	681b      	ldr	r3, [r3, #0]
200001ae:	681b      	ldr	r3, [r3, #0]
200001b0:	68fa      	ldr	r2, [r7, #12]
200001b2:	429a      	cmp	r2, r3
200001b4:	dbda      	blt.n	2000016c <clear_ballobject+0xe>
    }
}
200001b6:	46c0      	nop			; (mov r8, r8)
200001b8:	46c0      	nop			; (mov r8, r8)
200001ba:	46bd      	mov	sp, r7
200001bc:	b004      	add	sp, #16
200001be:	bd80      	pop	{r7, pc}

200001c0 <move_ballobject>:

static void move_ballobject( POBJECT o) {
200001c0:	b580      	push	{r7, lr}
200001c2:	b084      	sub	sp, #16
200001c4:	af00      	add	r7, sp, #0
200001c6:	6078      	str	r0, [r7, #4]
    
    int new_posx, new_posy;
    
    o->clear(o);
200001c8:	687b      	ldr	r3, [r7, #4]
200001ca:	699b      	ldr	r3, [r3, #24]
200001cc:	687a      	ldr	r2, [r7, #4]
200001ce:	0010      	movs	r0, r2
200001d0:	4798      	blx	r3
        
    new_posx = o->posx + o->dirx;
200001d2:	687b      	ldr	r3, [r7, #4]
200001d4:	68da      	ldr	r2, [r3, #12]
200001d6:	687b      	ldr	r3, [r7, #4]
200001d8:	685b      	ldr	r3, [r3, #4]
200001da:	18d3      	adds	r3, r2, r3
200001dc:	60fb      	str	r3, [r7, #12]
    new_posy = o->posy + o->diry;
200001de:	687b      	ldr	r3, [r7, #4]
200001e0:	691a      	ldr	r2, [r3, #16]
200001e2:	687b      	ldr	r3, [r7, #4]
200001e4:	689b      	ldr	r3, [r3, #8]
200001e6:	18d3      	adds	r3, r2, r3
200001e8:	60bb      	str	r3, [r7, #8]
    
    // check roof and floor
    if( new_posy + o->geo->sizey > 64) {
200001ea:	687b      	ldr	r3, [r7, #4]
200001ec:	681b      	ldr	r3, [r3, #0]
200001ee:	689a      	ldr	r2, [r3, #8]
200001f0:	68bb      	ldr	r3, [r7, #8]
200001f2:	18d3      	adds	r3, r2, r3
200001f4:	2b40      	cmp	r3, #64	; 0x40
200001f6:	dd0d      	ble.n	20000214 <move_ballobject+0x54>
        o->diry *= -1;
200001f8:	687b      	ldr	r3, [r7, #4]
200001fa:	689b      	ldr	r3, [r3, #8]
200001fc:	425a      	negs	r2, r3
200001fe:	687b      	ldr	r3, [r7, #4]
20000200:	609a      	str	r2, [r3, #8]
        new_posy = 64;
20000202:	2340      	movs	r3, #64	; 0x40
20000204:	60bb      	str	r3, [r7, #8]
        new_posy -= o->geo->sizey;
20000206:	687b      	ldr	r3, [r7, #4]
20000208:	681b      	ldr	r3, [r3, #0]
2000020a:	689b      	ldr	r3, [r3, #8]
2000020c:	68ba      	ldr	r2, [r7, #8]
2000020e:	1ad3      	subs	r3, r2, r3
20000210:	60bb      	str	r3, [r7, #8]
20000212:	e007      	b.n	20000224 <move_ballobject+0x64>
        
    } else if(new_posy< 1) {
20000214:	68bb      	ldr	r3, [r7, #8]
20000216:	2b00      	cmp	r3, #0
20000218:	dc04      	bgt.n	20000224 <move_ballobject+0x64>
        o->diry *= -1; 
2000021a:	687b      	ldr	r3, [r7, #4]
2000021c:	689b      	ldr	r3, [r3, #8]
2000021e:	425a      	negs	r2, r3
20000220:	687b      	ldr	r3, [r7, #4]
20000222:	609a      	str	r2, [r3, #8]
    }
    
    // check walls
    if(new_posx < 1 || new_posx > 128 ) {
20000224:	68fb      	ldr	r3, [r7, #12]
20000226:	2b00      	cmp	r3, #0
20000228:	dd02      	ble.n	20000230 <move_ballobject+0x70>
2000022a:	68fb      	ldr	r3, [r7, #12]
2000022c:	2b80      	cmp	r3, #128	; 0x80
2000022e:	dd06      	ble.n	2000023e <move_ballobject+0x7e>
        o->dirx *= -1;
20000230:	687b      	ldr	r3, [r7, #4]
20000232:	685b      	ldr	r3, [r3, #4]
20000234:	425a      	negs	r2, r3
20000236:	687b      	ldr	r3, [r7, #4]
20000238:	605a      	str	r2, [r3, #4]
        new_posx = 1;
2000023a:	2301      	movs	r3, #1
2000023c:	60fb      	str	r3, [r7, #12]
    }
    
    //efter uträkningar, uppdatera pos för x och y till nya värderna.
    
    o->posx = new_posx;
2000023e:	68fa      	ldr	r2, [r7, #12]
20000240:	687b      	ldr	r3, [r7, #4]
20000242:	60da      	str	r2, [r3, #12]
    o->posy = new_posy;
20000244:	68ba      	ldr	r2, [r7, #8]
20000246:	687b      	ldr	r3, [r7, #4]
20000248:	611a      	str	r2, [r3, #16]
    draw_ballobject(o);
2000024a:	687b      	ldr	r3, [r7, #4]
2000024c:	0018      	movs	r0, r3
2000024e:	f7ff ff55 	bl	200000fc <draw_ballobject>
    
}
20000252:	46c0      	nop			; (mov r8, r8)
20000254:	46bd      	mov	sp, r7
20000256:	b004      	add	sp, #16
20000258:	bd80      	pop	{r7, pc}

2000025a <set_ballobject_speed>:

static void set_ballobject_speed( POBJECT o, int speedx, int speedy) {
2000025a:	b580      	push	{r7, lr}
2000025c:	b084      	sub	sp, #16
2000025e:	af00      	add	r7, sp, #0
20000260:	60f8      	str	r0, [r7, #12]
20000262:	60b9      	str	r1, [r7, #8]
20000264:	607a      	str	r2, [r7, #4]
    o->dirx = speedx;
20000266:	68fb      	ldr	r3, [r7, #12]
20000268:	68ba      	ldr	r2, [r7, #8]
2000026a:	605a      	str	r2, [r3, #4]
    o->diry = speedy; // skumt
2000026c:	68fb      	ldr	r3, [r7, #12]
2000026e:	687a      	ldr	r2, [r7, #4]
20000270:	609a      	str	r2, [r3, #8]
}
20000272:	46c0      	nop			; (mov r8, r8)
20000274:	46bd      	mov	sp, r7
20000276:	b004      	add	sp, #16
20000278:	bd80      	pop	{r7, pc}

2000027a <keyb>:



unsigned char keyb(void){
2000027a:	b590      	push	{r4, r7, lr}
2000027c:	b087      	sub	sp, #28
2000027e:	af00      	add	r7, sp, #0
    int col, row;
    unsigned char key[] = {1, 2, 3, 0xA, 4, 5, 6, 0xB, 7, 8, 9, 0xC, 0xE, 0, 0xF, 0xD };
20000280:	003b      	movs	r3, r7
20000282:	4a16      	ldr	r2, [pc, #88]	; (200002dc <keyb+0x62>)
20000284:	ca13      	ldmia	r2!, {r0, r1, r4}
20000286:	c313      	stmia	r3!, {r0, r1, r4}
20000288:	6812      	ldr	r2, [r2, #0]
2000028a:	601a      	str	r2, [r3, #0]
    
    for(row = 1; row <= 4; row++) {
2000028c:	2301      	movs	r3, #1
2000028e:	617b      	str	r3, [r7, #20]
20000290:	e019      	b.n	200002c6 <keyb+0x4c>
        Activate_row(row);       
20000292:	697b      	ldr	r3, [r7, #20]
20000294:	0018      	movs	r0, r3
20000296:	f000 f823 	bl	200002e0 <Activate_row>
        col = Read_colomn();
2000029a:	f000 f853 	bl	20000344 <Read_colomn>
2000029e:	0003      	movs	r3, r0
200002a0:	613b      	str	r3, [r7, #16]
        if( (col != 0 )) {
200002a2:	693b      	ldr	r3, [r7, #16]
200002a4:	2b00      	cmp	r3, #0
200002a6:	d00b      	beq.n	200002c0 <keyb+0x46>
            Activate_row(0);
200002a8:	2000      	movs	r0, #0
200002aa:	f000 f819 	bl	200002e0 <Activate_row>
            return key [4*(row-1)+(col-1) ];
200002ae:	697b      	ldr	r3, [r7, #20]
200002b0:	3b01      	subs	r3, #1
200002b2:	009a      	lsls	r2, r3, #2
200002b4:	693b      	ldr	r3, [r7, #16]
200002b6:	3b01      	subs	r3, #1
200002b8:	18d3      	adds	r3, r2, r3
200002ba:	003a      	movs	r2, r7
200002bc:	5cd3      	ldrb	r3, [r2, r3]
200002be:	e009      	b.n	200002d4 <keyb+0x5a>
    for(row = 1; row <= 4; row++) {
200002c0:	697b      	ldr	r3, [r7, #20]
200002c2:	3301      	adds	r3, #1
200002c4:	617b      	str	r3, [r7, #20]
200002c6:	697b      	ldr	r3, [r7, #20]
200002c8:	2b04      	cmp	r3, #4
200002ca:	dde2      	ble.n	20000292 <keyb+0x18>
        }
    }
    Activate_row(0);
200002cc:	2000      	movs	r0, #0
200002ce:	f000 f807 	bl	200002e0 <Activate_row>
    return 0xFF;
200002d2:	23ff      	movs	r3, #255	; 0xff
}
200002d4:	0018      	movs	r0, r3
200002d6:	46bd      	mov	sp, r7
200002d8:	b007      	add	sp, #28
200002da:	bd90      	pop	{r4, r7, pc}
200002dc:	200008ac 	andcs	r0, r0, ip, lsr #17

200002e0 <Activate_row>:

void Activate_row(unsigned int r){
200002e0:	b580      	push	{r7, lr}
200002e2:	b082      	sub	sp, #8
200002e4:	af00      	add	r7, sp, #0
200002e6:	6078      	str	r0, [r7, #4]
    
    switch(r) {
200002e8:	687b      	ldr	r3, [r7, #4]
200002ea:	2b04      	cmp	r3, #4
200002ec:	d01b      	beq.n	20000326 <Activate_row+0x46>
200002ee:	687b      	ldr	r3, [r7, #4]
200002f0:	2b04      	cmp	r3, #4
200002f2:	d81c      	bhi.n	2000032e <Activate_row+0x4e>
200002f4:	687b      	ldr	r3, [r7, #4]
200002f6:	2b03      	cmp	r3, #3
200002f8:	d011      	beq.n	2000031e <Activate_row+0x3e>
200002fa:	687b      	ldr	r3, [r7, #4]
200002fc:	2b03      	cmp	r3, #3
200002fe:	d816      	bhi.n	2000032e <Activate_row+0x4e>
20000300:	687b      	ldr	r3, [r7, #4]
20000302:	2b01      	cmp	r3, #1
20000304:	d003      	beq.n	2000030e <Activate_row+0x2e>
20000306:	687b      	ldr	r3, [r7, #4]
20000308:	2b02      	cmp	r3, #2
2000030a:	d004      	beq.n	20000316 <Activate_row+0x36>
2000030c:	e00f      	b.n	2000032e <Activate_row+0x4e>
        
        case 1: *GPIO_ODR_HIGH = 0x10; break;
2000030e:	4b0c      	ldr	r3, [pc, #48]	; (20000340 <Activate_row+0x60>)
20000310:	2210      	movs	r2, #16
20000312:	701a      	strb	r2, [r3, #0]
20000314:	e00f      	b.n	20000336 <Activate_row+0x56>
        case 2: *GPIO_ODR_HIGH = 0x20; break;
20000316:	4b0a      	ldr	r3, [pc, #40]	; (20000340 <Activate_row+0x60>)
20000318:	2220      	movs	r2, #32
2000031a:	701a      	strb	r2, [r3, #0]
2000031c:	e00b      	b.n	20000336 <Activate_row+0x56>
        case 3: *GPIO_ODR_HIGH = 0x40; break;
2000031e:	4b08      	ldr	r3, [pc, #32]	; (20000340 <Activate_row+0x60>)
20000320:	2240      	movs	r2, #64	; 0x40
20000322:	701a      	strb	r2, [r3, #0]
20000324:	e007      	b.n	20000336 <Activate_row+0x56>
        case 4: *GPIO_ODR_HIGH = 0x80; break;
20000326:	4b06      	ldr	r3, [pc, #24]	; (20000340 <Activate_row+0x60>)
20000328:	2280      	movs	r2, #128	; 0x80
2000032a:	701a      	strb	r2, [r3, #0]
2000032c:	e003      	b.n	20000336 <Activate_row+0x56>
        default: *GPIO_ODR_HIGH = 0x00; break;
2000032e:	4b04      	ldr	r3, [pc, #16]	; (20000340 <Activate_row+0x60>)
20000330:	2200      	movs	r2, #0
20000332:	701a      	strb	r2, [r3, #0]
20000334:	46c0      	nop			; (mov r8, r8)
        
    }
}
20000336:	46c0      	nop			; (mov r8, r8)
20000338:	46bd      	mov	sp, r7
2000033a:	b002      	add	sp, #8
2000033c:	bd80      	pop	{r7, pc}
2000033e:	46c0      	nop			; (mov r8, r8)
20000340:	40020c15 	andmi	r0, r2, r5, lsl ip

20000344 <Read_colomn>:

int Read_colomn(void){
20000344:	b580      	push	{r7, lr}
20000346:	b082      	sub	sp, #8
20000348:	af00      	add	r7, sp, #0
    
    unsigned char c;
    c = *GPIO_IDR_HIGH;
2000034a:	4a12      	ldr	r2, [pc, #72]	; (20000394 <Read_colomn+0x50>)
2000034c:	1dfb      	adds	r3, r7, #7
2000034e:	7812      	ldrb	r2, [r2, #0]
20000350:	701a      	strb	r2, [r3, #0]
    
    if(c & 0x8) return 4;
20000352:	1dfb      	adds	r3, r7, #7
20000354:	781b      	ldrb	r3, [r3, #0]
20000356:	2208      	movs	r2, #8
20000358:	4013      	ands	r3, r2
2000035a:	d001      	beq.n	20000360 <Read_colomn+0x1c>
2000035c:	2304      	movs	r3, #4
2000035e:	e015      	b.n	2000038c <Read_colomn+0x48>
    if(c & 0x4) return 3;
20000360:	1dfb      	adds	r3, r7, #7
20000362:	781b      	ldrb	r3, [r3, #0]
20000364:	2204      	movs	r2, #4
20000366:	4013      	ands	r3, r2
20000368:	d001      	beq.n	2000036e <Read_colomn+0x2a>
2000036a:	2303      	movs	r3, #3
2000036c:	e00e      	b.n	2000038c <Read_colomn+0x48>
    if(c & 0x2) return 2;
2000036e:	1dfb      	adds	r3, r7, #7
20000370:	781b      	ldrb	r3, [r3, #0]
20000372:	2202      	movs	r2, #2
20000374:	4013      	ands	r3, r2
20000376:	d001      	beq.n	2000037c <Read_colomn+0x38>
20000378:	2302      	movs	r3, #2
2000037a:	e007      	b.n	2000038c <Read_colomn+0x48>
    if(c & 0x1) return 1;
2000037c:	1dfb      	adds	r3, r7, #7
2000037e:	781b      	ldrb	r3, [r3, #0]
20000380:	2201      	movs	r2, #1
20000382:	4013      	ands	r3, r2
20000384:	d001      	beq.n	2000038a <Read_colomn+0x46>
20000386:	2301      	movs	r3, #1
20000388:	e000      	b.n	2000038c <Read_colomn+0x48>
    return 0;
2000038a:	2300      	movs	r3, #0
}
2000038c:	0018      	movs	r0, r3
2000038e:	46bd      	mov	sp, r7
20000390:	b002      	add	sp, #8
20000392:	bd80      	pop	{r7, pc}
20000394:	40020c11 	andmi	r0, r2, r1, lsl ip

20000398 <draw_polygon>:



void draw_polygon(PPOLYPOINT start) {
20000398:	b580      	push	{r7, lr}
2000039a:	b086      	sub	sp, #24
2000039c:	af00      	add	r7, sp, #0
2000039e:	6078      	str	r0, [r7, #4]
    
    PPOLYPOINT p0, p1;
    
    p0 = start;
200003a0:	687b      	ldr	r3, [r7, #4]
200003a2:	617b      	str	r3, [r7, #20]
    p1 = start->next;
200003a4:	687b      	ldr	r3, [r7, #4]
200003a6:	685b      	ldr	r3, [r3, #4]
200003a8:	613b      	str	r3, [r7, #16]
    
    while(p0->next != 0) {
200003aa:	e019      	b.n	200003e0 <draw_polygon+0x48>

        LINE line = {p0->x, p0->y, p1->x, p1->y};
200003ac:	697b      	ldr	r3, [r7, #20]
200003ae:	781a      	ldrb	r2, [r3, #0]
200003b0:	210c      	movs	r1, #12
200003b2:	187b      	adds	r3, r7, r1
200003b4:	701a      	strb	r2, [r3, #0]
200003b6:	697b      	ldr	r3, [r7, #20]
200003b8:	785a      	ldrb	r2, [r3, #1]
200003ba:	187b      	adds	r3, r7, r1
200003bc:	705a      	strb	r2, [r3, #1]
200003be:	693b      	ldr	r3, [r7, #16]
200003c0:	781a      	ldrb	r2, [r3, #0]
200003c2:	187b      	adds	r3, r7, r1
200003c4:	709a      	strb	r2, [r3, #2]
200003c6:	693b      	ldr	r3, [r7, #16]
200003c8:	785a      	ldrb	r2, [r3, #1]
200003ca:	187b      	adds	r3, r7, r1
200003cc:	70da      	strb	r2, [r3, #3]
        draw_line(&line);
200003ce:	187b      	adds	r3, r7, r1
200003d0:	0018      	movs	r0, r3
200003d2:	f000 f88a 	bl	200004ea <draw_line>
        
        p0 = p1;
200003d6:	693b      	ldr	r3, [r7, #16]
200003d8:	617b      	str	r3, [r7, #20]
        p1 = p1->next;
200003da:	693b      	ldr	r3, [r7, #16]
200003dc:	685b      	ldr	r3, [r3, #4]
200003de:	613b      	str	r3, [r7, #16]
    while(p0->next != 0) {
200003e0:	697b      	ldr	r3, [r7, #20]
200003e2:	685b      	ldr	r3, [r3, #4]
200003e4:	2b00      	cmp	r3, #0
200003e6:	d1e1      	bne.n	200003ac <draw_polygon+0x14>
    }
    
}
200003e8:	46c0      	nop			; (mov r8, r8)
200003ea:	46c0      	nop			; (mov r8, r8)
200003ec:	46bd      	mov	sp, r7
200003ee:	b006      	add	sp, #24
200003f0:	bd80      	pop	{r7, pc}

200003f2 <draw_rectagle>:

void draw_rectagle(PRECT r) {
200003f2:	b580      	push	{r7, lr}
200003f4:	b086      	sub	sp, #24
200003f6:	af00      	add	r7, sp, #0
200003f8:	6078      	str	r0, [r7, #4]
                // startpunkt                          slutpunkt
        // skriver en linje mellan två punkter, detta sker 4 gånger för att bilda en rektangel
    LINE line = {r->p0.x, r->p0.y,              r->p0.x + r->x, r->p0.y}; // (start, end) == (startx, starty,    endx, endy)
200003fa:	687b      	ldr	r3, [r7, #4]
200003fc:	781a      	ldrb	r2, [r3, #0]
200003fe:	2114      	movs	r1, #20
20000400:	187b      	adds	r3, r7, r1
20000402:	701a      	strb	r2, [r3, #0]
20000404:	687b      	ldr	r3, [r7, #4]
20000406:	785a      	ldrb	r2, [r3, #1]
20000408:	187b      	adds	r3, r7, r1
2000040a:	705a      	strb	r2, [r3, #1]
2000040c:	687b      	ldr	r3, [r7, #4]
2000040e:	781a      	ldrb	r2, [r3, #0]
20000410:	687b      	ldr	r3, [r7, #4]
20000412:	789b      	ldrb	r3, [r3, #2]
20000414:	18d3      	adds	r3, r2, r3
20000416:	b2da      	uxtb	r2, r3
20000418:	187b      	adds	r3, r7, r1
2000041a:	709a      	strb	r2, [r3, #2]
2000041c:	687b      	ldr	r3, [r7, #4]
2000041e:	785a      	ldrb	r2, [r3, #1]
20000420:	187b      	adds	r3, r7, r1
20000422:	70da      	strb	r2, [r3, #3]
    draw_line ( &line ); 
20000424:	187b      	adds	r3, r7, r1
20000426:	0018      	movs	r0, r3
20000428:	f000 f85f 	bl	200004ea <draw_line>
    
    LINE line2 = {r->p0.x + r->x, r->p0.y,               r->p0.x + r->x, r->p0.y + r->y};
2000042c:	687b      	ldr	r3, [r7, #4]
2000042e:	781a      	ldrb	r2, [r3, #0]
20000430:	687b      	ldr	r3, [r7, #4]
20000432:	789b      	ldrb	r3, [r3, #2]
20000434:	18d3      	adds	r3, r2, r3
20000436:	b2da      	uxtb	r2, r3
20000438:	2110      	movs	r1, #16
2000043a:	187b      	adds	r3, r7, r1
2000043c:	701a      	strb	r2, [r3, #0]
2000043e:	687b      	ldr	r3, [r7, #4]
20000440:	785a      	ldrb	r2, [r3, #1]
20000442:	187b      	adds	r3, r7, r1
20000444:	705a      	strb	r2, [r3, #1]
20000446:	687b      	ldr	r3, [r7, #4]
20000448:	781a      	ldrb	r2, [r3, #0]
2000044a:	687b      	ldr	r3, [r7, #4]
2000044c:	789b      	ldrb	r3, [r3, #2]
2000044e:	18d3      	adds	r3, r2, r3
20000450:	b2da      	uxtb	r2, r3
20000452:	187b      	adds	r3, r7, r1
20000454:	709a      	strb	r2, [r3, #2]
20000456:	687b      	ldr	r3, [r7, #4]
20000458:	785a      	ldrb	r2, [r3, #1]
2000045a:	687b      	ldr	r3, [r7, #4]
2000045c:	78db      	ldrb	r3, [r3, #3]
2000045e:	18d3      	adds	r3, r2, r3
20000460:	b2da      	uxtb	r2, r3
20000462:	187b      	adds	r3, r7, r1
20000464:	70da      	strb	r2, [r3, #3]
    draw_line ( &line2 );
20000466:	187b      	adds	r3, r7, r1
20000468:	0018      	movs	r0, r3
2000046a:	f000 f83e 	bl	200004ea <draw_line>
    
    LINE line3 = { r->p0.x + r->x, r->p0.y + r->y,        r->p0.x, r->p0.y + r->y};
2000046e:	687b      	ldr	r3, [r7, #4]
20000470:	781a      	ldrb	r2, [r3, #0]
20000472:	687b      	ldr	r3, [r7, #4]
20000474:	789b      	ldrb	r3, [r3, #2]
20000476:	18d3      	adds	r3, r2, r3
20000478:	b2da      	uxtb	r2, r3
2000047a:	210c      	movs	r1, #12
2000047c:	187b      	adds	r3, r7, r1
2000047e:	701a      	strb	r2, [r3, #0]
20000480:	687b      	ldr	r3, [r7, #4]
20000482:	785a      	ldrb	r2, [r3, #1]
20000484:	687b      	ldr	r3, [r7, #4]
20000486:	78db      	ldrb	r3, [r3, #3]
20000488:	18d3      	adds	r3, r2, r3
2000048a:	b2da      	uxtb	r2, r3
2000048c:	187b      	adds	r3, r7, r1
2000048e:	705a      	strb	r2, [r3, #1]
20000490:	687b      	ldr	r3, [r7, #4]
20000492:	781a      	ldrb	r2, [r3, #0]
20000494:	187b      	adds	r3, r7, r1
20000496:	709a      	strb	r2, [r3, #2]
20000498:	687b      	ldr	r3, [r7, #4]
2000049a:	785a      	ldrb	r2, [r3, #1]
2000049c:	687b      	ldr	r3, [r7, #4]
2000049e:	78db      	ldrb	r3, [r3, #3]
200004a0:	18d3      	adds	r3, r2, r3
200004a2:	b2da      	uxtb	r2, r3
200004a4:	187b      	adds	r3, r7, r1
200004a6:	70da      	strb	r2, [r3, #3]
    draw_line ( &line3 );
200004a8:	187b      	adds	r3, r7, r1
200004aa:	0018      	movs	r0, r3
200004ac:	f000 f81d 	bl	200004ea <draw_line>
    
    LINE line4 = { r->p0.x, r->p0.y + r->y,               r->p0.x, r->p0.y};
200004b0:	687b      	ldr	r3, [r7, #4]
200004b2:	781a      	ldrb	r2, [r3, #0]
200004b4:	2108      	movs	r1, #8
200004b6:	187b      	adds	r3, r7, r1
200004b8:	701a      	strb	r2, [r3, #0]
200004ba:	687b      	ldr	r3, [r7, #4]
200004bc:	785a      	ldrb	r2, [r3, #1]
200004be:	687b      	ldr	r3, [r7, #4]
200004c0:	78db      	ldrb	r3, [r3, #3]
200004c2:	18d3      	adds	r3, r2, r3
200004c4:	b2da      	uxtb	r2, r3
200004c6:	187b      	adds	r3, r7, r1
200004c8:	705a      	strb	r2, [r3, #1]
200004ca:	687b      	ldr	r3, [r7, #4]
200004cc:	781a      	ldrb	r2, [r3, #0]
200004ce:	187b      	adds	r3, r7, r1
200004d0:	709a      	strb	r2, [r3, #2]
200004d2:	687b      	ldr	r3, [r7, #4]
200004d4:	785a      	ldrb	r2, [r3, #1]
200004d6:	187b      	adds	r3, r7, r1
200004d8:	70da      	strb	r2, [r3, #3]
    draw_line ( &line4 );
200004da:	187b      	adds	r3, r7, r1
200004dc:	0018      	movs	r0, r3
200004de:	f000 f804 	bl	200004ea <draw_line>
}
200004e2:	46c0      	nop			; (mov r8, r8)
200004e4:	46bd      	mov	sp, r7
200004e6:	b006      	add	sp, #24
200004e8:	bd80      	pop	{r7, pc}

200004ea <draw_line>:

int draw_line(PLINE l){
200004ea:	b580      	push	{r7, lr}
200004ec:	b08a      	sub	sp, #40	; 0x28
200004ee:	af00      	add	r7, sp, #0
200004f0:	6078      	str	r0, [r7, #4]

    int steep, deltax, deltay, error = 0, ystep, temp, y;
200004f2:	2300      	movs	r3, #0
200004f4:	623b      	str	r3, [r7, #32]
    
    
    if( abs(l->p1.y - l->p0.y) > abs(l->p1.x - l->p0.x) ) {
200004f6:	687b      	ldr	r3, [r7, #4]
200004f8:	78db      	ldrb	r3, [r3, #3]
200004fa:	001a      	movs	r2, r3
200004fc:	687b      	ldr	r3, [r7, #4]
200004fe:	785b      	ldrb	r3, [r3, #1]
20000500:	1ad3      	subs	r3, r2, r3
20000502:	17d9      	asrs	r1, r3, #31
20000504:	185a      	adds	r2, r3, r1
20000506:	404a      	eors	r2, r1
20000508:	687b      	ldr	r3, [r7, #4]
2000050a:	789b      	ldrb	r3, [r3, #2]
2000050c:	0019      	movs	r1, r3
2000050e:	687b      	ldr	r3, [r7, #4]
20000510:	781b      	ldrb	r3, [r3, #0]
20000512:	1acb      	subs	r3, r1, r3
20000514:	17d9      	asrs	r1, r3, #31
20000516:	185b      	adds	r3, r3, r1
20000518:	404b      	eors	r3, r1
2000051a:	429a      	cmp	r2, r3
2000051c:	dd02      	ble.n	20000524 <draw_line+0x3a>
        steep = 1;
2000051e:	2301      	movs	r3, #1
20000520:	627b      	str	r3, [r7, #36]	; 0x24
20000522:	e001      	b.n	20000528 <draw_line+0x3e>
    } else { // <=
        steep = 0;
20000524:	2300      	movs	r3, #0
20000526:	627b      	str	r3, [r7, #36]	; 0x24
    }
        
    if( steep == 1) {
20000528:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000052a:	2b01      	cmp	r3, #1
2000052c:	d115      	bne.n	2000055a <draw_line+0x70>
        
        temp = l->p0.x;
2000052e:	687b      	ldr	r3, [r7, #4]
20000530:	781b      	ldrb	r3, [r3, #0]
20000532:	613b      	str	r3, [r7, #16]
        l->p0.x = l->p0.y;
20000534:	687b      	ldr	r3, [r7, #4]
20000536:	785a      	ldrb	r2, [r3, #1]
20000538:	687b      	ldr	r3, [r7, #4]
2000053a:	701a      	strb	r2, [r3, #0]
        l->p0.y = temp;
2000053c:	693b      	ldr	r3, [r7, #16]
2000053e:	b2da      	uxtb	r2, r3
20000540:	687b      	ldr	r3, [r7, #4]
20000542:	705a      	strb	r2, [r3, #1]
        
        temp = l->p1.x;
20000544:	687b      	ldr	r3, [r7, #4]
20000546:	789b      	ldrb	r3, [r3, #2]
20000548:	613b      	str	r3, [r7, #16]
        l->p1.x = l->p1.y;
2000054a:	687b      	ldr	r3, [r7, #4]
2000054c:	78da      	ldrb	r2, [r3, #3]
2000054e:	687b      	ldr	r3, [r7, #4]
20000550:	709a      	strb	r2, [r3, #2]
        l->p1.y = temp;
20000552:	693b      	ldr	r3, [r7, #16]
20000554:	b2da      	uxtb	r2, r3
20000556:	687b      	ldr	r3, [r7, #4]
20000558:	70da      	strb	r2, [r3, #3]
    }
 
    if ( l->p0.x > l->p1.x) {
2000055a:	687b      	ldr	r3, [r7, #4]
2000055c:	781a      	ldrb	r2, [r3, #0]
2000055e:	687b      	ldr	r3, [r7, #4]
20000560:	789b      	ldrb	r3, [r3, #2]
20000562:	429a      	cmp	r2, r3
20000564:	d915      	bls.n	20000592 <draw_line+0xa8>
        
        temp = l->p0.x;
20000566:	687b      	ldr	r3, [r7, #4]
20000568:	781b      	ldrb	r3, [r3, #0]
2000056a:	613b      	str	r3, [r7, #16]
        l->p0.x = l->p1.x;
2000056c:	687b      	ldr	r3, [r7, #4]
2000056e:	789a      	ldrb	r2, [r3, #2]
20000570:	687b      	ldr	r3, [r7, #4]
20000572:	701a      	strb	r2, [r3, #0]
        l->p1.x = temp;
20000574:	693b      	ldr	r3, [r7, #16]
20000576:	b2da      	uxtb	r2, r3
20000578:	687b      	ldr	r3, [r7, #4]
2000057a:	709a      	strb	r2, [r3, #2]
        
        temp = l->p0.y;
2000057c:	687b      	ldr	r3, [r7, #4]
2000057e:	785b      	ldrb	r3, [r3, #1]
20000580:	613b      	str	r3, [r7, #16]
        l->p0.y = l->p1.y;
20000582:	687b      	ldr	r3, [r7, #4]
20000584:	78da      	ldrb	r2, [r3, #3]
20000586:	687b      	ldr	r3, [r7, #4]
20000588:	705a      	strb	r2, [r3, #1]
        l->p1.y = temp;
2000058a:	693b      	ldr	r3, [r7, #16]
2000058c:	b2da      	uxtb	r2, r3
2000058e:	687b      	ldr	r3, [r7, #4]
20000590:	70da      	strb	r2, [r3, #3]
    }
    
    deltax = l->p1.x - l->p0.x;
20000592:	687b      	ldr	r3, [r7, #4]
20000594:	789b      	ldrb	r3, [r3, #2]
20000596:	001a      	movs	r2, r3
20000598:	687b      	ldr	r3, [r7, #4]
2000059a:	781b      	ldrb	r3, [r3, #0]
2000059c:	1ad3      	subs	r3, r2, r3
2000059e:	60fb      	str	r3, [r7, #12]
    deltay = abs(l->p1.y - l->p0.y);
200005a0:	687b      	ldr	r3, [r7, #4]
200005a2:	78db      	ldrb	r3, [r3, #3]
200005a4:	001a      	movs	r2, r3
200005a6:	687b      	ldr	r3, [r7, #4]
200005a8:	785b      	ldrb	r3, [r3, #1]
200005aa:	1ad3      	subs	r3, r2, r3
200005ac:	17da      	asrs	r2, r3, #31
200005ae:	189b      	adds	r3, r3, r2
200005b0:	4053      	eors	r3, r2
200005b2:	60bb      	str	r3, [r7, #8]
    
    y = l->p0.y;
200005b4:	687b      	ldr	r3, [r7, #4]
200005b6:	785b      	ldrb	r3, [r3, #1]
200005b8:	61bb      	str	r3, [r7, #24]
    
    if(l->p0.y < l->p1.y) {
200005ba:	687b      	ldr	r3, [r7, #4]
200005bc:	785a      	ldrb	r2, [r3, #1]
200005be:	687b      	ldr	r3, [r7, #4]
200005c0:	78db      	ldrb	r3, [r3, #3]
200005c2:	429a      	cmp	r2, r3
200005c4:	d202      	bcs.n	200005cc <draw_line+0xe2>
        ystep = 1;
200005c6:	2301      	movs	r3, #1
200005c8:	61fb      	str	r3, [r7, #28]
200005ca:	e002      	b.n	200005d2 <draw_line+0xe8>
    } else {
        ystep = -1;
200005cc:	2301      	movs	r3, #1
200005ce:	425b      	negs	r3, r3
200005d0:	61fb      	str	r3, [r7, #28]
    }
    
    for(int x = l->p0.x; x <= l->p1.x; x++) {
200005d2:	687b      	ldr	r3, [r7, #4]
200005d4:	781b      	ldrb	r3, [r3, #0]
200005d6:	617b      	str	r3, [r7, #20]
200005d8:	e023      	b.n	20000622 <draw_line+0x138>
        if( steep == 1) {
200005da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200005dc:	2b01      	cmp	r3, #1
200005de:	d106      	bne.n	200005ee <draw_line+0x104>
            graphic_pixel_set(y,x);
200005e0:	697a      	ldr	r2, [r7, #20]
200005e2:	69bb      	ldr	r3, [r7, #24]
200005e4:	0011      	movs	r1, r2
200005e6:	0018      	movs	r0, r3
200005e8:	f7ff fd18 	bl	2000001c <graphic_pixel_set>
200005ec:	e005      	b.n	200005fa <draw_line+0x110>
        }
        else  {
            graphic_pixel_set(x,y);
200005ee:	69ba      	ldr	r2, [r7, #24]
200005f0:	697b      	ldr	r3, [r7, #20]
200005f2:	0011      	movs	r1, r2
200005f4:	0018      	movs	r0, r3
200005f6:	f7ff fd11 	bl	2000001c <graphic_pixel_set>
        }
        
        error += deltay;
200005fa:	6a3a      	ldr	r2, [r7, #32]
200005fc:	68bb      	ldr	r3, [r7, #8]
200005fe:	18d3      	adds	r3, r2, r3
20000600:	623b      	str	r3, [r7, #32]
        if( 2 * error >= deltax) {
20000602:	6a3b      	ldr	r3, [r7, #32]
20000604:	005b      	lsls	r3, r3, #1
20000606:	68fa      	ldr	r2, [r7, #12]
20000608:	429a      	cmp	r2, r3
2000060a:	dc07      	bgt.n	2000061c <draw_line+0x132>
            y += ystep;
2000060c:	69ba      	ldr	r2, [r7, #24]
2000060e:	69fb      	ldr	r3, [r7, #28]
20000610:	18d3      	adds	r3, r2, r3
20000612:	61bb      	str	r3, [r7, #24]
            error -= deltax;
20000614:	6a3a      	ldr	r2, [r7, #32]
20000616:	68fb      	ldr	r3, [r7, #12]
20000618:	1ad3      	subs	r3, r2, r3
2000061a:	623b      	str	r3, [r7, #32]
    for(int x = l->p0.x; x <= l->p1.x; x++) {
2000061c:	697b      	ldr	r3, [r7, #20]
2000061e:	3301      	adds	r3, #1
20000620:	617b      	str	r3, [r7, #20]
20000622:	687b      	ldr	r3, [r7, #4]
20000624:	789b      	ldrb	r3, [r3, #2]
20000626:	001a      	movs	r2, r3
20000628:	697b      	ldr	r3, [r7, #20]
2000062a:	4293      	cmp	r3, r2
2000062c:	ddd5      	ble.n	200005da <draw_line+0xf0>
        }
    }
    
    return 0;
2000062e:	2300      	movs	r3, #0
}
20000630:	0018      	movs	r0, r3
20000632:	46bd      	mov	sp, r7
20000634:	b00a      	add	sp, #40	; 0x28
20000636:	bd80      	pop	{r7, pc}

20000638 <delay_250ns>:

void delay_250ns(void) {
20000638:	b580      	push	{r7, lr}
2000063a:	af00      	add	r7, sp, #0
    
    /* SystemCoreClock = 168000000 */
    *STK_CTRL = 0;
2000063c:	4b0c      	ldr	r3, [pc, #48]	; (20000670 <delay_250ns+0x38>)
2000063e:	2200      	movs	r2, #0
20000640:	601a      	str	r2, [r3, #0]
    *STK_LOAD = ( (168/4) -1 );
20000642:	4b0c      	ldr	r3, [pc, #48]	; (20000674 <delay_250ns+0x3c>)
20000644:	2229      	movs	r2, #41	; 0x29
20000646:	601a      	str	r2, [r3, #0]
    *STK_VAL = 0;
20000648:	4b0b      	ldr	r3, [pc, #44]	; (20000678 <delay_250ns+0x40>)
2000064a:	2200      	movs	r2, #0
2000064c:	601a      	str	r2, [r3, #0]
    *STK_CTRL = 5;
2000064e:	4b08      	ldr	r3, [pc, #32]	; (20000670 <delay_250ns+0x38>)
20000650:	2205      	movs	r2, #5
20000652:	601a      	str	r2, [r3, #0]
    while( (*STK_CTRL & 0x10000 ) == 0 );
20000654:	46c0      	nop			; (mov r8, r8)
20000656:	4b06      	ldr	r3, [pc, #24]	; (20000670 <delay_250ns+0x38>)
20000658:	681a      	ldr	r2, [r3, #0]
2000065a:	2380      	movs	r3, #128	; 0x80
2000065c:	025b      	lsls	r3, r3, #9
2000065e:	4013      	ands	r3, r2
20000660:	d0f9      	beq.n	20000656 <delay_250ns+0x1e>
    *STK_CTRL = 0;
20000662:	4b03      	ldr	r3, [pc, #12]	; (20000670 <delay_250ns+0x38>)
20000664:	2200      	movs	r2, #0
20000666:	601a      	str	r2, [r3, #0]
}
20000668:	46c0      	nop			; (mov r8, r8)
2000066a:	46bd      	mov	sp, r7
2000066c:	bd80      	pop	{r7, pc}
2000066e:	46c0      	nop			; (mov r8, r8)
20000670:	e000e010 	and	lr, r0, r0, lsl r0
20000674:	e000e020 	and	lr, r0, r0, lsr #32
20000678:	e000e030 	and	lr, r0, r0, lsr r0

2000067c <delay_milli>:

void delay_milli(unsigned int ms) {
2000067c:	b580      	push	{r7, lr}
2000067e:	b082      	sub	sp, #8
20000680:	af00      	add	r7, sp, #0
20000682:	6078      	str	r0, [r7, #4]
    
    #ifdef SIMULATOR
        ms = ms/1000;
20000684:	687b      	ldr	r3, [r7, #4]
20000686:	22fa      	movs	r2, #250	; 0xfa
20000688:	0091      	lsls	r1, r2, #2
2000068a:	0018      	movs	r0, r3
2000068c:	f000 f83a 	bl	20000704 <__udivsi3>
20000690:	0003      	movs	r3, r0
20000692:	607b      	str	r3, [r7, #4]
        ms++;
20000694:	687b      	ldr	r3, [r7, #4]
20000696:	3301      	adds	r3, #1
20000698:	607b      	str	r3, [r7, #4]
    #endif
    
    ms *= 1000;
2000069a:	687a      	ldr	r2, [r7, #4]
2000069c:	0013      	movs	r3, r2
2000069e:	015b      	lsls	r3, r3, #5
200006a0:	1a9b      	subs	r3, r3, r2
200006a2:	009b      	lsls	r3, r3, #2
200006a4:	189b      	adds	r3, r3, r2
200006a6:	00db      	lsls	r3, r3, #3
200006a8:	607b      	str	r3, [r7, #4]
    
    while( ms > 0 )
200006aa:	e00a      	b.n	200006c2 <delay_milli+0x46>
    {
        
    delay_250ns(); 
200006ac:	f7ff ffc4 	bl	20000638 <delay_250ns>
    delay_250ns();
200006b0:	f7ff ffc2 	bl	20000638 <delay_250ns>
    delay_250ns();
200006b4:	f7ff ffc0 	bl	20000638 <delay_250ns>
    delay_250ns();
200006b8:	f7ff ffbe 	bl	20000638 <delay_250ns>
    ms--;
200006bc:	687b      	ldr	r3, [r7, #4]
200006be:	3b01      	subs	r3, #1
200006c0:	607b      	str	r3, [r7, #4]
    while( ms > 0 )
200006c2:	687b      	ldr	r3, [r7, #4]
200006c4:	2b00      	cmp	r3, #0
200006c6:	d1f1      	bne.n	200006ac <delay_milli+0x30>
    }
}
200006c8:	46c0      	nop			; (mov r8, r8)
200006ca:	46c0      	nop			; (mov r8, r8)
200006cc:	46bd      	mov	sp, r7
200006ce:	b002      	add	sp, #8
200006d0:	bd80      	pop	{r7, pc}

200006d2 <delay_mikro>:

void delay_mikro(unsigned int us) {
200006d2:	b580      	push	{r7, lr}
200006d4:	b082      	sub	sp, #8
200006d6:	af00      	add	r7, sp, #0
200006d8:	6078      	str	r0, [r7, #4]
    
    while( us > 0 ) {
200006da:	e00a      	b.n	200006f2 <delay_mikro+0x20>
    
    delay_250ns();
200006dc:	f7ff ffac 	bl	20000638 <delay_250ns>
    delay_250ns();
200006e0:	f7ff ffaa 	bl	20000638 <delay_250ns>
    delay_250ns();
200006e4:	f7ff ffa8 	bl	20000638 <delay_250ns>
    delay_250ns();
200006e8:	f7ff ffa6 	bl	20000638 <delay_250ns>
    us--;
200006ec:	687b      	ldr	r3, [r7, #4]
200006ee:	3b01      	subs	r3, #1
200006f0:	607b      	str	r3, [r7, #4]
    while( us > 0 ) {
200006f2:	687b      	ldr	r3, [r7, #4]
200006f4:	2b00      	cmp	r3, #0
200006f6:	d1f1      	bne.n	200006dc <delay_mikro+0xa>
    }
200006f8:	46c0      	nop			; (mov r8, r8)
200006fa:	46c0      	nop			; (mov r8, r8)
200006fc:	46bd      	mov	sp, r7
200006fe:	b002      	add	sp, #8
20000700:	bd80      	pop	{r7, pc}
20000702:	46c0      	nop			; (mov r8, r8)

20000704 <__udivsi3>:
20000704:	2200      	movs	r2, #0
20000706:	0843      	lsrs	r3, r0, #1
20000708:	428b      	cmp	r3, r1
2000070a:	d374      	bcc.n	200007f6 <__udivsi3+0xf2>
2000070c:	0903      	lsrs	r3, r0, #4
2000070e:	428b      	cmp	r3, r1
20000710:	d35f      	bcc.n	200007d2 <__udivsi3+0xce>
20000712:	0a03      	lsrs	r3, r0, #8
20000714:	428b      	cmp	r3, r1
20000716:	d344      	bcc.n	200007a2 <__udivsi3+0x9e>
20000718:	0b03      	lsrs	r3, r0, #12
2000071a:	428b      	cmp	r3, r1
2000071c:	d328      	bcc.n	20000770 <__udivsi3+0x6c>
2000071e:	0c03      	lsrs	r3, r0, #16
20000720:	428b      	cmp	r3, r1
20000722:	d30d      	bcc.n	20000740 <__udivsi3+0x3c>
20000724:	22ff      	movs	r2, #255	; 0xff
20000726:	0209      	lsls	r1, r1, #8
20000728:	ba12      	rev	r2, r2
2000072a:	0c03      	lsrs	r3, r0, #16
2000072c:	428b      	cmp	r3, r1
2000072e:	d302      	bcc.n	20000736 <__udivsi3+0x32>
20000730:	1212      	asrs	r2, r2, #8
20000732:	0209      	lsls	r1, r1, #8
20000734:	d065      	beq.n	20000802 <__udivsi3+0xfe>
20000736:	0b03      	lsrs	r3, r0, #12
20000738:	428b      	cmp	r3, r1
2000073a:	d319      	bcc.n	20000770 <__udivsi3+0x6c>
2000073c:	e000      	b.n	20000740 <__udivsi3+0x3c>
2000073e:	0a09      	lsrs	r1, r1, #8
20000740:	0bc3      	lsrs	r3, r0, #15
20000742:	428b      	cmp	r3, r1
20000744:	d301      	bcc.n	2000074a <__udivsi3+0x46>
20000746:	03cb      	lsls	r3, r1, #15
20000748:	1ac0      	subs	r0, r0, r3
2000074a:	4152      	adcs	r2, r2
2000074c:	0b83      	lsrs	r3, r0, #14
2000074e:	428b      	cmp	r3, r1
20000750:	d301      	bcc.n	20000756 <__udivsi3+0x52>
20000752:	038b      	lsls	r3, r1, #14
20000754:	1ac0      	subs	r0, r0, r3
20000756:	4152      	adcs	r2, r2
20000758:	0b43      	lsrs	r3, r0, #13
2000075a:	428b      	cmp	r3, r1
2000075c:	d301      	bcc.n	20000762 <__udivsi3+0x5e>
2000075e:	034b      	lsls	r3, r1, #13
20000760:	1ac0      	subs	r0, r0, r3
20000762:	4152      	adcs	r2, r2
20000764:	0b03      	lsrs	r3, r0, #12
20000766:	428b      	cmp	r3, r1
20000768:	d301      	bcc.n	2000076e <__udivsi3+0x6a>
2000076a:	030b      	lsls	r3, r1, #12
2000076c:	1ac0      	subs	r0, r0, r3
2000076e:	4152      	adcs	r2, r2
20000770:	0ac3      	lsrs	r3, r0, #11
20000772:	428b      	cmp	r3, r1
20000774:	d301      	bcc.n	2000077a <__udivsi3+0x76>
20000776:	02cb      	lsls	r3, r1, #11
20000778:	1ac0      	subs	r0, r0, r3
2000077a:	4152      	adcs	r2, r2
2000077c:	0a83      	lsrs	r3, r0, #10
2000077e:	428b      	cmp	r3, r1
20000780:	d301      	bcc.n	20000786 <__udivsi3+0x82>
20000782:	028b      	lsls	r3, r1, #10
20000784:	1ac0      	subs	r0, r0, r3
20000786:	4152      	adcs	r2, r2
20000788:	0a43      	lsrs	r3, r0, #9
2000078a:	428b      	cmp	r3, r1
2000078c:	d301      	bcc.n	20000792 <__udivsi3+0x8e>
2000078e:	024b      	lsls	r3, r1, #9
20000790:	1ac0      	subs	r0, r0, r3
20000792:	4152      	adcs	r2, r2
20000794:	0a03      	lsrs	r3, r0, #8
20000796:	428b      	cmp	r3, r1
20000798:	d301      	bcc.n	2000079e <__udivsi3+0x9a>
2000079a:	020b      	lsls	r3, r1, #8
2000079c:	1ac0      	subs	r0, r0, r3
2000079e:	4152      	adcs	r2, r2
200007a0:	d2cd      	bcs.n	2000073e <__udivsi3+0x3a>
200007a2:	09c3      	lsrs	r3, r0, #7
200007a4:	428b      	cmp	r3, r1
200007a6:	d301      	bcc.n	200007ac <__udivsi3+0xa8>
200007a8:	01cb      	lsls	r3, r1, #7
200007aa:	1ac0      	subs	r0, r0, r3
200007ac:	4152      	adcs	r2, r2
200007ae:	0983      	lsrs	r3, r0, #6
200007b0:	428b      	cmp	r3, r1
200007b2:	d301      	bcc.n	200007b8 <__udivsi3+0xb4>
200007b4:	018b      	lsls	r3, r1, #6
200007b6:	1ac0      	subs	r0, r0, r3
200007b8:	4152      	adcs	r2, r2
200007ba:	0943      	lsrs	r3, r0, #5
200007bc:	428b      	cmp	r3, r1
200007be:	d301      	bcc.n	200007c4 <__udivsi3+0xc0>
200007c0:	014b      	lsls	r3, r1, #5
200007c2:	1ac0      	subs	r0, r0, r3
200007c4:	4152      	adcs	r2, r2
200007c6:	0903      	lsrs	r3, r0, #4
200007c8:	428b      	cmp	r3, r1
200007ca:	d301      	bcc.n	200007d0 <__udivsi3+0xcc>
200007cc:	010b      	lsls	r3, r1, #4
200007ce:	1ac0      	subs	r0, r0, r3
200007d0:	4152      	adcs	r2, r2
200007d2:	08c3      	lsrs	r3, r0, #3
200007d4:	428b      	cmp	r3, r1
200007d6:	d301      	bcc.n	200007dc <__udivsi3+0xd8>
200007d8:	00cb      	lsls	r3, r1, #3
200007da:	1ac0      	subs	r0, r0, r3
200007dc:	4152      	adcs	r2, r2
200007de:	0883      	lsrs	r3, r0, #2
200007e0:	428b      	cmp	r3, r1
200007e2:	d301      	bcc.n	200007e8 <__udivsi3+0xe4>
200007e4:	008b      	lsls	r3, r1, #2
200007e6:	1ac0      	subs	r0, r0, r3
200007e8:	4152      	adcs	r2, r2
200007ea:	0843      	lsrs	r3, r0, #1
200007ec:	428b      	cmp	r3, r1
200007ee:	d301      	bcc.n	200007f4 <__udivsi3+0xf0>
200007f0:	004b      	lsls	r3, r1, #1
200007f2:	1ac0      	subs	r0, r0, r3
200007f4:	4152      	adcs	r2, r2
200007f6:	1a41      	subs	r1, r0, r1
200007f8:	d200      	bcs.n	200007fc <__udivsi3+0xf8>
200007fa:	4601      	mov	r1, r0
200007fc:	4152      	adcs	r2, r2
200007fe:	4610      	mov	r0, r2
20000800:	4770      	bx	lr
20000802:	e7ff      	b.n	20000804 <__udivsi3+0x100>
20000804:	b501      	push	{r0, lr}
20000806:	2000      	movs	r0, #0
20000808:	f000 f806 	bl	20000818 <__aeabi_idiv0>
2000080c:	bd02      	pop	{r1, pc}
2000080e:	46c0      	nop			; (mov r8, r8)

20000810 <__aeabi_uidivmod>:
20000810:	2900      	cmp	r1, #0
20000812:	d0f7      	beq.n	20000804 <__udivsi3+0x100>
20000814:	e776      	b.n	20000704 <__udivsi3>
20000816:	4770      	bx	lr

20000818 <__aeabi_idiv0>:
20000818:	4770      	bx	lr
2000081a:	46c0      	nop			; (mov r8, r8)

2000081c <ball_geometry>:
2000081c:	0000000c 	andeq	r0, r0, ip
20000820:	00000004 	andeq	r0, r0, r4
20000824:	00000004 	andeq	r0, r0, r4
20000828:	02000100 	andeq	r0, r0, #0
2000082c:	01010001 	tsteq	r1, r1
20000830:	03010201 	movweq	r0, #4609	; 0x1201
20000834:	01020002 	tsteq	r2, r2
20000838:	03020202 	movweq	r0, #8706	; 0x2202
2000083c:	02030103 	andeq	r0, r3, #-1073741824	; 0xc0000000
	...

20000864 <ball_object>:
20000864:	2000081c 	andcs	r0, r0, ip, lsl r8
	...
20000870:	00000001 	andeq	r0, r0, r1
20000874:	00000001 	andeq	r0, r0, r1
20000878:	200000fd 	strdcs	r0, [r0], -sp
2000087c:	2000015f 	andcs	r0, r0, pc, asr r1
20000880:	200001c1 	andcs	r0, r0, r1, asr #3
20000884:	2000025b 	andcs	r0, r0, fp, asr r2
20000888:	2000007a 	andcs	r0, r0, sl, ror r0
2000088c:	2000007a 	andcs	r0, r0, sl, ror r0
20000890:	200000d2 	ldrdcs	r0, [r0], -r2
20000894:	2000007a 	andcs	r0, r0, sl, ror r0
20000898:	200000b4 	strhcs	r0, [r0], -r4
2000089c:	200000c4 	andcs	r0, r0, r4, asr #1
200008a0:	200000a6 	andcs	r0, r0, r6, lsr #1
200008a4:	2000007a 	andcs	r0, r0, sl, ror r0
200008a8:	200000e2 	andcs	r0, r0, r2, ror #1
200008ac:	0a030201 	beq	200c10b8 <ball_object+0xc0854>
200008b0:	0b060504 	bleq	20181cc8 <ball_object+0x181464>
200008b4:	0c090807 	stceq	8, cr0, [r9], {7}
200008b8:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000888 <ball_object+0x24>

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00001051 	andeq	r1, r0, r1, asr r0
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000613 	andeq	r0, r0, r3, lsl r6
      10:	0000320c 	andeq	r3, r0, ip, lsl #4
      14:	00023400 	andeq	r3, r2, r0, lsl #8
	...
      24:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      28:	00746e69 	rsbseq	r6, r4, r9, ror #28
      2c:	d6070403 	strle	r0, [r7], -r3, lsl #8
      30:	03000000 	movweq	r0, #0
      34:	04640601 	strbteq	r0, [r4], #-1537	; 0xfffff9ff
      38:	01030000 	mrseq	r0, (UNDEF: 3)
      3c:	00046208 	andeq	r6, r4, r8, lsl #4
      40:	05020300 	streq	r0, [r2, #-768]	; 0xfffffd00
      44:	0000047e 	andeq	r0, r0, lr, ror r4
      48:	01070203 	tsteq	r7, r3, lsl #4
      4c:	03000003 	movweq	r0, #3
      50:	01460504 	cmpeq	r6, r4, lsl #10
      54:	04030000 	streq	r0, [r3], #-0
      58:	0000d107 	andeq	sp, r0, r7, lsl #2
      5c:	05080300 	streq	r0, [r8, #-768]	; 0xfffffd00
      60:	00000141 	andeq	r0, r0, r1, asr #2
      64:	cc070803 	stcgt	8, cr0, [r7], {3}
      68:	04000000 	streq	r0, [r0], #-0
      6c:	00000372 	andeq	r0, r0, r2, ror r3
      70:	77192202 	ldrvc	r2, [r9, -r2, lsl #4]
      74:	05000000 	streq	r0, [r0, #-0]
      78:	00007d04 	andeq	r7, r0, r4, lsl #26
      7c:	054f0600 	strbeq	r0, [pc, #-1536]	; fffffa84 <ball_object+0xdffff220>
      80:	11040000 	mrsne	r0, (UNDEF: 4)
      84:	03000004 	movweq	r0, #4
      88:	004f0e2c 	subeq	r0, pc, ip, lsr #28
      8c:	64040000 	strvs	r0, [r4], #-0
      90:	03000005 	movweq	r0, #5
      94:	004f0e72 	subeq	r0, pc, r2, ror lr	; <UNPREDICTABLE>
      98:	7a070000 	bvc	1c00a0 <startup-0x1fe3ff60>
      9c:	04000003 	streq	r0, [r0], #-3
      a0:	2c17015e 	ldfcss	f0, [r7], {94}	; 0x5e
      a4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      a8:	03a60304 			; <UNDEFINED> instruction: 0x03a60304
      ac:	000000c9 	andeq	r0, r0, r9, asr #1
      b0:	00036c09 	andeq	r6, r3, r9, lsl #24
      b4:	0ca80300 	stceq	3, cr0, [r8]
      b8:	0000009a 	muleq	r0, sl, r0
      bc:	0002bd09 	andeq	fp, r2, r9, lsl #26
      c0:	13a90300 			; <UNDEFINED> instruction: 0x13a90300
      c4:	000000c9 	andeq	r0, r0, r9, asr #1
      c8:	003a0a00 	eorseq	r0, sl, r0, lsl #20
      cc:	00d90000 	sbcseq	r0, r9, r0
      d0:	2c0b0000 	stccs	0, cr0, [fp], {-0}
      d4:	03000000 	movweq	r0, #0
      d8:	03080c00 	movweq	r0, #35840	; 0x8c00
      dc:	00fd09a3 	rscseq	r0, sp, r3, lsr #19
      e0:	470d0000 	strmi	r0, [sp, -r0]
      e4:	03000005 	movweq	r0, #5
      e8:	002507a5 	eoreq	r0, r5, r5, lsr #15
      ec:	0d000000 	stceq	0, cr0, [r0, #-0]
      f0:	00000556 	andeq	r0, r0, r6, asr r5
      f4:	a705aa03 	strge	sl, [r5, -r3, lsl #20]
      f8:	04000000 	streq	r0, [r0], #-0
      fc:	04bb0400 	ldrteq	r0, [fp], #1024	; 0x400
     100:	ab030000 	blge	c0108 <startup-0x1ff3fef8>
     104:	0000d903 	andeq	sp, r0, r3, lsl #18
     108:	02800400 	addeq	r0, r0, #0, 8
     10c:	af030000 	svcge	0x00030000
     110:	00006b1b 	andeq	r6, r0, fp, lsl fp
     114:	05040e00 	streq	r0, [r4, #-3584]	; 0xfffff200
     118:	00011d04 	andeq	r1, r1, r4, lsl #26
     11c:	08010300 	stmdaeq	r1, {r8, r9}
     120:	0000046b 	andeq	r0, r0, fp, ror #8
     124:	00011d0f 	andeq	r1, r1, pc, lsl #26
     128:	05ac0400 	streq	r0, [ip, #1024]!	; 0x400
     12c:	16050000 	strne	r0, [r5], -r0
     130:	00005619 	andeq	r5, r0, r9, lsl r6
     134:	02911000 	addseq	r1, r1, #0, 0
     138:	05180000 	ldreq	r0, [r8, #-0]
     13c:	018f082f 	orreq	r0, pc, pc, lsr #16
     140:	dc0d0000 	stcle	0, cr0, [sp], {-0}
     144:	05000004 	streq	r0, [r0, #-4]
     148:	018f1331 	orreq	r1, pc, r1, lsr r3	; <UNPREDICTABLE>
     14c:	11000000 	mrsne	r0, (UNDEF: 0)
     150:	05006b5f 	streq	r6, [r0, #-2911]	; 0xfffff4a1
     154:	00250732 	eoreq	r0, r5, r2, lsr r7
     158:	0d040000 	stceq	0, cr0, [r4, #-0]
     15c:	00000532 	andeq	r0, r0, r2, lsr r5
     160:	250b3205 	strcs	r3, [fp, #-517]	; 0xfffffdfb
     164:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     168:	00027a0d 	andeq	r7, r2, sp, lsl #20
     16c:	14320500 	ldrtne	r0, [r2], #-1280	; 0xfffffb00
     170:	00000025 	andeq	r0, r0, r5, lsr #32
     174:	05e60d0c 	strbeq	r0, [r6, #3340]!	; 0xd0c
     178:	32050000 	andcc	r0, r5, #0, 0
     17c:	0000251b 	andeq	r2, r0, fp, lsl r5
     180:	5f111000 	svcpl	0x00111000
     184:	33050078 	movwcc	r0, #20600	; 0x5078
     188:	0001950b 	andeq	r9, r1, fp, lsl #10
     18c:	05001400 	streq	r1, [r0, #-1024]	; 0xfffffc00
     190:	00013504 	andeq	r3, r1, r4, lsl #10
     194:	01290a00 			; <UNDEFINED> instruction: 0x01290a00
     198:	01a50000 			; <UNDEFINED> instruction: 0x01a50000
     19c:	2c0b0000 	stccs	0, cr0, [fp], {-0}
     1a0:	00000000 	andeq	r0, r0, r0
     1a4:	02b81000 	adcseq	r1, r8, #0, 0
     1a8:	05240000 	streq	r0, [r4, #-0]!
     1ac:	02280837 	eoreq	r0, r8, #3604480	; 0x370000
     1b0:	2b0d0000 	blcs	3401b8 <startup-0x1fcbfe48>
     1b4:	05000001 	streq	r0, [r0, #-1]
     1b8:	00250939 	eoreq	r0, r5, r9, lsr r9
     1bc:	0d000000 	stceq	0, cr0, [r0, #-0]
     1c0:	0000056c 	andeq	r0, r0, ip, ror #10
     1c4:	25093a05 	strcs	r3, [r9, #-2565]	; 0xfffff5fb
     1c8:	04000000 	streq	r0, [r0], #-0
     1cc:	0001720d 	andeq	r7, r1, sp, lsl #4
     1d0:	093b0500 	ldmdbeq	fp!, {r8, sl}
     1d4:	00000025 	andeq	r0, r0, r5, lsr #32
     1d8:	071a0d08 	ldreq	r0, [sl, -r8, lsl #26]
     1dc:	3c050000 	stccc	0, cr0, [r5], {-0}
     1e0:	00002509 	andeq	r2, r0, r9, lsl #10
     1e4:	df0d0c00 	svcle	0x000d0c00
     1e8:	05000003 	streq	r0, [r0, #-3]
     1ec:	0025093d 	eoreq	r0, r5, sp, lsr r9
     1f0:	0d100000 	ldceq	0, cr0, [r0, #-0]
     1f4:	000003a2 	andeq	r0, r0, r2, lsr #7
     1f8:	25093e05 	strcs	r3, [r9, #-3589]	; 0xfffff1fb
     1fc:	14000000 	strne	r0, [r0], #-0
     200:	0005eb0d 	andeq	lr, r5, sp, lsl #22
     204:	093f0500 	ldmdbeq	pc!, {r8, sl}	; <UNPREDICTABLE>
     208:	00000025 	andeq	r0, r0, r5, lsr #32
     20c:	04880d18 	streq	r0, [r8], #3352	; 0xd18
     210:	40050000 	andmi	r0, r5, r0
     214:	00002509 	andeq	r2, r0, r9, lsl #10
     218:	b10d1c00 	tstlt	sp, r0, lsl #24
     21c:	05000006 	streq	r0, [r0, #-6]
     220:	00250941 	eoreq	r0, r5, r1, asr #18
     224:	00200000 	eoreq	r0, r0, r0
     228:	00018112 	andeq	r8, r1, r2, lsl r1
     22c:	05010800 	streq	r0, [r1, #-2048]	; 0xfffff800
     230:	026d084a 	rsbeq	r0, sp, #4849664	; 0x4a0000
     234:	0a0d0000 	beq	34023c <startup-0x1fcbfdc4>
     238:	05000002 	streq	r0, [r0, #-2]
     23c:	026d0a4b 	rsbeq	r0, sp, #307200	; 0x4b000
     240:	0d000000 	stceq	0, cr0, [r0, #-0]
     244:	00000000 	andeq	r0, r0, r0
     248:	6d094c05 	stcvs	12, cr4, [r9, #-20]	; 0xffffffec
     24c:	80000002 	andhi	r0, r0, r2
     250:	00059913 	andeq	r9, r5, r3, lsl r9
     254:	0a4e0500 	beq	138165c <startup-0x1ec7e9a4>
     258:	00000129 	andeq	r0, r0, r9, lsr #2
     25c:	bc130100 	ldflts	f0, [r3], {-0}
     260:	05000001 	streq	r0, [r0, #-1]
     264:	01290a51 			; <UNDEFINED> instruction: 0x01290a51
     268:	01040000 	mrseq	r0, (UNDEF: 4)
     26c:	01150a00 	tsteq	r5, r0, lsl #20
     270:	027d0000 	rsbseq	r0, sp, #0, 0
     274:	2c0b0000 	stccs	0, cr0, [fp], {-0}
     278:	1f000000 	svcne	0x00000000
     27c:	03f41200 	mvnseq	r1, #0, 4
     280:	01900000 	orrseq	r0, r0, r0
     284:	c0085d05 	andgt	r5, r8, r5, lsl #26
     288:	0d000002 	stceq	0, cr0, [r0, #-8]
     28c:	000004dc 	ldrdeq	r0, [r0], -ip
     290:	c0125e05 	andsgt	r5, r2, r5, lsl #28
     294:	00000002 	andeq	r0, r0, r2
     298:	0005020d 	andeq	r0, r5, sp, lsl #4
     29c:	065f0500 	ldrbeq	r0, [pc], -r0, lsl #10
     2a0:	00000025 	andeq	r0, r0, r5, lsr #32
     2a4:	02280d04 	eoreq	r0, r8, #4, 26	; 0x100
     2a8:	61050000 	mrsvs	r0, (UNDEF: 5)
     2ac:	0002c609 	andeq	ip, r2, r9, lsl #12
     2b0:	810d0800 	tsthi	sp, r0, lsl #16
     2b4:	05000001 	streq	r0, [r0, #-1]
     2b8:	02281e62 	eoreq	r1, r8, #1568	; 0x620
     2bc:	00880000 	addeq	r0, r8, r0
     2c0:	027d0405 	rsbseq	r0, sp, #83886080	; 0x5000000
     2c4:	d60a0000 	strle	r0, [sl], -r0
     2c8:	d6000002 	strle	r0, [r0], -r2
     2cc:	0b000002 	bleq	2dc <startup-0x1ffffd24>
     2d0:	0000002c 	andeq	r0, r0, ip, lsr #32
     2d4:	0405001f 	streq	r0, [r5], #-31	; 0xffffffe1
     2d8:	000002dc 	ldrdeq	r0, [r0], -ip
     2dc:	04921014 	ldreq	r1, [r2], #20
     2e0:	05080000 	streq	r0, [r8, #-0]
     2e4:	03050875 	movweq	r0, #22645	; 0x5875
     2e8:	6c0d0000 	stcvs	0, cr0, [sp], {-0}
     2ec:	05000001 	streq	r0, [r0, #-1]
     2f0:	03051176 	movweq	r1, #20854	; 0x5176
     2f4:	0d000000 	stceq	0, cr0, [r0, #-0]
     2f8:	0000000c 	andeq	r0, r0, ip
     2fc:	25067705 	strcs	r7, [r6, #-1797]	; 0xfffff8fb
     300:	04000000 	streq	r0, [r0], #-0
     304:	3a040500 	bcc	10170c <startup-0x1fefe8f4>
     308:	10000000 	andne	r0, r0, r0
     30c:	000004c6 	andeq	r0, r0, r6, asr #9
     310:	08b50568 	ldmeq	r5!, {r3, r5, r6, r8, sl}
     314:	0000044e 	andeq	r0, r0, lr, asr #8
     318:	00705f11 	rsbseq	r5, r0, r1, lsl pc
     31c:	0512b605 	ldreq	fp, [r2, #-1541]	; 0xfffff9fb
     320:	00000003 	andeq	r0, r0, r3
     324:	00725f11 	rsbseq	r5, r2, r1, lsl pc
     328:	2507b705 	strcs	fp, [r7, #-1797]	; 0xfffff8fb
     32c:	04000000 	streq	r0, [r0], #-0
     330:	00775f11 	rsbseq	r5, r7, r1, lsl pc
     334:	2507b805 	strcs	fp, [r7, #-2053]	; 0xfffff7fb
     338:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     33c:	0001b50d 	andeq	fp, r1, sp, lsl #10
     340:	09b90500 	ldmibeq	r9!, {r8, sl}
     344:	00000041 	andeq	r0, r0, r1, asr #32
     348:	02d40d0c 	sbcseq	r0, r4, #12, 26	; 0x300
     34c:	ba050000 	blt	140354 <startup-0x1febfcac>
     350:	00004109 	andeq	r4, r0, r9, lsl #2
     354:	5f110e00 	svcpl	0x00110e00
     358:	05006662 	streq	r6, [r0, #-1634]	; 0xfffff99e
     35c:	02dd11bb 	sbcseq	r1, sp, #-1073741778	; 0xc000002e
     360:	0d100000 	ldceq	0, cr0, [r0, #-0]
     364:	000000ed 	andeq	r0, r0, sp, ror #1
     368:	2507bc05 	strcs	fp, [r7, #-3077]	; 0xfffff3fb
     36c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     370:	00018f0d 	andeq	r8, r1, sp, lsl #30
     374:	0ac30500 	beq	ff0c177c <ball_object+0xdf0c0f18>
     378:	00000115 	andeq	r0, r0, r5, lsl r1
     37c:	02a80d1c 	adceq	r0, r8, #28, 26	; 0x700
     380:	c5050000 	strgt	r0, [r5, #-0]
     384:	0005c01d 	andeq	ip, r5, sp, lsl r0
     388:	9b0d2000 	blls	348390 <startup-0x1fcb7c70>
     38c:	05000003 	streq	r0, [r0, #-3]
     390:	05ea1dc7 	strbeq	r1, [sl, #3527]!	; 0xdc7
     394:	0d240000 	stceq	0, cr0, [r4, #-0]
     398:	0000055e 	andeq	r0, r0, lr, asr r5
     39c:	0e0dca05 	vmlaeq.f32	s24, s26, s10
     3a0:	28000006 	stmdacs	r0, {r1, r2}
     3a4:	0006cb0d 	andeq	ip, r6, sp, lsl #22
     3a8:	09cb0500 	stmibeq	fp, {r8, sl}^
     3ac:	00000628 	andeq	r0, r0, r8, lsr #12
     3b0:	755f112c 	ldrbvc	r1, [pc, #-300]	; 28c <startup-0x1ffffd74>
     3b4:	ce050062 	cdpgt	0, 0, cr0, cr5, cr2, {3}
     3b8:	0002dd11 	andeq	sp, r2, r1, lsl sp
     3bc:	5f113000 	svcpl	0x00113000
     3c0:	05007075 	streq	r7, [r0, #-117]	; 0xffffff8b
     3c4:	030512cf 	movweq	r1, #21199	; 0x52cf
     3c8:	11380000 	teqne	r8, r0
     3cc:	0072755f 	rsbseq	r7, r2, pc, asr r5
     3d0:	2507d005 	strcs	sp, [r7, #-5]
     3d4:	3c000000 	stccc	0, cr0, [r0], {-0}
     3d8:	0001590d 	andeq	r5, r1, sp, lsl #18
     3dc:	11d30500 	bicsne	r0, r3, r0, lsl #10
     3e0:	0000062e 	andeq	r0, r0, lr, lsr #12
     3e4:	06a30d40 	strteq	r0, [r3], r0, asr #26
     3e8:	d4050000 	strle	r0, [r5], #-0
     3ec:	00063e11 	andeq	r3, r6, r1, lsl lr
     3f0:	5f114300 	svcpl	0x00114300
     3f4:	0500626c 	streq	r6, [r0, #-620]	; 0xfffffd94
     3f8:	02dd11d7 	sbcseq	r1, sp, #-1073741771	; 0xc0000035
     3fc:	0d440000 	stcleq	0, cr0, [r4, #-0]
     400:	000001cb 	andeq	r0, r0, fp, asr #3
     404:	2507da05 	strcs	sp, [r7, #-2565]	; 0xfffff5fb
     408:	4c000000 	stcmi	0, cr0, [r0], {-0}
     40c:	0001e30d 	andeq	lr, r1, sp, lsl #6
     410:	0adb0500 	beq	ff6c1818 <ball_object+0xdf6c0fb4>
     414:	00000082 	andeq	r0, r0, r2, lsl #1
     418:	00a60d50 	adceq	r0, r6, r0, asr sp
     41c:	de050000 	cdple	0, 0, cr0, cr5, cr0, {0}
     420:	00046c12 	andeq	r6, r4, r2, lsl ip
     424:	500d5400 	andpl	r5, sp, r0, lsl #8
     428:	05000005 	streq	r0, [r0, #-5]
     42c:	01090ce2 	smlatteq	r9, r2, ip, r0
     430:	0d580000 	ldcleq	0, cr0, [r8, #-0]
     434:	000004ce 	andeq	r0, r0, lr, asr #9
     438:	fd0ee405 	stc2	4, cr14, [lr, #-20]	; 0xffffffec
     43c:	5c000000 	stcpl	0, cr0, [r0], {-0}
     440:	0003810d 	andeq	r8, r3, sp, lsl #2
     444:	09e50500 	stmibeq	r5!, {r8, sl}^
     448:	00000025 	andeq	r0, r0, r5, lsr #32
     44c:	25150064 	ldrcs	r0, [r5, #-100]	; 0xffffff9c
     450:	6c000000 	stcvs	0, cr0, [r0], {-0}
     454:	16000004 	strne	r0, [r0], -r4
     458:	0000046c 	andeq	r0, r0, ip, ror #8
     45c:	00011516 	andeq	r1, r1, r6, lsl r5
     460:	01171600 	tsteq	r7, r0, lsl #12
     464:	25160000 	ldrcs	r0, [r6, #-0]
     468:	00000000 	andeq	r0, r0, r0
     46c:	04770405 	ldrbteq	r0, [r7], #-1029	; 0xfffffbfb
     470:	6c0f0000 	stcvs	0, cr0, [pc], {-0}
     474:	17000004 	strne	r0, [r0, -r4]
     478:	0000053a 	andeq	r0, r0, sl, lsr r5
     47c:	60050428 	andvs	r0, r5, r8, lsr #8
     480:	05c00802 	strbeq	r0, [r0, #2050]	; 0x802
     484:	77180000 	ldrvc	r0, [r8, -r0]
     488:	05000004 	streq	r0, [r0, #-4]
     48c:	25070262 	strcs	r0, [r7, #-610]	; 0xfffffd9e
     490:	00000000 	andeq	r0, r0, r0
     494:	0001c418 	andeq	ip, r1, r8, lsl r4
     498:	02670500 	rsbeq	r0, r7, #0, 10
     49c:	00069a0b 	andeq	r9, r6, fp, lsl #20
     4a0:	c4180400 	ldrgt	r0, [r8], #-1024	; 0xfffffc00
     4a4:	05000002 	streq	r0, [r0, #-2]
     4a8:	9a140267 	bls	500e4c <startup-0x1faff1b4>
     4ac:	08000006 	stmdaeq	r0, {r1, r2}
     4b0:	00028918 	andeq	r8, r2, r8, lsl r9
     4b4:	02670500 	rsbeq	r0, r7, #0, 10
     4b8:	00069a1e 	andeq	r9, r6, lr, lsl sl
     4bc:	fd180c00 	ldc2	12, cr0, [r8, #-0]
     4c0:	05000004 	streq	r0, [r0, #-4]
     4c4:	25080269 	strcs	r0, [r8, #-617]	; 0xfffffd97
     4c8:	10000000 	andne	r0, r0, r0
     4cc:	00002718 	andeq	r2, r0, r8, lsl r7
     4d0:	026a0500 	rsbeq	r0, sl, #0, 10
     4d4:	00089a08 	andeq	r9, r8, r8, lsl #20
     4d8:	19181400 	ldmdbne	r8, {sl, ip}
     4dc:	05000005 	streq	r0, [r0, #-5]
     4e0:	2507026d 	strcs	r0, [r7, #-621]	; 0xfffffd93
     4e4:	30000000 	andcc	r0, r0, r0
     4e8:	00050718 	andeq	r0, r5, r8, lsl r7
     4ec:	026e0500 	rsbeq	r0, lr, #0, 10
     4f0:	0008af16 	andeq	sl, r8, r6, lsl pc
     4f4:	06183400 	ldreq	r3, [r8], -r0, lsl #8
     4f8:	05000004 	streq	r0, [r0, #-4]
     4fc:	25070270 	strcs	r0, [r7, #-624]	; 0xfffffd90
     500:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
     504:	00050f18 	andeq	r0, r5, r8, lsl pc
     508:	02720500 	rsbseq	r0, r2, #0, 10
     50c:	0008c00a 	andeq	ip, r8, sl
     510:	64183c00 	ldrvs	r3, [r8], #-3072	; 0xfffff400
     514:	05000003 	streq	r0, [r0, #-3]
     518:	8f130275 	svchi	0x00130275
     51c:	40000001 	andmi	r0, r0, r1
     520:	0002ae18 	andeq	sl, r2, r8, lsl lr
     524:	02760500 	rsbseq	r0, r6, #0, 10
     528:	00002507 	andeq	r2, r0, r7, lsl #10
     52c:	f1184400 			; <UNDEFINED> instruction: 0xf1184400
     530:	05000006 	streq	r0, [r0, #-6]
     534:	8f130277 	svchi	0x00130277
     538:	48000001 	stmdami	r0, {r0}
     53c:	00044418 	andeq	r4, r4, r8, lsl r4
     540:	02780500 	rsbseq	r0, r8, #0, 10
     544:	0008c614 	andeq	ip, r8, r4, lsl r6
     548:	cc184c00 	ldcgt	12, cr4, [r8], {-0}
     54c:	05000002 	streq	r0, [r0, #-2]
     550:	2507027b 	strcs	r0, [r7, #-635]	; 0xfffffd85
     554:	50000000 	andpl	r0, r0, r0
     558:	0001db18 	andeq	sp, r1, r8, lsl fp
     55c:	027c0500 	rsbseq	r0, ip, #0, 10
     560:	00011709 	andeq	r1, r1, r9, lsl #14
     564:	70185400 	andsvc	r5, r8, r0, lsl #8
     568:	05000004 	streq	r0, [r0, #-4]
     56c:	7507029f 	strvc	r0, [r7, #-671]	; 0xfffffd61
     570:	58000008 	stmdapl	r0, {r3}
     574:	0003f419 	andeq	pc, r3, r9, lsl r4	; <UNPREDICTABLE>
     578:	02a30500 	adceq	r0, r3, #0, 10
     57c:	0002c013 	andeq	ip, r2, r3, lsl r0
     580:	19014800 	stmdbne	r1, {fp, lr}
     584:	00000328 	andeq	r0, r0, r8, lsr #6
     588:	1202a405 	andne	sl, r2, #83886080	; 0x5000000
     58c:	0000027d 	andeq	r0, r0, sp, ror r2
     590:	9919014c 	ldmdbls	r9, {r2, r3, r6, r8}
     594:	05000006 	streq	r0, [r0, #-6]
     598:	d70c02a8 	strle	r0, [ip, -r8, lsr #5]
     59c:	dc000008 	stcle	0, cr0, [r0], {8}
     5a0:	01971902 	orrseq	r1, r7, r2, lsl #18
     5a4:	ad050000 	stcge	0, cr0, [r5, #-0]
     5a8:	065b1002 	ldrbeq	r1, [fp], -r2
     5ac:	02e00000 	rsceq	r0, r0, #0, 0
     5b0:	00017c19 	andeq	r7, r1, r9, lsl ip
     5b4:	02af0500 	adceq	r0, pc, #0, 10
     5b8:	0008e30a 	andeq	lr, r8, sl, lsl #6
     5bc:	0002ec00 	andeq	lr, r2, r0, lsl #24
     5c0:	044e0405 	strbeq	r0, [lr], #-1029	; 0xfffffbfb
     5c4:	25150000 	ldrcs	r0, [r5, #-0]
     5c8:	e4000000 	str	r0, [r0], #-0
     5cc:	16000005 	strne	r0, [r0], -r5
     5d0:	0000046c 	andeq	r0, r0, ip, ror #8
     5d4:	00011516 	andeq	r1, r1, r6, lsl r5
     5d8:	05e41600 	strbeq	r1, [r4, #1536]!	; 0x600
     5dc:	25160000 	ldrcs	r0, [r6, #-0]
     5e0:	00000000 	andeq	r0, r0, r0
     5e4:	01240405 			; <UNDEFINED> instruction: 0x01240405
     5e8:	04050000 	streq	r0, [r5], #-0
     5ec:	000005c6 	andeq	r0, r0, r6, asr #11
     5f0:	00008e15 	andeq	r8, r0, r5, lsl lr
     5f4:	00060e00 	andeq	r0, r6, r0, lsl #28
     5f8:	046c1600 	strbteq	r1, [ip], #-1536	; 0xfffffa00
     5fc:	15160000 	ldrne	r0, [r6, #-0]
     600:	16000001 	strne	r0, [r0], -r1
     604:	0000008e 	andeq	r0, r0, lr, lsl #1
     608:	00002516 	andeq	r2, r0, r6, lsl r5
     60c:	04050000 	streq	r0, [r5], #-0
     610:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     614:	00002515 	andeq	r2, r0, r5, lsl r5
     618:	00062800 	andeq	r2, r6, r0, lsl #16
     61c:	046c1600 	strbteq	r1, [ip], #-1536	; 0xfffffa00
     620:	15160000 	ldrne	r0, [r6, #-0]
     624:	00000001 	andeq	r0, r0, r1
     628:	06140405 	ldreq	r0, [r4], -r5, lsl #8
     62c:	3a0a0000 	bcc	280634 <startup-0x1fd7f9cc>
     630:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
     634:	0b000006 	bleq	654 <startup-0x1ffff9ac>
     638:	0000002c 	andeq	r0, r0, ip, lsr #32
     63c:	3a0a0002 	bcc	28064c <startup-0x1fd7f9b4>
     640:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
     644:	0b000006 	bleq	664 <startup-0x1ffff99c>
     648:	0000002c 	andeq	r0, r0, ip, lsr #32
     64c:	b4070000 	strlt	r0, [r7], #-0
     650:	05000004 	streq	r0, [r0, #-4]
     654:	0b1a011f 	bleq	680ad8 <startup-0x1f97f528>
     658:	1a000003 	bne	66c <startup-0x1ffff994>
     65c:	000005f5 	strdeq	r0, [r0], -r5
     660:	0123050c 			; <UNDEFINED> instruction: 0x0123050c
     664:	00069408 	andeq	r9, r6, r8, lsl #8
     668:	04dc1800 	ldrbeq	r1, [ip], #2048	; 0x800
     66c:	25050000 	strcs	r0, [r5, #-0]
     670:	06941101 	ldreq	r1, [r4], r1, lsl #2
     674:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     678:	000002e6 	andeq	r0, r0, r6, ror #5
     67c:	07012605 	streq	r2, [r1, -r5, lsl #12]
     680:	00000025 	andeq	r0, r0, r5, lsr #32
     684:	04991804 	ldreq	r1, [r9], #2052	; 0x804
     688:	27050000 	strcs	r0, [r5, -r0]
     68c:	069a0b01 	ldreq	r0, [sl], r1, lsl #22
     690:	00080000 	andeq	r0, r8, r0
     694:	065b0405 	ldrbeq	r0, [fp], -r5, lsl #8
     698:	04050000 	streq	r0, [r5], #-0
     69c:	0000064e 	andeq	r0, r0, lr, asr #12
     6a0:	0000121a 	andeq	r1, r0, sl, lsl r2
     6a4:	3f050e00 	svccc	0x00050e00
     6a8:	06d90801 	ldrbeq	r0, [r9], r1, lsl #16
     6ac:	41180000 	tstmi	r8, r0
     6b0:	05000005 	streq	r0, [r0, #-5]
     6b4:	d9120140 	ldmdble	r2, {r6, r8}
     6b8:	00000006 	andeq	r0, r0, r6
     6bc:	00058618 	andeq	r8, r5, r8, lsl r6
     6c0:	01410500 	cmpeq	r1, r0, lsl #10
     6c4:	0006d912 	andeq	sp, r6, r2, lsl r9
     6c8:	a7180600 	ldrge	r0, [r8, -r0, lsl #12]
     6cc:	05000005 	streq	r0, [r0, #-5]
     6d0:	48120142 	ldmdami	r2, {r1, r6, r8}
     6d4:	0c000000 	stceq	0, cr0, [r0], {-0}
     6d8:	00480a00 	subeq	r0, r8, r0, lsl #20
     6dc:	06e90000 	strbteq	r0, [r9], r0
     6e0:	2c0b0000 	stccs	0, cr0, [fp], {-0}
     6e4:	02000000 	andeq	r0, r0, #0, 0
     6e8:	05d01b00 	ldrbeq	r1, [r0, #2816]	; 0xb00
     6ec:	fe070280 	cdp2	2, 0, cr0, cr7, cr0, {4}
     6f0:	18000007 	stmdane	r0, {r0, r1, r2}
     6f4:	000005d9 	ldrdeq	r0, [r0], -r9
     6f8:	18028205 	stmdane	r2, {r0, r2, r9, pc}
     6fc:	0000002c 	andeq	r0, r0, ip, lsr #32
     700:	058c1800 	streq	r1, [ip, #2048]	; 0x800
     704:	83050000 	movwhi	r0, #20480	; 0x5000
     708:	01171202 	tsteq	r7, r2, lsl #4
     70c:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
     710:	00000349 	andeq	r0, r0, r9, asr #6
     714:	10028405 	andne	r8, r2, r5, lsl #8
     718:	000007fe 	strdeq	r0, [r0], -lr
     71c:	06bc1808 	ldrteq	r1, [ip], r8, lsl #16
     720:	85050000 	strhi	r0, [r5, #-0]
     724:	01a51702 			; <UNDEFINED> instruction: 0x01a51702
     728:	18240000 	stmdane	r4!, {}	; <UNPREDICTABLE>
     72c:	00000299 	muleq	r0, r9, r2
     730:	0f028605 	svceq	0x00028605
     734:	00000025 	andeq	r0, r0, r5, lsr #32
     738:	04d71848 	ldrbeq	r1, [r7], #2120	; 0x848
     73c:	87050000 	strhi	r0, [r5, -r0]
     740:	00642c02 	rsbeq	r2, r4, r2, lsl #24
     744:	18500000 	ldmdane	r0, {}^	; <UNPREDICTABLE>
     748:	000006d8 	ldrdeq	r0, [r0], -r8
     74c:	1a028805 	bne	a2768 <startup-0x1ff5d898>
     750:	000006a0 	andeq	r0, r0, r0, lsr #13
     754:	04f01858 	ldrbteq	r1, [r0], #2136	; 0x858
     758:	89050000 	stmdbhi	r5, {}	; <UNPREDICTABLE>
     75c:	00fd1602 	rscseq	r1, sp, r2, lsl #12
     760:	18680000 	stmdane	r8!, {}^	; <UNPREDICTABLE>
     764:	000006e3 	andeq	r0, r0, r3, ror #13
     768:	16028a05 	strne	r8, [r2], -r5, lsl #20
     76c:	000000fd 	strdeq	r0, [r0], -sp
     770:	04541870 	ldrbeq	r1, [r4], #-2160	; 0xfffff790
     774:	8b050000 	blhi	14077c <startup-0x1febf884>
     778:	00fd1602 	rscseq	r1, sp, r2, lsl #12
     77c:	18780000 	ldmdane	r8!, {}^	; <UNPREDICTABLE>
     780:	0000068f 	andeq	r0, r0, pc, lsl #13
     784:	10028c05 	andne	r8, r2, r5, lsl #24
     788:	0000080e 	andeq	r0, r0, lr, lsl #16
     78c:	033d1880 	teqeq	sp, #128, 16	; 0x800000
     790:	8d050000 	stchi	0, cr0, [r5, #-0]
     794:	081e1002 	ldmdaeq	lr, {r1, ip}
     798:	18880000 	stmne	r8, {}	; <UNPREDICTABLE>
     79c:	000005b4 			; <UNDEFINED> instruction: 0x000005b4
     7a0:	0f028e05 	svceq	0x00028e05
     7a4:	00000025 	andeq	r0, r0, r5, lsr #32
     7a8:	01fc18a0 	mvnseq	r1, r0, lsr #17
     7ac:	8f050000 	svchi	0x00050000
     7b0:	00fd1602 	rscseq	r1, sp, r2, lsl #12
     7b4:	18a40000 	stmiane	r4!, {}	; <UNPREDICTABLE>
     7b8:	00000111 	andeq	r0, r0, r1, lsl r1
     7bc:	16029005 	strne	r9, [r2], -r5
     7c0:	000000fd 	strdeq	r0, [r0], -sp
     7c4:	01eb18ac 	mvneq	r1, ip, lsr #17
     7c8:	91050000 	mrsls	r0, (UNDEF: 5)
     7cc:	00fd1602 	rscseq	r1, sp, r2, lsl #12
     7d0:	18b40000 	ldmne	r4!, {}	; <UNPREDICTABLE>
     7d4:	000000ac 	andeq	r0, r0, ip, lsr #1
     7d8:	16029205 	strne	r9, [r2], -r5, lsl #4
     7dc:	000000fd 	strdeq	r0, [r0], -sp
     7e0:	00bb18bc 	ldrhteq	r1, [fp], ip
     7e4:	93050000 	movwls	r0, #20480	; 0x5000
     7e8:	00fd1602 	rscseq	r1, sp, r2, lsl #12
     7ec:	18c40000 	stmiane	r4, {}^	; <UNPREDICTABLE>
     7f0:	00000475 	andeq	r0, r0, r5, ror r4
     7f4:	08029405 	stmdaeq	r2, {r0, r2, sl, ip, pc}
     7f8:	00000025 	andeq	r0, r0, r5, lsr #32
     7fc:	1d0a00cc 	stcne	0, cr0, [sl, #-816]	; 0xfffffcd0
     800:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     804:	0b000008 	bleq	82c <startup-0x1ffff7d4>
     808:	0000002c 	andeq	r0, r0, ip, lsr #32
     80c:	1d0a0019 	stcne	0, cr0, [sl, #-100]	; 0xffffff9c
     810:	1e000001 	cdpne	0, 0, cr0, cr0, cr1, {0}
     814:	0b000008 	bleq	83c <startup-0x1ffff7c4>
     818:	0000002c 	andeq	r0, r0, ip, lsr #32
     81c:	1d0a0007 	stcne	0, cr0, [sl, #-28]	; 0xffffffe4
     820:	2e000001 	cdpcs	0, 0, cr0, cr0, cr1, {0}
     824:	0b000008 	bleq	84c <startup-0x1ffff7b4>
     828:	0000002c 	andeq	r0, r0, ip, lsr #32
     82c:	f01b0017 			; <UNDEFINED> instruction: 0xf01b0017
     830:	07029905 	streq	r9, [r2, -r5, lsl #18]
     834:	00000855 	andeq	r0, r0, r5, asr r8
     838:	0003d318 	andeq	sp, r3, r8, lsl r3
     83c:	029c0500 	addseq	r0, ip, #0, 10
     840:	0008551b 	andeq	r5, r8, fp, lsl r5
     844:	ac180000 	ldcge	0, cr0, [r8], {-0}
     848:	05000003 	streq	r0, [r0, #-3]
     84c:	6518029d 	ldrvs	r0, [r8, #-669]	; 0xfffffd63
     850:	78000008 	stmdavc	r0, {r3}
     854:	03050a00 	movweq	r0, #23040	; 0x5a00
     858:	08650000 	stmdaeq	r5!, {}^	; <UNPREDICTABLE>
     85c:	2c0b0000 	stccs	0, cr0, [fp], {-0}
     860:	1d000000 	stcne	0, cr0, [r0, #-0]
     864:	002c0a00 	eoreq	r0, ip, r0, lsl #20
     868:	08750000 	ldmdaeq	r5!, {}^	; <UNPREDICTABLE>
     86c:	2c0b0000 	stccs	0, cr0, [fp], {-0}
     870:	1d000000 	stcne	0, cr0, [r0, #-0]
     874:	05f01c00 	ldrbeq	r1, [r0, #3072]!	; 0xc00
     878:	9a03027e 	bls	c1278 <startup-0x1ff3ed88>
     87c:	1d000008 	stcne	0, cr0, [r0, #-32]	; 0xffffffe0
     880:	0000053a 	andeq	r0, r0, sl, lsr r5
     884:	0b029505 	bleq	a5ca0 <startup-0x1ff5a360>
     888:	000006e9 	andeq	r0, r0, r9, ror #13
     88c:	0006a91d 	andeq	sl, r6, sp, lsl r9
     890:	029e0500 	addseq	r0, lr, #0, 10
     894:	00082e0b 	andeq	r2, r8, fp, lsl #28
     898:	1d0a0000 	stcne	0, cr0, [sl, #-0]
     89c:	aa000001 	bge	8a8 <startup-0x1ffff758>
     8a0:	0b000008 	bleq	8c8 <startup-0x1ffff738>
     8a4:	0000002c 	andeq	r0, r0, ip, lsr #32
     8a8:	f6060018 			; <UNDEFINED> instruction: 0xf6060018
     8ac:	05000000 	streq	r0, [r0, #-0]
     8b0:	0008aa04 	andeq	sl, r8, r4, lsl #20
     8b4:	08c01e00 	stmiaeq	r0, {r9, sl, fp, ip}^
     8b8:	6c160000 	ldcvs	0, cr0, [r6], {-0}
     8bc:	00000004 	andeq	r0, r0, r4
     8c0:	08b50405 	ldmeq	r5!, {r0, r2, sl}
     8c4:	04050000 	streq	r0, [r5], #-0
     8c8:	0000018f 	andeq	r0, r0, pc, lsl #3
     8cc:	0008d71e 	andeq	sp, r8, lr, lsl r7
     8d0:	00251600 	eoreq	r1, r5, r0, lsl #12
     8d4:	05000000 	streq	r0, [r0, #-0]
     8d8:	0008dd04 	andeq	sp, r8, r4, lsl #26
     8dc:	cc040500 	cfstr32gt	mvfx0, [r4], {-0}
     8e0:	0a000008 	beq	908 <startup-0x1ffff6f8>
     8e4:	0000064e 	andeq	r0, r0, lr, asr #12
     8e8:	000008f3 	strdeq	r0, [r0], -r3
     8ec:	00002c0b 	andeq	r2, r0, fp, lsl #24
     8f0:	1f000200 	svcne	0x00000200
     8f4:	000005cd 	andeq	r0, r0, sp, asr #11
     8f8:	17032e05 	strne	r2, [r3, -r5, lsl #28]
     8fc:	0000046c 	andeq	r0, r0, ip, ror #8
     900:	0005c61f 	andeq	ip, r5, pc, lsl r6
     904:	032f0500 			; <UNDEFINED> instruction: 0x032f0500
     908:	0004721d 	andeq	r7, r4, sp, lsl r2
     90c:	04040300 	streq	r0, [r4], #-768	; 0xfffffd00
     910:	0000043e 	andeq	r0, r0, lr, lsr r4
     914:	d4040803 	strle	r0, [r4], #-2051	; 0xfffff7fd
     918:	0c000001 	stceq	0, cr0, [r0], {1}
     91c:	09250102 	stmdbeq	r5!, {r1, r8}
     920:	0000093b 	andeq	r0, r0, fp, lsr r9
     924:	01007811 	tsteq	r0, r1, lsl r8
     928:	011d0a26 	tsteq	sp, r6, lsr #20
     92c:	11000000 	mrsne	r0, (UNDEF: 0)
     930:	26010079 			; <UNDEFINED> instruction: 0x26010079
     934:	00011d0c 	andeq	r1, r1, ip, lsl #26
     938:	04000100 	streq	r0, [r0], #-256	; 0xffffff00
     93c:	000001a4 	andeq	r0, r0, r4, lsr #3
     940:	1b032701 	blne	ca54c <startup-0x1ff35ab4>
     944:	0c000009 	stceq	0, cr0, [r0], {9}
     948:	09290104 	stmdbeq	r9!, {r2, r8}
     94c:	00000969 	andeq	r0, r0, r9, ror #18
     950:	00307011 	eorseq	r7, r0, r1, lsl r0
     954:	3b0b2a01 	blcc	2cb160 <startup-0x1fd34ea0>
     958:	00000009 	andeq	r0, r0, r9
     95c:	00317011 	eorseq	r7, r1, r1, lsl r0
     960:	3b0b2b01 	blcc	2cb56c <startup-0x1fd34a94>
     964:	02000009 	andeq	r0, r0, #9, 0
     968:	07020400 	streq	r0, [r2, -r0, lsl #8]
     96c:	2c010000 	stccs	0, cr0, [r1], {-0}
     970:	00094703 	andeq	r4, r9, r3, lsl #14
     974:	07010400 	streq	r0, [r1, -r0, lsl #8]
     978:	2c010000 	stccs	0, cr0, [r1], {-0}
     97c:	0009810a 	andeq	r8, r9, sl, lsl #2
     980:	47040500 	strmi	r0, [r4, -r0, lsl #10]
     984:	0c000009 	stceq	0, cr0, [r0], {9}
     988:	092e0104 	stmdbeq	lr!, {r2, r8}
     98c:	000009b3 			; <UNDEFINED> instruction: 0x000009b3
     990:	00307011 	eorseq	r7, r0, r1, lsl r0
     994:	3b0b2f01 	blcc	2cc5a0 <startup-0x1fd33a60>
     998:	00000009 	andeq	r0, r0, r9
     99c:	01007811 	tsteq	r0, r1, lsl r8
     9a0:	011d0a30 	tsteq	sp, r0, lsr sl
     9a4:	11020000 	mrsne	r0, (UNDEF: 2)
     9a8:	30010079 	andcc	r0, r1, r9, ror r0
     9ac:	00011d0c 	andeq	r1, r1, ip, lsl #26
     9b0:	04000300 	streq	r0, [r0], #-768	; 0xfffffd00
     9b4:	000001af 	andeq	r0, r0, pc, lsr #3
     9b8:	bf0a3101 	svclt	0x000a3101
     9bc:	05000009 	streq	r0, [r0, #-9]
     9c0:	00098704 	andeq	r8, r9, r4, lsl #14
     9c4:	015f1000 	cmpeq	pc, r0
     9c8:	01080000 	mrseq	r0, (UNDEF: 8)
     9cc:	09f61033 	ldmibeq	r6!, {r0, r1, r4, r5, ip}^
     9d0:	78110000 	ldmdavc	r1, {}	; <UNPREDICTABLE>
     9d4:	0a340100 	beq	d00ddc <startup-0x1f2ff224>
     9d8:	0000011d 	andeq	r0, r0, sp, lsl r1
     9dc:	00791100 	rsbseq	r1, r9, r0, lsl #2
     9e0:	1d0c3401 	cfstrsne	mvf3, [ip, #-4]
     9e4:	01000001 	tsteq	r0, r1
     9e8:	0004dd0d 	andeq	sp, r4, sp, lsl #26
     9ec:	1a350100 	bne	d40df4 <startup-0x1f2bf20c>
     9f0:	000009f6 	strdeq	r0, [r0], -r6
     9f4:	04050004 	streq	r0, [r5], #-4
     9f8:	000009c5 	andeq	r0, r0, r5, asr #19
     9fc:	00019f04 	andeq	r9, r1, r4, lsl #30
     a00:	0f360100 	svceq	0x00360100
     a04:	000009f6 	strdeq	r0, [r0], -r6
     a08:	3801480c 	stmdacc	r1, {r2, r3, fp, lr}
     a0c:	000a4509 	andeq	r4, sl, r9, lsl #10
     a10:	014f0d00 	cmpeq	pc, r0, lsl #26
     a14:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
     a18:	00002509 	andeq	r2, r0, r9, lsl #10
     a1c:	fb0d0000 	blx	340a26 <startup-0x1fcbf5da>
     a20:	01000005 	tsteq	r0, r5
     a24:	0025093a 	eoreq	r0, r5, sl, lsr r9
     a28:	0d040000 	stceq	0, cr0, [r4, #-0]
     a2c:	000006d2 	ldrdeq	r0, [r0], -r2
     a30:	25093b01 	strcs	r3, [r9, #-2817]	; 0xfffff4ff
     a34:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     a38:	00787011 	rsbseq	r7, r8, r1, lsl r0
     a3c:	450b3c01 	strmi	r3, [fp, #-3073]	; 0xfffff3ff
     a40:	0c00000a 	stceq	0, cr0, [r0], {10}
     a44:	093b0a00 	ldmdbeq	fp!, {r9, fp}
     a48:	0a550000 	beq	1540a50 <startup-0x1eabf5b0>
     a4c:	2c0b0000 	stccs	0, cr0, [fp], {-0}
     a50:	1d000000 	stcne	0, cr0, [r0, #-0]
     a54:	03fd0400 	mvnseq	r0, #0, 8
     a58:	3d010000 	stccc	0, cr0, [r1, #-0]
     a5c:	000a0803 	andeq	r0, sl, r3, lsl #16
     a60:	03fc0400 	mvnseq	r0, #0, 8
     a64:	3d010000 	stccc	0, cr0, [r1, #-0]
     a68:	000a6d0e 	andeq	r6, sl, lr, lsl #26
     a6c:	08040500 	stmdaeq	r4, {r8, sl}
     a70:	1000000a 	andne	r0, r0, sl
     a74:	000005a2 	andeq	r0, r0, r2, lsr #11
     a78:	103f0124 	eorsne	r0, pc, r4, lsr #2
     a7c:	00000af6 	strdeq	r0, [r0], -r6
     a80:	6f656711 	svcvs	0x00656711
     a84:	0f400100 	svceq	0x00400100
     a88:	00000a61 	andeq	r0, r0, r1, ror #20
     a8c:	008e0d00 	addeq	r0, lr, r0, lsl #26
     a90:	41010000 	mrsmi	r0, (UNDEF: 1)
     a94:	00002509 	andeq	r2, r0, r9, lsl #10
     a98:	930d0400 	movwls	r0, #54272	; 0xd400
     a9c:	01000000 	mrseq	r0, (UNDEF: 0)
     aa0:	00250f41 	eoreq	r0, r5, r1, asr #30
     aa4:	0d080000 	stceq	0, cr0, [r8, #-0]
     aa8:	00000605 	andeq	r0, r0, r5, lsl #12
     aac:	2c124201 	lfmcs	f4, 4, [r2], {1}
     ab0:	0c000000 	stceq	0, cr0, [r0], {-0}
     ab4:	00060e0d 	andeq	r0, r6, sp, lsl #28
     ab8:	18420100 	stmdane	r2, {r8}^
     abc:	0000002c 	andeq	r0, r0, ip, lsr #32
     ac0:	05c10d10 	strbeq	r0, [r1, #3344]	; 0xd10
     ac4:	43010000 	movwmi	r0, #4096	; 0x1000
     ac8:	000b070c 	andeq	r0, fp, ip, lsl #14
     acc:	fb0d1400 	blx	345ad6 <startup-0x1fcba52a>
     ad0:	01000002 	tsteq	r0, r2
     ad4:	0b070c44 	bleq	1c3bec <startup-0x1fe3c414>
     ad8:	0d180000 	ldceq	0, cr0, [r8, #-0]
     adc:	00000126 	andeq	r0, r0, r6, lsr #2
     ae0:	070c4501 	streq	r4, [ip, -r1, lsl #10]
     ae4:	1c00000b 	stcne	0, cr0, [r0], {11}
     ae8:	0000e30d 	andeq	lr, r0, sp, lsl #6
     aec:	0c460100 	stfeqe	f0, [r6], {-0}
     af0:	00000b22 	andeq	r0, r0, r2, lsr #22
     af4:	011e0020 	tsteq	lr, r0, lsr #32
     af8:	1600000b 	strne	r0, [r0], -fp
     afc:	00000b01 	andeq	r0, r0, r1, lsl #22
     b00:	73040500 	movwvc	r0, #17664	; 0x4500
     b04:	0500000a 	streq	r0, [r0, #-10]
     b08:	000af604 	andeq	pc, sl, r4, lsl #12
     b0c:	0b221e00 	bleq	888314 <startup-0x1f777cec>
     b10:	01160000 	tsteq	r6, r0
     b14:	1600000b 	strne	r0, [r0], -fp
     b18:	00000025 	andeq	r0, r0, r5, lsr #32
     b1c:	00002516 	andeq	r2, r0, r6, lsl r5
     b20:	04050000 	streq	r0, [r5], #-0
     b24:	00000b0d 	andeq	r0, r0, sp, lsl #22
     b28:	0003cc04 	andeq	ip, r3, r4, lsl #24
     b2c:	03480100 	movteq	r0, #33024	; 0x8100
     b30:	00000a73 	andeq	r0, r0, r3, ror sl
     b34:	0003cb04 	andeq	ip, r3, r4, lsl #22
     b38:	0c480100 	stfeqe	f0, [r8], {-0}
     b3c:	00000b01 	andeq	r0, r0, r1, lsl #22
     b40:	0004e220 	andeq	lr, r4, r0, lsr #4
     b44:	0a500100 	beq	1400f4c <startup-0x1ebff0b4>
     b48:	00000a55 	andeq	r0, r0, r5, asr sl
     b4c:	081c0305 	ldmdaeq	ip, {r0, r2, r8, r9}
     b50:	e8212000 	stmda	r1!, {sp}
     b54:	01000003 	tsteq	r0, r3
     b58:	0b280f61 	bleq	a048e4 <startup-0x1f5fb71c>
     b5c:	03050000 	movweq	r0, #20480	; 0x5000
     b60:	20000864 	andcs	r0, r0, r4, ror #16
     b64:	00033122 	andeq	r3, r3, r2, lsr #2
     b68:	018e0100 	orreq	r0, lr, r0, lsl #2
     b6c:	0006d206 	andeq	sp, r6, r6, lsl #4
     b70:	00003020 	andeq	r3, r0, r0, lsr #32
     b74:	8b9c0100 	blhi	fe700f7c <ball_object+0xde700718>
     b78:	2300000b 	movwcs	r0, #11
     b7c:	01007375 	tsteq	r0, r5, ror r3
     b80:	2c1f018e 	ldfcss	f0, [pc], {142}	; 0x8e
     b84:	02000000 	andeq	r0, r0, #0, 0
     b88:	22007491 	andcs	r7, r0, #-1862270976	; 0x91000000
     b8c:	0000070e 	andeq	r0, r0, lr, lsl #14
     b90:	06017a01 	streq	r7, [r1], -r1, lsl #20
     b94:	2000067c 	andcs	r0, r0, ip, ror r6
     b98:	00000056 	andeq	r0, r0, r6, asr r0
     b9c:	0bb29c01 	bleq	feca7ba8 <ball_object+0xdeca7344>
     ba0:	6d230000 	stcvs	0, cr0, [r3, #-0]
     ba4:	7a010073 	bvc	40d78 <startup-0x1ffbf288>
     ba8:	002c1f01 	eoreq	r1, ip, r1, lsl #30
     bac:	91020000 	mrsls	r0, (UNDEF: 2)
     bb0:	82240074 	eorhi	r0, r4, #116, 0	; 0x74
     bb4:	01000000 	mrseq	r0, (UNDEF: 0)
     bb8:	3806016f 	stmdacc	r6, {r0, r1, r2, r3, r5, r6, r8}
     bbc:	44200006 	strtmi	r0, [r0], #-6
     bc0:	01000000 	mrseq	r0, (UNDEF: 0)
     bc4:	03bb259c 			; <UNDEFINED> instruction: 0x03bb259c
     bc8:	31010000 	mrscc	r0, (UNDEF: 1)
     bcc:	00250501 	eoreq	r0, r5, r1, lsl #10
     bd0:	04ea0000 	strbteq	r0, [sl], #0
     bd4:	014e2000 	mrseq	r2, (UNDEF: 78)
     bd8:	9c010000 	stcls	0, cr0, [r1], {-0}
     bdc:	00000ca1 	andeq	r0, r0, r1, lsr #25
     be0:	01006c23 	tsteq	r0, r3, lsr #24
     be4:	75150131 	ldrvc	r0, [r5, #-305]	; 0xfffffecf
     be8:	02000009 	andeq	r0, r0, #9, 0
     bec:	c5265491 	strgt	r5, [r6, #-1169]!	; 0xfffffb6f
     bf0:	01000003 	tsteq	r0, r3
     bf4:	25090133 	strcs	r0, [r9, #-307]	; 0xfffffecd
     bf8:	02000000 	andeq	r0, r0, #0, 0
     bfc:	07267491 			; <UNDEFINED> instruction: 0x07267491
     c00:	01000007 	tsteq	r0, r7
     c04:	25100133 	ldrcs	r0, [r0, #-307]	; 0xfffffecd
     c08:	02000000 	andeq	r0, r0, #0, 0
     c0c:	2d265c91 	stccs	12, cr5, [r6, #-580]!	; 0xfffffdbc
     c10:	01000002 	tsteq	r0, r2
     c14:	25180133 	ldrcs	r0, [r8, #-307]	; 0xfffffecd
     c18:	02000000 	andeq	r0, r0, #0, 0
     c1c:	4e265891 	mcrmi	8, 1, r5, cr6, cr1, {4}
     c20:	01000004 	tsteq	r0, r4
     c24:	25200133 	strcs	r0, [r0, #-307]!	; 0xfffffecd
     c28:	02000000 	andeq	r0, r0, #0, 0
     c2c:	b5267091 	strlt	r7, [r6, #-145]!	; 0xffffff6f
     c30:	01000003 	tsteq	r0, r3
     c34:	252b0133 	strcs	r0, [fp, #-307]!	; 0xfffffecd
     c38:	02000000 	andeq	r0, r0, #0, 0
     c3c:	aa266c91 	bge	99be88 <startup-0x1f664178>
     c40:	01000001 	tsteq	r0, r1
     c44:	25320133 	ldrcs	r0, [r2, #-307]!	; 0xfffffecd
     c48:	02000000 	andeq	r0, r0, #0, 0
     c4c:	79276091 	stmdbvc	r7!, {r0, r4, r7, sp, lr}
     c50:	01330100 	teqeq	r3, r0, lsl #2
     c54:	00002538 	andeq	r2, r0, r8, lsr r5
     c58:	68910200 	ldmvs	r1, {r9}
     c5c:	73626128 	cmnvc	r2, #10
     c60:	25000600 	strcs	r0, [r0, #-1536]	; 0xfffffa00
     c64:	6d000000 	stcvs	0, cr0, [r0, #-0]
     c68:	2900000c 	stmdbcs	r0, {r2, r3}
     c6c:	04f62a00 	ldrbteq	r2, [r6], #2560	; 0xa00
     c70:	00322000 	eorseq	r2, r2, r0
     c74:	0c880000 	stceq	0, cr0, [r8], {0}
     c78:	612b0000 			; <UNDEFINED> instruction: 0x612b0000
     c7c:	06007362 	streq	r7, [r0], -r2, ror #6
     c80:	00002500 	andeq	r2, r0, r0, lsl #10
     c84:	00002900 	andeq	r2, r0, r0, lsl #18
     c88:	0005d22c 	andeq	sp, r5, ip, lsr #4
     c8c:	00005c20 	andeq	r5, r0, r0, lsr #24
     c90:	00782700 	rsbseq	r2, r8, r0, lsl #14
     c94:	0d015d01 	stceq	13, cr5, [r1, #-4]
     c98:	00000025 	andeq	r0, r0, r5, lsr #32
     c9c:	00649102 	rsbeq	r9, r4, r2, lsl #2
     ca0:	00982200 	addseq	r2, r8, r0, lsl #4
     ca4:	21010000 	mrscs	r0, (UNDEF: 1)
     ca8:	03f20601 	mvnseq	r0, #1048576	; 0x100000
     cac:	00f82000 	rscseq	r2, r8, r0
     cb0:	9c010000 	stcls	0, cr0, [r1], {-0}
     cb4:	00000d1a 	andeq	r0, r0, sl, lsl sp
     cb8:	01007223 	tsteq	r0, r3, lsr #4
     cbc:	b31a0121 	tstlt	sl, #1073741832	; 0x40000008
     cc0:	02000009 	andeq	r0, r0, #9, 0
     cc4:	c0266491 	mlagt	r6, r1, r4, r6
     cc8:	01000003 	tsteq	r0, r3
     ccc:	690a0124 	stmdbvs	sl, {r2, r5, r8}
     cd0:	02000009 	andeq	r0, r0, #9, 0
     cd4:	bb2d7491 	bllt	b5df20 <startup-0x1f4a20e0>
     cd8:	01000003 	tsteq	r0, r3
     cdc:	25090119 	strcs	r0, [r9, #-281]	; 0xfffffee7
     ce0:	e9000000 	stmdb	r0, {}	; <UNPREDICTABLE>
     ce4:	2900000c 	stmdbcs	r0, {r2, r3}
     ce8:	02222600 	eoreq	r2, r2, #0, 12
     cec:	27010000 	strcs	r0, [r1, -r0]
     cf0:	09690a01 	stmdbeq	r9!, {r0, r9, fp}^
     cf4:	91020000 	mrsls	r0, (UNDEF: 2)
     cf8:	06f62670 			; <UNDEFINED> instruction: 0x06f62670
     cfc:	2a010000 	bcs	40d04 <startup-0x1ffbf2fc>
     d00:	09690a01 	stmdbeq	r9!, {r0, r9, fp}^
     d04:	91020000 	mrsls	r0, (UNDEF: 2)
     d08:	0120266c 			; <UNDEFINED> instruction: 0x0120266c
     d0c:	2d010000 	stccs	0, cr0, [r1, #-0]
     d10:	09690a01 	stmdbeq	r9!, {r0, r9, fp}^
     d14:	91020000 	mrsls	r0, (UNDEF: 2)
     d18:	1a220068 	bne	880ec0 <startup-0x1f77f140>
     d1c:	01000000 	mrseq	r0, (UNDEF: 0)
     d20:	9806010f 	stmdals	r6, {r0, r1, r2, r3, r8}
     d24:	5a200003 	bpl	800d38 <startup-0x1f7ff2c8>
     d28:	01000000 	mrseq	r0, (UNDEF: 0)
     d2c:	000d899c 	muleq	sp, ip, r9
     d30:	06dd2e00 	ldrbeq	r2, [sp], r0, lsl #28
     d34:	0f010000 	svceq	0x00010000
     d38:	09fc1e01 	ldmibeq	ip!, {r0, r9, sl, fp, ip}^
     d3c:	91020000 	mrsls	r0, (UNDEF: 2)
     d40:	30702764 	rsbscc	r2, r0, r4, ror #14
     d44:	01110100 	tsteq	r1, r0, lsl #2
     d48:	0009fc10 	andeq	pc, r9, r0, lsl ip	; <UNPREDICTABLE>
     d4c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     d50:	00317027 	eorseq	r7, r1, r7, lsr #32
     d54:	14011101 	strne	r1, [r1], #-257	; 0xfffffeff
     d58:	000009fc 	strdeq	r0, [r0], -ip
     d5c:	2c709102 	ldfcsp	f1, [r0], #-8
     d60:	200003ac 	andcs	r0, r0, ip, lsr #7
     d64:	00000034 	andeq	r0, r0, r4, lsr r0
     d68:	0003c026 	andeq	ip, r3, r6, lsr #32
     d6c:	01180100 	tsteq	r8, r0, lsl #2
     d70:	0009690e 	andeq	r6, r9, lr, lsl #18
     d74:	6c910200 	lfmvs	f0, 4, [r1], {0}
     d78:	0003bb2f 	andeq	fp, r3, pc, lsr #22
     d7c:	01190100 	tsteq	r9, r0, lsl #2
     d80:	00002509 	andeq	r2, r0, r9, lsl #10
     d84:	00002900 	andeq	r2, r0, r0, lsl #18
     d88:	02da3000 	sbcseq	r3, sl, #0, 0
     d8c:	01010000 	mrseq	r0, (UNDEF: 1)
     d90:	00250501 	eoreq	r0, r5, r1, lsl #10
     d94:	03440000 	movteq	r0, #16384	; 0x4000
     d98:	00542000 	subseq	r2, r4, r0
     d9c:	9c010000 	stcls	0, cr0, [r1], {-0}
     da0:	00000db3 			; <UNDEFINED> instruction: 0x00000db3
     da4:	01006327 	tsteq	r0, r7, lsr #6
     da8:	3a130103 	bcc	4c11bc <startup-0x1fb3ee44>
     dac:	02000000 	andeq	r0, r0, #0, 0
     db0:	31007791 			; <UNDEFINED> instruction: 0x31007791
     db4:	00000134 	andeq	r0, r0, r4, lsr r1
     db8:	e006f401 	and	pc, r6, r1, lsl #8
     dbc:	64200002 	strtvs	r0, [r0], #-2
     dc0:	01000000 	mrseq	r0, (UNDEF: 0)
     dc4:	000dd79c 	muleq	sp, ip, r7
     dc8:	00723200 	rsbseq	r3, r2, r0, lsl #4
     dcc:	2c20f401 	cfstrscs	mvf15, [r0], #-4
     dd0:	02000000 	andeq	r0, r0, #0, 0
     dd4:	33007491 	movwcc	r7, #1169	; 0x491
     dd8:	000003da 	ldrdeq	r0, [r0], -sl
     ddc:	3a0fe401 	bcc	3f9de8 <startup-0x1fc06218>
     de0:	7a000000 	bvc	de8 <startup-0x1ffff218>
     de4:	66200002 	strtvs	r0, [r0], -r2
     de8:	01000000 	mrseq	r0, (UNDEF: 0)
     dec:	000e5b9c 	muleq	lr, ip, fp
     df0:	6f633400 	svcvs	0x00633400
     df4:	e501006c 	str	r0, [r1, #-108]	; 0xffffff94
     df8:	00002509 	andeq	r2, r0, r9, lsl #10
     dfc:	68910200 	ldmvs	r1, {r9}
     e00:	776f7234 			; <UNDEFINED> instruction: 0x776f7234
     e04:	0ee50100 	cdpeq	1, 14, cr0, cr5, cr0, {0}
     e08:	00000025 	andeq	r0, r0, r5, lsr #32
     e0c:	346c9102 	strbtcc	r9, [ip], #-258	; 0xfffffefe
     e10:	0079656b 	rsbseq	r6, r9, fp, ror #10
     e14:	5b13e601 	blpl	4fa620 <startup-0x1fb059e0>
     e18:	0200000e 	andeq	r0, r0, #14, 0
     e1c:	34355891 	ldrtcc	r5, [r5], #-2193	; 0xfffff76f
     e20:	01000001 	tsteq	r0, r1
     e24:	002509e9 	eoreq	r0, r5, r9, ror #19
     e28:	0e300000 	cdpeq	0, 3, cr0, cr0, cr0, {0}
     e2c:	00290000 	eoreq	r0, r9, r0
     e30:	0002922c 	andeq	r9, r2, ip, lsr #4
     e34:	00002e20 	andeq	r2, r0, r0, lsr #28
     e38:	01343500 	teqeq	r4, r0, lsl #10
     e3c:	e9010000 	stmdb	r1, {}	; <UNPREDICTABLE>
     e40:	00002509 	andeq	r2, r0, r9, lsl #10
     e44:	000e4b00 	andeq	r4, lr, r0, lsl #22
     e48:	36002900 	strcc	r2, [r0], -r0, lsl #18
     e4c:	000002da 	ldrdeq	r0, [r0], -sl
     e50:	250fea01 	strcs	lr, [pc, #-2561]	; 457 <startup-0x1ffffba9>
     e54:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
     e58:	0a000000 	beq	e60 <startup-0x1ffff1a0>
     e5c:	0000003a 	andeq	r0, r0, sl, lsr r0
     e60:	00000e6b 	andeq	r0, r0, fp, ror #28
     e64:	00002c0b 	andeq	r2, r0, fp, lsl #24
     e68:	37000f00 	strcc	r0, [r0, -r0, lsl #30]
     e6c:	00000418 	andeq	r0, r0, r8, lsl r4
     e70:	5a0ddd01 	bpl	37827c <startup-0x1fc87d84>
     e74:	20200002 	eorcs	r0, r0, r2
     e78:	01000000 	mrseq	r0, (UNDEF: 0)
     e7c:	000ead9c 	muleq	lr, ip, sp
     e80:	006f3200 	rsbeq	r3, pc, r0, lsl #4
     e84:	342bdd01 	strtcc	sp, [fp], #-3329	; 0xfffff2ff
     e88:	0200000b 	andeq	r0, r0, #11, 0
     e8c:	56387491 			; <UNDEFINED> instruction: 0x56387491
     e90:	01000003 	tsteq	r0, r3
     e94:	002532dd 	ldrdeq	r3, [r5], -sp	; <UNPREDICTABLE>
     e98:	91020000 	mrsls	r0, (UNDEF: 2)
     e9c:	035d3870 	cmpeq	sp, #112, 16	; 0x700000
     ea0:	dd010000 	stcle	0, cr0, [r1, #-0]
     ea4:	0000253e 	andeq	r2, r0, lr, lsr r5
     ea8:	6c910200 	lfmvs	f0, 4, [r1], {0}
     eac:	01013900 	tsteq	r1, r0, lsl #18
     eb0:	bc010000 	stclt	0, cr0, [r1], {-0}
     eb4:	0001c00d 	andeq	ip, r1, sp
     eb8:	00009a20 	andeq	r9, r0, r0, lsr #20
     ebc:	ef9c0100 	svc	0x009c0100
     ec0:	3200000e 	andcc	r0, r0, #14, 0
     ec4:	bc01006f 	stclt	0, cr0, [r1], {111}	; 0x6f
     ec8:	000b3426 	andeq	r3, fp, r6, lsr #8
     ecc:	6c910200 	lfmvs	f0, 4, [r1], {0}
     ed0:	00060121 	andeq	r0, r6, r1, lsr #2
     ed4:	09be0100 	ldmibeq	lr!, {r8}
     ed8:	00000025 	andeq	r0, r0, r5, lsr #32
     edc:	21749102 	cmncs	r4, r2, lsl #2
     ee0:	0000060a 	andeq	r0, r0, sl, lsl #12
     ee4:	2513be01 	ldrcs	fp, [r3, #-3585]	; 0xfffff1ff
     ee8:	02000000 	andeq	r0, r0, #0, 0
     eec:	39007091 	stmdbcc	r0, {r0, r4, r7, ip, sp, lr}
     ef0:	0000042d 	andeq	r0, r0, sp, lsr #8
     ef4:	5e0db601 	cfmadd32pl	mvax0, mvfx11, mvfx13, mvfx1
     ef8:	62200001 	eorvs	r0, r0, #1, 0
     efc:	01000000 	mrseq	r0, (UNDEF: 0)
     f00:	000f2a9c 	muleq	pc, ip, sl	; <UNPREDICTABLE>
     f04:	006f3200 	rsbeq	r3, pc, r0, lsl #4
     f08:	3427b601 	strtcc	fp, [r7], #-1537	; 0xfffff9ff
     f0c:	0200000b 	andeq	r0, r0, #11, 0
     f10:	662c6c91 			; <UNDEFINED> instruction: 0x662c6c91
     f14:	50200001 	eorpl	r0, r0, r1
     f18:	34000000 	strcc	r0, [r0], #-0
     f1c:	b7010070 	smlsdxlt	r1, r0, r0, r0
     f20:	0000250d 	andeq	r2, r0, sp, lsl #10
     f24:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     f28:	12390000 	eorsne	r0, r9, #0, 0
     f2c:	01000002 	tsteq	r0, r2
     f30:	00fc0daf 	rscseq	r0, ip, pc, lsr #27
     f34:	00622000 	rsbeq	r2, r2, r0
     f38:	9c010000 	stcls	0, cr0, [r1], {-0}
     f3c:	00000f65 	andeq	r0, r0, r5, ror #30
     f40:	01006f32 	tsteq	r0, r2, lsr pc
     f44:	0b3425af 	bleq	d0a608 <startup-0x1f2f59f8>
     f48:	91020000 	mrsls	r0, (UNDEF: 2)
     f4c:	01042c6c 	tsteq	r4, ip, ror #24
     f50:	00502000 	subseq	r2, r0, r0
     f54:	70340000 	eorsvc	r0, r4, r0
     f58:	0db10100 	ldfeqs	f0, [r1]
     f5c:	00000025 	andeq	r0, r0, r5, lsr #32
     f60:	00749102 	rsbseq	r9, r4, r2, lsl #2
     f64:	06fc3a00 	ldrbteq	r3, [ip], r0, lsl #20
     f68:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
     f6c:	00006406 	andeq	r6, r0, r6, lsl #8
     f70:	00009820 	andeq	r9, r0, r0, lsr #16
     f74:	ae9c0100 	fmlgee	f0, f4, f0
     f78:	3400000f 	strcc	r0, [r0], #-15
     f7c:	9a010063 	bls	41110 <startup-0x1ffbeef0>
     f80:	00003a13 	andeq	r3, r0, r3, lsl sl
     f84:	6b910200 	blvs	fe44178c <ball_object+0xde440f28>
     f88:	01007034 	tsteq	r0, r4, lsr r0
     f8c:	0b340d9b 	bleq	d04600 <startup-0x1f2fba00>
     f90:	91020000 	mrsls	r0, (UNDEF: 2)
     f94:	007a2c6c 	rsbseq	r2, sl, ip, ror #24
     f98:	00762000 	rsbseq	r2, r6, r0
     f9c:	0e360000 	cdpeq	0, 3, cr0, cr6, cr0, {0}
     fa0:	01000007 	tsteq	r0, r7
     fa4:	002509a2 	eoreq	r0, r5, r2, lsr #19
     fa8:	00290000 	eoreq	r0, r9, r0
     fac:	7d3b0000 	ldcvc	0, cr0, [fp, #-0]
     fb0:	01000005 	tsteq	r0, r5
     fb4:	0028068d 	eoreq	r0, r8, sp, lsl #13
     fb8:	003c2000 	eorseq	r2, ip, r0
     fbc:	9c010000 	stcls	0, cr0, [r1], {-0}
     fc0:	0002ed31 	andeq	lr, r2, r1, lsr sp
     fc4:	06870100 	streq	r0, [r7], r0, lsl #2
     fc8:	20000022 	andcs	r0, r0, r2, lsr #32
     fcc:	00000006 	andeq	r0, r0, r6
     fd0:	0fef9c01 	svceq	0x00ef9c01
     fd4:	78320000 	ldmdavc	r2!, {}	; <UNPREDICTABLE>
     fd8:	1e870100 	rmfnes	f0, f7, f0
     fdc:	00000025 	andeq	r0, r0, r5, lsr #32
     fe0:	79325001 	ldmdbvc	r2!, {r0, ip, lr}
     fe4:	25870100 	strcs	r0, [r7, #256]	; 0x100
     fe8:	00000025 	andeq	r0, r0, r5, lsr #32
     fec:	31005101 	tstcc	r0, r1, lsl #2
     ff0:	00000389 	andeq	r0, r0, r9, lsl #7
     ff4:	1c068101 	stfned	f0, [r6], {1}
     ff8:	06200000 	strteq	r0, [r0], -r0
     ffc:	01000000 	mrseq	r0, (UNDEF: 0)
    1000:	00101e9c 	mulseq	r0, ip, lr
    1004:	00783200 	rsbseq	r3, r8, r0, lsl #4
    1008:	251c8101 	ldrcs	r8, [ip, #-257]	; 0xfffffeff
    100c:	01000000 	mrseq	r0, (UNDEF: 0)
    1010:	00793250 	rsbseq	r3, r9, r0, asr r2
    1014:	25238101 	strcs	r8, [r3, #-257]!	; 0xfffffeff
    1018:	01000000 	mrseq	r0, (UNDEF: 0)
    101c:	9f3b0051 	svcls	0x003b0051
    1020:	01000004 	tsteq	r0, r4
    1024:	0016067b 	andseq	r0, r6, fp, ror r6
    1028:	00062000 	andeq	r2, r6, r0
    102c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1030:	0003143b 	andeq	r1, r3, fp, lsr r4
    1034:	06750100 	ldrbteq	r0, [r5], -r0, lsl #2
    1038:	20000010 	andcs	r0, r0, r0, lsl r0
    103c:	00000006 	andeq	r0, r0, r6
    1040:	753b9c01 	ldrvc	r9, [fp, #-3073]!	; 0xfffff3ff
    1044:	01000005 	tsteq	r0, r5
    1048:	0000066c 	andeq	r0, r0, ip, ror #12
    104c:	000c2000 	andeq	r2, ip, r0
    1050:	9c010000 	stcls	0, cr0, [r1], {-0}
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23, 0
  14:	0b0b0024 	bleq	2c00ac <startup-0x1fd3ff54>
  18:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  1c:	24030000 	strcs	r0, [r3], #-0
  20:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  24:	000e030b 	andeq	r0, lr, fp, lsl #6
  28:	00160400 	andseq	r0, r6, r0, lsl #8
  2c:	0b3a0e03 	bleq	e83840 <startup-0x1f17c7c0>
  30:	0b390b3b 	bleq	e42d24 <startup-0x1f1bd2dc>
  34:	00001349 	andeq	r1, r0, r9, asr #6
  38:	0b000f05 	bleq	3c54 <startup-0x1fffc3ac>
  3c:	0013490b 	andseq	r4, r3, fp, lsl #18
  40:	00130600 	andseq	r0, r3, r0, lsl #12
  44:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
  48:	16070000 	strne	r0, [r7], -r0
  4c:	3a0e0300 	bcc	380c54 <startup-0x1fc7f3ac>
  50:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  54:	0013490b 	andseq	r4, r3, fp, lsl #18
  58:	01170800 	tsteq	r7, r0, lsl #16
  5c:	0b3a0b0b 	bleq	e82c90 <startup-0x1f17d370>
  60:	0b390b3b 	bleq	e42d54 <startup-0x1f1bd2ac>
  64:	00001301 	andeq	r1, r0, r1, lsl #6
  68:	03000d09 	movweq	r0, #3337	; 0xd09
  6c:	3b0b3a0e 	blcc	2ce8ac <startup-0x1fd31754>
  70:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  74:	0a000013 	beq	c8 <startup-0x1fffff38>
  78:	13490101 	movtne	r0, #37121	; 0x9101
  7c:	00001301 	andeq	r1, r0, r1, lsl #6
  80:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
  84:	000b2f13 	andeq	r2, fp, r3, lsl pc
  88:	01130c00 	tsteq	r3, r0, lsl #24
  8c:	0b3a0b0b 	bleq	e82cc0 <startup-0x1f17d340>
  90:	0b390b3b 	bleq	e42d84 <startup-0x1f1bd27c>
  94:	00001301 	andeq	r1, r0, r1, lsl #6
  98:	03000d0d 	movweq	r0, #3341	; 0xd0d
  9c:	3b0b3a0e 	blcc	2ce8dc <startup-0x1fd31724>
  a0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  a4:	000b3813 	andeq	r3, fp, r3, lsl r8
  a8:	000f0e00 	andeq	r0, pc, r0, lsl #28
  ac:	00000b0b 	andeq	r0, r0, fp, lsl #22
  b0:	4900260f 	stmdbmi	r0, {r0, r1, r2, r3, r9, sl, sp}
  b4:	10000013 	andne	r0, r0, r3, lsl r0
  b8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
  bc:	0b3a0b0b 	bleq	e82cf0 <startup-0x1f17d310>
  c0:	0b390b3b 	bleq	e42db4 <startup-0x1f1bd24c>
  c4:	00001301 	andeq	r1, r0, r1, lsl #6
  c8:	03000d11 	movweq	r0, #3345	; 0xd11
  cc:	3b0b3a08 	blcc	2ce8f4 <startup-0x1fd3170c>
  d0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  d4:	000b3813 	andeq	r3, fp, r3, lsl r8
  d8:	01131200 	tsteq	r3, r0, lsl #4
  dc:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
  e0:	0b3b0b3a 	bleq	ec2dd0 <startup-0x1f13d230>
  e4:	13010b39 	movwne	r0, #6969	; 0x1b39
  e8:	0d130000 	ldceq	0, cr0, [r3, #-0]
  ec:	3a0e0300 	bcc	380cf4 <startup-0x1fc7f30c>
  f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  f4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  f8:	14000005 	strne	r0, [r0], #-5
  fc:	19270015 	stmdbne	r7!, {r0, r2, r4}
 100:	15150000 	ldrne	r0, [r5, #-0]
 104:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
 108:	00130113 	andseq	r0, r3, r3, lsl r1
 10c:	00051600 	andeq	r1, r5, r0, lsl #12
 110:	00001349 	andeq	r1, r0, r9, asr #6
 114:	03011317 	movweq	r1, #4887	; 0x1317
 118:	3a050b0e 	bcc	142d58 <startup-0x1febd2a8>
 11c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 120:	0013010b 	andseq	r0, r3, fp, lsl #2
 124:	000d1800 	andeq	r1, sp, r0, lsl #16
 128:	0b3a0e03 	bleq	e8393c <startup-0x1f17c6c4>
 12c:	0b39053b 	bleq	e41620 <startup-0x1f1be9e0>
 130:	0b381349 	bleq	e04e5c <startup-0x1f1fb1a4>
 134:	0d190000 	ldceq	0, cr0, [r9, #-0]
 138:	3a0e0300 	bcc	380d40 <startup-0x1fc7f2c0>
 13c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 140:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 144:	1a000005 	bne	160 <startup-0x1ffffea0>
 148:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 14c:	0b3a0b0b 	bleq	e82d80 <startup-0x1f17d280>
 150:	0b39053b 	bleq	e41644 <startup-0x1f1be9bc>
 154:	00001301 	andeq	r1, r0, r1, lsl #6
 158:	0b01131b 	bleq	44dcc <startup-0x1ffbb234>
 15c:	3b0b3a0b 	blcc	2ce990 <startup-0x1fd31670>
 160:	010b3905 	tsteq	fp, r5, lsl #18
 164:	1c000013 	stcne	0, cr0, [r0], {19}
 168:	0b0b0117 	bleq	2c05cc <startup-0x1fd3fa34>
 16c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 170:	13010b39 	movwne	r0, #6969	; 0x1b39
 174:	0d1d0000 	ldceq	0, cr0, [sp, #-0]
 178:	3a0e0300 	bcc	380d80 <startup-0x1fc7f280>
 17c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 180:	0013490b 	andseq	r4, r3, fp, lsl #18
 184:	01151e00 	tsteq	r5, r0, lsl #28
 188:	13011927 	movwne	r1, #6439	; 0x1927
 18c:	341f0000 	ldrcc	r0, [pc], #-0	; 194 <startup-0x1ffffe6c>
 190:	3a0e0300 	bcc	380d98 <startup-0x1fc7f268>
 194:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 198:	3f13490b 	svccc	0x0013490b
 19c:	00193c19 	andseq	r3, r9, r9, lsl ip
 1a0:	00342000 	eorseq	r2, r4, r0
 1a4:	0b3a0e03 	bleq	e839b8 <startup-0x1f17c648>
 1a8:	0b390b3b 	bleq	e42e9c <startup-0x1f1bd164>
 1ac:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 1b0:	00001802 	andeq	r1, r0, r2, lsl #16
 1b4:	03003421 	movweq	r3, #1057	; 0x421
 1b8:	3b0b3a0e 	blcc	2ce9f8 <startup-0x1fd31608>
 1bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 1c0:	00180213 	andseq	r0, r8, r3, lsl r2
 1c4:	012e2200 			; <UNDEFINED> instruction: 0x012e2200
 1c8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 1cc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 1d0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 1d4:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1d8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 1dc:	00130119 	andseq	r0, r3, r9, lsl r1
 1e0:	00052300 	andeq	r2, r5, r0, lsl #6
 1e4:	0b3a0803 	bleq	e821f8 <startup-0x1f17de08>
 1e8:	0b39053b 	bleq	e416dc <startup-0x1f1be924>
 1ec:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 1f0:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
 1f4:	03193f00 	tsteq	r9, #0, 30
 1f8:	3b0b3a0e 	blcc	2cea38 <startup-0x1fd315c8>
 1fc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 200:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 204:	97184006 	ldrls	r4, [r8, -r6]
 208:	00001942 	andeq	r1, r0, r2, asr #18
 20c:	3f012e25 	svccc	0x00012e25
 210:	3a0e0319 	bcc	380e7c <startup-0x1fc7f184>
 214:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 218:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 21c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 220:	96184006 	ldrls	r4, [r8], -r6
 224:	13011942 	movwne	r1, #6466	; 0x1942
 228:	34260000 	strtcc	r0, [r6], #-0
 22c:	3a0e0300 	bcc	380e34 <startup-0x1fc7f1cc>
 230:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 234:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 238:	27000018 	smladcs	r0, r8, r0, r0
 23c:	08030034 	stmdaeq	r3, {r2, r4, r5}
 240:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 244:	13490b39 	movtne	r0, #39737	; 0x9b39
 248:	00001802 	andeq	r1, r0, r2, lsl #16
 24c:	3f012e28 	svccc	0x00012e28
 250:	3a080319 	bcc	200ebc <startup-0x1fdff144>
 254:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 258:	01193c13 	tsteq	r9, r3, lsl ip
 25c:	29000013 	stmdbcs	r0, {r0, r1, r4}
 260:	00000018 	andeq	r0, r0, r8, lsl r0
 264:	11010b2a 	tstne	r1, sl, lsr #22
 268:	01061201 	tsteq	r6, r1, lsl #4
 26c:	2b000013 	blcs	2c0 <startup-0x1ffffd40>
 270:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 274:	0b3a0803 	bleq	e82288 <startup-0x1f17dd78>
 278:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 27c:	0000193c 	andeq	r1, r0, ip, lsr r9
 280:	11010b2c 	tstne	r1, ip, lsr #22
 284:	00061201 	andeq	r1, r6, r1, lsl #4
 288:	012e2d00 			; <UNDEFINED> instruction: 0x012e2d00
 28c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 290:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 294:	13490b39 	movtne	r0, #39737	; 0x9b39
 298:	1301193c 	movwne	r1, #6460	; 0x193c
 29c:	052e0000 	streq	r0, [lr, #-0]!
 2a0:	3a0e0300 	bcc	380ea8 <startup-0x1fc7f158>
 2a4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 2a8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 2ac:	2f000018 	svccs	0x00000018
 2b0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 2b4:	0b3a0e03 	bleq	e83ac8 <startup-0x1f17c538>
 2b8:	0b39053b 	bleq	e417ac <startup-0x1f1be854>
 2bc:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
 2c0:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
 2c4:	03193f01 	tsteq	r9, #1, 30
 2c8:	3b0b3a0e 	blcc	2ceb08 <startup-0x1fd314f8>
 2cc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 2d0:	11134919 	tstne	r3, r9, lsl r9
 2d4:	40061201 	andmi	r1, r6, r1, lsl #4
 2d8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 2dc:	00001301 	andeq	r1, r0, r1, lsl #6
 2e0:	3f012e31 	svccc	0x00012e31
 2e4:	3a0e0319 	bcc	380f50 <startup-0x1fc7f0b0>
 2e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2ec:	1119270b 	tstne	r9, fp, lsl #14
 2f0:	40061201 	andmi	r1, r6, r1, lsl #4
 2f4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 2f8:	00001301 	andeq	r1, r0, r1, lsl #6
 2fc:	03000532 	movweq	r0, #1330	; 0x532
 300:	3b0b3a08 	blcc	2ceb28 <startup-0x1fd314d8>
 304:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 308:	00180213 	andseq	r0, r8, r3, lsl r2
 30c:	012e3300 			; <UNDEFINED> instruction: 0x012e3300
 310:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 314:	0b3b0b3a 	bleq	ec3004 <startup-0x1f13cffc>
 318:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 31c:	01111349 	tsteq	r1, r9, asr #6
 320:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 324:	01194296 			; <UNDEFINED> instruction: 0x01194296
 328:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
 32c:	08030034 	stmdaeq	r3, {r2, r4, r5}
 330:	0b3b0b3a 	bleq	ec3020 <startup-0x1f13cfe0>
 334:	13490b39 	movtne	r0, #39737	; 0x9b39
 338:	00001802 	andeq	r1, r0, r2, lsl #16
 33c:	3f012e35 	svccc	0x00012e35
 340:	3a0e0319 	bcc	380fac <startup-0x1fc7f054>
 344:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 348:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 34c:	00130119 	andseq	r0, r3, r9, lsl r1
 350:	012e3600 			; <UNDEFINED> instruction: 0x012e3600
 354:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 358:	0b3b0b3a 	bleq	ec3048 <startup-0x1f13cfb8>
 35c:	13490b39 	movtne	r0, #39737	; 0x9b39
 360:	0000193c 	andeq	r1, r0, ip, lsr r9
 364:	03012e37 	movweq	r2, #7735	; 0x1e37
 368:	3b0b3a0e 	blcc	2ceba8 <startup-0x1fd31458>
 36c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 370:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 374:	97184006 	ldrls	r4, [r8, -r6]
 378:	13011942 	movwne	r1, #6466	; 0x1942
 37c:	05380000 	ldreq	r0, [r8, #-0]!
 380:	3a0e0300 	bcc	380f88 <startup-0x1fc7f078>
 384:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 388:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 38c:	39000018 	stmdbcc	r0, {r3, r4}
 390:	0e03012e 	adfeqsp	f0, f3, #0.5
 394:	0b3b0b3a 	bleq	ec3084 <startup-0x1f13cf7c>
 398:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 39c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 3a0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 3a4:	00130119 	andseq	r0, r3, r9, lsl r1
 3a8:	012e3a00 			; <UNDEFINED> instruction: 0x012e3a00
 3ac:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 3b0:	0b3b0b3a 	bleq	ec30a0 <startup-0x1f13cf60>
 3b4:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 3b8:	06120111 			; <UNDEFINED> instruction: 0x06120111
 3bc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 3c0:	00130119 	andseq	r0, r3, r9, lsl r1
 3c4:	002e3b00 	eoreq	r3, lr, r0, lsl #22
 3c8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 3cc:	0b3b0b3a 	bleq	ec30bc <startup-0x1f13cf44>
 3d0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 3d4:	06120111 			; <UNDEFINED> instruction: 0x06120111
 3d8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 3dc:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000006f2 	strdeq	r0, [r0], -r2
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000702 	andcs	r0, r0, r2, lsl #14
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000062d 	andeq	r0, r0, sp, lsr #12
   4:	015f0003 	cmpeq	pc, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
  20:	616a2f73 	smcvs	41715	; 0xa2f3
  24:	62626f63 	rsbvs	r6, r2, #396	; 0x18c
  28:	66677265 	strbtvs	r7, [r7], -r5, ror #4
  2c:	2f6b6c61 	svccs	0x006b6c61
  30:	6b736544 	blvs	1cd9548 <startup-0x1e326ab8>
  34:	2f706f74 	svccs	0x00706f74
  38:	72702d43 	rsbsvc	r2, r0, #4288	; 0x10c0
  3c:	6172676f 	cmnvs	r2, pc, ror #14
  40:	72656d6d 	rsbvc	r6, r5, #6976	; 0x1b40
  44:	2f676e69 	svccs	0x00676e69
  48:	6c706f6d 	ldclvs	15, cr6, [r0], #-436	; 0xfffffe4c
  4c:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  50:	6f697461 	svcvs	0x00697461
  54:	2f72656e 	svccs	0x0072656e
  58:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
  5c:	676e6f70 			; <UNDEFINED> instruction: 0x676e6f70
  60:	70412f00 	subvc	r2, r1, r0, lsl #30
  64:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
  68:	6f697461 	svcvs	0x00697461
  6c:	632f736e 			; <UNDEFINED> instruction: 0x632f736e
  70:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	; 0xfffffe44
  74:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
  78:	2f707061 	svccs	0x00707061
  7c:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
  80:	73746e65 	cmnvc	r4, #1616	; 0x650
  84:	6168532f 	cmnvs	r8, pc, lsr #6
  88:	53646572 	cmnpl	r4, #478150656	; 0x1c800000
  8c:	6f707075 	svcvs	0x00707075
  90:	742f7472 	strtvc	r7, [pc], #-1138	; 98 <startup-0x1fffff68>
  94:	736c6f6f 	cmnvc	ip, #444	; 0x1bc
  98:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
  9c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
  a0:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
  a4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
  a8:	61652d65 	cmnvs	r5, r5, ror #26
  ac:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
  b0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
  b4:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
  b8:	2f007379 	svccs	0x00007379
  bc:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
  c0:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
  c4:	736e6f69 	cmnvc	lr, #420	; 0x1a4
  c8:	646f632f 	strbtvs	r6, [pc], #-815	; d0 <startup-0x1fffff30>
  cc:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
  d0:	70612e65 	rsbvc	r2, r1, r5, ror #28
  d4:	6f432f70 	svcvs	0x00432f70
  d8:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
  dc:	532f7374 			; <UNDEFINED> instruction: 0x532f7374
  e0:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
  e4:	70755364 	rsbsvc	r5, r5, r4, ror #6
  e8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
  ec:	6f6f742f 	svcvs	0x006f742f
  f0:	672f736c 	strvs	r7, [pc, -ip, ror #6]!
  f4:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
  f8:	6c2f6d72 	stcvs	13, cr6, [pc], #-456	; ffffff38 <ball_object+0xdffff6d4>
  fc:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
 100:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
 104:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 108:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 10c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 110:	322e392f 	eorcc	r3, lr, #770048	; 0xbc000
 114:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
 118:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 11c:	00006564 	andeq	r6, r0, r4, ror #10
 120:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 124:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
 128:	00010063 	andeq	r0, r1, r3, rrx
 12c:	636f6c00 	cmnvs	pc, #0, 24
 130:	00682e6b 	rsbeq	r2, r8, fp, ror #28
 134:	5f000002 	svcpl	0x00000002
 138:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 13c:	00682e73 	rsbeq	r2, r8, r3, ror lr
 140:	73000002 	movwvc	r0, #2
 144:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
 148:	00682e66 	rsbeq	r2, r8, r6, ror #28
 14c:	72000003 	andvc	r0, r0, #3, 0
 150:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
 154:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 158:	623c0000 	eorsvs	r0, ip, #0, 0
 15c:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
 160:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
 164:	00000000 	andeq	r0, r0, r0
 168:	00010500 	andeq	r0, r1, r0, lsl #10
 16c:	00000205 	andeq	r0, r0, r5, lsl #4
 170:	ec032000 	stc	0, cr2, [r3], {-0}
 174:	21130100 	tstcs	r3, r0, lsl #2
 178:	02212f21 	eoreq	r2, r1, #132	; 0x84
 17c:	01010003 	tsteq	r1, r3
 180:	05002005 	streq	r2, [r0, #-5]
 184:	00001002 	andeq	r1, r0, r2
 188:	00f40320 	rscseq	r0, r4, r0, lsr #6
 18c:	21050501 	tstcs	r5, r1, lsl #10
 190:	21010513 	tstcs	r1, r3, lsl r5
 194:	05232105 	streq	r2, [r3, #-261]!	; 0xfffffefb
 198:	05132105 	ldreq	r2, [r3, #-261]	; 0xfffffefb
 19c:	26052101 	strcs	r2, [r5], -r1, lsl #2
 1a0:	21050523 	tstcs	r5, r3, lsr #10
 1a4:	21010513 	tstcs	r1, r3, lsl r5
 1a8:	05232805 	streq	r2, [r3, #-2053]!	; 0xfffff7fb
 1ac:	05132105 	ldreq	r2, [r3, #-261]	; 0xfffffefb
 1b0:	17052101 	strne	r2, [r5, -r1, lsl #2]
 1b4:	31050523 	tstcc	r5, r3, lsr #10
 1b8:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
 1bc:	13053005 	movwne	r3, #20485	; 0x5005
 1c0:	2f050520 	svccs	0x00050520
 1c4:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
 1c8:	15053e05 	strne	r3, [r5, #-3589]	; 0xfffff1fb
 1cc:	2f010520 	svccs	0x00010520
 1d0:	3e0d05e7 	cfsh32cc	mvfx0, mvfx13, #-9
 1d4:	2f2f0505 	svccs	0x002f0505
 1d8:	310a052f 	tstcc	sl, pc, lsr #10
 1dc:	3d2e0905 			; <UNDEFINED> instruction: 0x3d2e0905
 1e0:	053d0d05 	ldreq	r0, [sp, #-3333]!	; 0xfffff2fb
 1e4:	16055909 	strne	r5, [r5], -r9, lsl #18
 1e8:	2e150591 	cfcmp32cs	r0, mvfx5, mvfx1
 1ec:	054a0d05 	strbeq	r0, [sl, #-3333]	; 0xfffff2fb
 1f0:	15052116 	strne	r2, [r5, #-278]	; 0xfffffeea
 1f4:	580d052e 	stmdapl	sp, {r1, r2, r3, r5, r8, sl}
 1f8:	05211605 	streq	r1, [r1, #-1541]!	; 0xfffff9fb
 1fc:	0d052e15 	stceq	14, cr2, [r5, #-84]	; 0xffffffac
 200:	2116054a 	tstcs	r6, sl, asr #10
 204:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
 208:	1605580d 	strne	r5, [r5], -sp, lsl #16
 20c:	2e150521 	cfmul64cs	mvdx0, mvdx5, mvdx1
 210:	054a0d05 	strbeq	r0, [sl, #-3333]	; 0xfffff2fb
 214:	2077030e 	rsbscs	r0, r7, lr, lsl #6
 218:	0f032805 	svceq	0x00032805
 21c:	4c0d0566 	cfstr32mi	mvfx0, [sp], {102}	; 0x66
 220:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
 224:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
 228:	28052103 	stmdacs	r5, {r0, r1, r8, sp}
 22c:	03040200 	movweq	r0, #16896	; 0x4200
 230:	002e052e 	eoreq	r0, lr, lr, lsr #10
 234:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
 238:	02002b05 	andeq	r2, r0, #5120	; 0x1400
 23c:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
 240:	04020009 	streq	r0, [r2], #-9
 244:	37052003 	strcc	r2, [r5, -r3]
 248:	03040200 	movweq	r0, #16896	; 0x4200
 24c:	00430520 	subeq	r0, r3, r0, lsr #10
 250:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 254:	02004905 	andeq	r4, r0, #81920	; 0x14000
 258:	05740304 	ldrbeq	r0, [r4, #-772]!	; 0xfffffcfc
 25c:	04020046 	streq	r0, [r2], #-70	; 0xffffffba
 260:	09052e03 	stmdbeq	r5, {r0, r1, r9, sl, fp, sp}
 264:	03040200 	movweq	r0, #16896	; 0x4200
 268:	002c0520 	eoreq	r0, ip, r0, lsr #10
 26c:	3b030402 	blcc	c127c <startup-0x1ff3ed84>
 270:	02001905 	andeq	r1, r0, #81920	; 0x14000
 274:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 278:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
 27c:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
 280:	01040200 	mrseq	r0, R12_usr
 284:	3f010520 	svccc	0x00010520
 288:	055a2a05 	ldrbeq	r2, [sl, #-2565]	; 0xfffff5fb
 28c:	05054b0d 	streq	r4, [r5, #-2829]	; 0xfffff4f3
 290:	001e052e 	andseq	r0, lr, lr, lsr #10
 294:	21030402 	tstcs	r3, r2, lsl #8
 298:	02002a05 	andeq	r2, r0, #20480	; 0x5000
 29c:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
 2a0:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
 2a4:	2d057403 	cfstrscs	mvf7, [r5, #-12]
 2a8:	03040200 	movweq	r0, #16896	; 0x4200
 2ac:	0009052e 	andeq	r0, r9, lr, lsr #10
 2b0:	20030402 	andcs	r0, r3, r2, lsl #8
 2b4:	02003905 	andeq	r3, r0, #81920	; 0x14000
 2b8:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
 2bc:	04020045 	streq	r0, [r2], #-69	; 0xffffffbb
 2c0:	4b052e03 	blmi	14bad4 <startup-0x1feb452c>
 2c4:	03040200 	movweq	r0, #16896	; 0x4200
 2c8:	00480574 	subeq	r0, r8, r4, ror r5
 2cc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 2d0:	02000905 	andeq	r0, r0, #81920	; 0x14000
 2d4:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
 2d8:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
 2dc:	19053b03 	stmdbne	r5, {r0, r1, r8, r9, fp, ip, sp}
 2e0:	01040200 	mrseq	r0, R12_usr
 2e4:	001e053c 	andseq	r0, lr, ip, lsr r5
 2e8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 2ec:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
 2f0:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 2f4:	29053f01 	stmdbcs	r5, {r0, r8, r9, sl, fp, ip, sp}
 2f8:	4e06055a 	cfrshl32mi	mvfx6, mvfx10, r0
 2fc:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
 300:	1b053e11 	blne	14fb4c <startup-0x1feb04b4>
 304:	2e18052e 	cfmul64cs	mvdx0, mvdx8, mvdx14
 308:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
 30c:	1b052111 	blne	148758 <startup-0x1feb78a8>
 310:	2e18052e 	cfmul64cs	mvdx0, mvdx8, mvdx14
 314:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
 318:	1a052315 	bne	148f74 <startup-0x1feb708c>
 31c:	2012052e 	andscs	r0, r2, lr, lsr #10
 320:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
 324:	12052f11 	andne	r2, r5, #68	; 0x44
 328:	2f160559 	svccs	0x00160559
 32c:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
 330:	0e052012 	mcreq	0, 0, r2, cr5, cr2, {0}
 334:	3d11054c 	cfldr32cc	mvfx0, [r1, #-304]	; 0xfffffed0
 338:	055c0705 	ldrbeq	r0, [ip, #-1797]	; 0xfffff8fb
 33c:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
 340:	11053c01 	tstne	r5, r1, lsl #24
 344:	5912053d 	ldmdbpl	r2, {r0, r2, r3, r4, r5, r8, sl}
 348:	3d330d05 	ldccc	13, cr0, [r3, #-20]!	; 0xffffffec
 34c:	053d0505 	ldreq	r0, [sp, #-1285]!	; 0xfffffafb
 350:	46054c01 	strmi	r4, [r5], -r1, lsl #24
 354:	670d054c 	strvs	r0, [sp, -ip, asr #10]
 358:	3d01053d 	cfstr32cc	mvfx0, [r1, #-244]	; 0xffffff0c
 35c:	054e1905 	strbeq	r1, [lr, #-2309]	; 0xfffff6fb
 360:	0d053e13 	stceq	14, cr3, [r5, #-76]	; 0xffffffb4
 364:	2e050568 	cfsh32cs	mvfx0, mvfx5, #56
 368:	05210905 	streq	r0, [r1, #-2309]!	; 0xfffff6fb
 36c:	0b054b0f 	bleq	152fb0 <startup-0x1fead050>
 370:	3d0d054b 	cfstr32cc	mvfx0, [sp, #-300]	; 0xfffffed4
 374:	053d1f05 	ldreq	r1, [sp, #-3845]!	; 0xfffff0fb
 378:	27052e1a 	smladcs	r5, sl, lr, r2
 37c:	2e220520 	cfsh64cs	mvdx0, mvdx2, #16
 380:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
 384:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
 388:	05053702 	streq	r3, [r5, #-1794]	; 0xfffff8fe
 38c:	01040200 	mrseq	r0, R12_usr
 390:	0c05443c 	cfstrseq	mvf4, [r5], {60}	; 0x3c
 394:	0001053d 	andeq	r0, r1, sp, lsr r5
 398:	21010402 	tstcs	r1, r2, lsl #8
 39c:	05682205 	strbeq	r2, [r8, #-517]!	; 0xfffffdfb
 3a0:	11054c05 	tstne	r5, r5, lsl #24
 3a4:	20053008 	andcs	r3, r5, r8
 3a8:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
 3ac:	05211105 	streq	r1, [r1, #-261]!	; 0xfffffefb
 3b0:	09052020 	stmdbeq	r5, {r5, sp}
 3b4:	2111052e 	tstcs	r1, lr, lsr #10
 3b8:	05202005 	streq	r2, [r0, #-5]!
 3bc:	11052e09 	tstne	r5, r9, lsl #28
 3c0:	20200521 	eorcs	r0, r0, r1, lsr #10
 3c4:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
 3c8:	21052112 	tstcs	r5, r2, lsl r1
 3cc:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
 3d0:	05230105 	streq	r0, [r3, #-261]!	; 0xfffffefb
 3d4:	09057616 	stmdbeq	r5, {r1, r2, r4, r9, sl, ip, sp, lr}
 3d8:	2007053f 	andcs	r0, r7, pc, lsr r5
 3dc:	053e0a05 	ldreq	r0, [lr, #-2565]!	; 0xfffff5fb
 3e0:	18054a07 	stmdane	r5, {r0, r1, r2, r9, fp, lr}
 3e4:	01040200 	mrseq	r0, R12_usr
 3e8:	2f0a0520 	svccs	0x000a0520
 3ec:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
 3f0:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
 3f4:	0a052001 	beq	148400 <startup-0x1feb7c00>
 3f8:	4a07052f 	bmi	1c18bc <startup-0x1fe3e744>
 3fc:	02001805 	andeq	r1, r0, #327680	; 0x50000
 400:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 404:	07052f0a 	streq	r2, [r5, -sl, lsl #30]
 408:	0018054a 	andseq	r0, r8, sl, asr #10
 40c:	20010402 	andcs	r0, r1, r2, lsl #8
 410:	052f0c05 	streq	r0, [pc, #-3077]!	; fffff813 <ball_object+0xdfffefaf>
 414:	25052101 	strcs	r2, [r5, #-257]	; 0xfffffeff
 418:	4e08056a 	cfsh32mi	mvfx0, mvfx8, #58
 41c:	3e0a052f 	cfsh32cc	mvfx0, mvfx10, #31
 420:	05221805 	streq	r1, [r2, #-2053]!	; 0xfffff7fb
 424:	1f052e0e 	svcne	0x00052e0e
 428:	2e0e053c 	mcrcs	5, 0, r0, cr14, cr12, {1}
 42c:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
 430:	2d052e0e 	stccs	14, cr2, [r5, #-56]	; 0xffffffc8
 434:	2e0e052e 	cfsh32cs	mvfx0, mvfx14, #30
 438:	052f0905 	streq	r0, [pc, #-2309]!	; fffffb3b <ball_object+0xdffff2d7>
 43c:	052f4c0c 	streq	r4, [pc, #-3084]!	; fffff838 <ball_object+0xdfffefd4>
 440:	3c7a030d 	ldclcc	3, cr0, [sl], #-52	; 0xffffffcc
 444:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
 448:	2e090301 	cdpcs	3, 0, cr0, cr9, cr1, {0}
 44c:	055a1d05 	ldrbeq	r1, [sl, #-3333]	; 0xfffff2fb
 450:	0a054d17 	beq	1538b4 <startup-0x1feac74c>
 454:	3c20052e 	cfstr32cc	mvfx0, [r0], #-184	; 0xffffff48
 458:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
 45c:	3c052e36 	stccc	14, cr2, [r5], {54}	; 0x36
 460:	2e39052e 	cdpcs	5, 3, cr0, cr9, cr14, {1}
 464:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
 468:	0a052e46 	beq	14bd88 <startup-0x1feb4278>
 46c:	2f05052e 	svccs	0x0005052e
 470:	054c1805 	strbeq	r1, [ip, #-2053]	; 0xfffff7fb
 474:	1b052e1e 	blne	14bcf4 <startup-0x1feb430c>
 478:	2e0a052e 	cfsh32cs	mvfx0, mvfx10, #30
 47c:	053c2805 	ldreq	r2, [ip, #-2053]!	; 0xfffff7fb
 480:	3f052e0a 	svccc	0x00052e0a
 484:	2e45052e 	cdpcs	5, 4, cr0, cr5, cr14, {1}
 488:	052e4205 	streq	r4, [lr, #-517]!	; 0xfffffdfb
 48c:	4f052e0a 	svcmi	0x00052e0a
 490:	2e55052e 	cdpcs	5, 5, cr0, cr5, cr14, {1}
 494:	052e5205 	streq	r5, [lr, #-517]!	; 0xfffffdfb
 498:	05052e0a 	streq	r2, [r5, #-3594]	; 0xfffff1f6
 49c:	4c19052f 	cfldr32mi	mvfx0, [r9], {47}	; 0x2f
 4a0:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
 4a4:	0a052e1c 	beq	14bd1c <startup-0x1feb42e4>
 4a8:	3c29052e 	cfstr32cc	mvfx0, [r9], #-184	; 0xffffff48
 4ac:	052e2f05 	streq	r2, [lr, #-3845]!	; 0xfffff0fb
 4b0:	0a052e2c 	beq	14bd68 <startup-0x1feb4298>
 4b4:	2e40052e 	cdpcs	5, 4, cr0, cr0, cr14, {1}
 4b8:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
 4bc:	4f052e49 	svcmi	0x00052e49
 4c0:	2e4c052e 	cdpcs	5, 4, cr0, cr12, cr14, {1}
 4c4:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
 4c8:	19052f05 	stmdbne	r5, {r0, r2, r8, r9, sl, fp, sp}
 4cc:	2e0a054c 	cfsh32cs	mvfx0, mvfx10, #44
 4d0:	053c2205 	ldreq	r2, [ip, #-517]!	; 0xfffffdfb
 4d4:	25052e28 	strcs	r2, [r5, #-3624]	; 0xfffff1d8
 4d8:	2e0a052e 	cfsh32cs	mvfx0, mvfx10, #30
 4dc:	052e4005 	streq	r4, [lr, #-5]!
 4e0:	49052e0a 	stmdbmi	r5, {r1, r3, r9, sl, fp, sp}
 4e4:	2e0a052e 	cfsh32cs	mvfx0, mvfx10, #30
 4e8:	052f0505 	streq	r0, [pc, #-1285]!	; ffffffeb <ball_object+0xdffff787>
 4ec:	17054b01 	strne	r4, [r5, -r1, lsl #22]
 4f0:	4c20054c 	cfstr32mi	mvfx0, [r0], #-304	; 0xfffffed0
 4f4:	05311205 	ldreq	r1, [r1, #-517]!	; 0xfffffdfb
 4f8:	15053c1c 	strne	r3, [r5, #-3100]	; 0xfffff3e4
 4fc:	2009052e 	andcs	r0, r9, lr, lsr #10
 500:	053c2b05 	ldreq	r2, [ip, #-2821]!	; 0xfffff4fb
 504:	2e053c35 	mcrcs	12, 0, r3, cr5, cr5, {1}
 508:	2022052e 	eorcs	r0, r2, lr, lsr #10
 50c:	053c0705 	ldreq	r0, [ip, #-1797]!	; 0xfffff8fb
 510:	053e2f0f 	ldreq	r2, [lr, #-3855]!	; 0xfffff0f1
 514:	15053107 	strne	r3, [r5, #-263]	; 0xfffffef9
 518:	2e0e053e 	mcrcs	5, 0, r0, cr14, cr14, {1}
 51c:	05211805 	streq	r1, [r1, #-2053]!	; 0xfffff7fb
 520:	052f2e11 	streq	r2, [pc, #-3601]!	; fffff717 <ball_object+0xdfffeeb3>
 524:	0e054c15 	mcreq	12, 0, r4, cr5, cr5, {0}
 528:	2118052e 	tstcs	r8, lr, lsr #10
 52c:	2f2e1105 	svccs	0x002e1105
 530:	054d0f05 	strbeq	r0, [sp, #-3845]	; 0xfffff0fb
 534:	08052e19 	stmdaeq	r5, {r0, r3, r4, r9, sl, fp, sp}
 538:	3015052e 	andscc	r0, r5, lr, lsr #10
 53c:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
 540:	11052118 	tstne	r5, r8, lsl r1
 544:	15052f2e 	strne	r2, [r5, #-3886]	; 0xfffff0d2
 548:	2e0e054c 	cfsh32cs	mvfx0, mvfx14, #44
 54c:	05211805 	streq	r1, [r1, #-2053]!	; 0xfffff7fb
 550:	052f2e11 	streq	r2, [pc, #-3601]!	; fffff747 <ball_object+0xdfffeee3>
 554:	1d054d13 	stcne	13, cr4, [r5, #-76]	; 0xffffffb4
 558:	2e0c053c 	mcrcs	5, 0, r0, cr12, cr12, {1}
 55c:	052f1705 	streq	r1, [pc, #-1797]!	; fffffe5f <ball_object+0xdffff5fb>
 560:	1a053c21 	bne	14f5ec <startup-0x1feb0a14>
 564:	200c052e 	andcs	r0, ip, lr, lsr #10
 568:	054c0e05 	strbeq	r0, [ip, #-3589]	; 0xfffff1fb
 56c:	0d052e07 	stceq	14, cr2, [r5, #-28]	; 0xffffffe4
 570:	2e170522 	cfmul64cs	mvdx0, mvdx7, mvdx2
 574:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
 578:	053e2f0f 	ldreq	r2, [lr, #-3855]!	; 0xfffff0f1
 57c:	0d053f16 	stceq	15, cr3, [r5, #-88]	; 0xffffffa8
 580:	2005052e 	andcs	r0, r5, lr, lsr #10
 584:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
 588:	05773d0d 	ldrbeq	r3, [r7, #-3341]!	; 0xfffff2f3
 58c:	054b690f 	strbeq	r6, [fp, #-2319]	; 0xfffff6f1
 590:	0f052e0b 	svceq	0x00052e0b
 594:	4b13053d 	blmi	4c1a90 <startup-0x1fb3e570>
 598:	02002905 	andeq	r2, r0, #81920	; 0x14000
 59c:	75030204 	strvc	r0, [r3, #-516]	; 0xfffffdfc
 5a0:	0024054a 	eoreq	r0, r4, sl, asr #10
 5a4:	3c010402 	cfstrscc	mvf0, [r1], {2}
 5a8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
 5ac:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 5b0:	3c0f030c 	stccc	3, cr0, [pc], {12}
 5b4:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
 5b8:	05054c18 	streq	r4, [r5, #-3096]	; 0xfffff3e8
 5bc:	200f0531 	andcs	r0, pc, r1, lsr r5	; <UNPREDICTABLE>
 5c0:	052f0505 	streq	r0, [pc, #-1285]!	; c3 <startup-0x1fffff3d>
 5c4:	0505200f 	streq	r2, [r5, #-15]
 5c8:	200e052f 	andcs	r0, lr, pc, lsr #10
 5cc:	052f0505 	streq	r0, [pc, #-1285]!	; cf <startup-0x1fffff31>
 5d0:	0a05200f 	beq	148614 <startup-0x1feb79ec>
 5d4:	000d052f 	andeq	r0, sp, pc, lsr #10
 5d8:	20010402 	andcs	r0, r1, r2, lsl #8
 5dc:	02001705 	andeq	r1, r0, #1310720	; 0x140000
 5e0:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 5e4:	0402000a 	streq	r0, [r2], #-10
 5e8:	05053c01 	streq	r3, [r5, #-3073]	; 0xfffff3ff
 5ec:	200f0521 	andcs	r0, pc, r1, lsr #10
 5f0:	052f0105 	streq	r0, [pc, #-261]!	; 4f3 <startup-0x1ffffb0d>
 5f4:	0c05a023 	stceq	0, cr10, [r5], {35}	; 0x23
 5f8:	830b054d 	movwhi	r0, #46413	; 0xb54d
 5fc:	053f0805 	ldreq	r0, [pc, #-2053]!	; fffffdff <ball_object+0xdffff59b>
 600:	0505840a 	streq	r8, [r5, #-1034]	; 0xfffffbf6
 604:	2f2f2f23 	svccs	0x002f2f23
 608:	052f0705 	streq	r0, [pc, #-1797]!	; ffffff0b <ball_object+0xdffff6a7>
 60c:	3c79030a 	ldclcc	3, cr0, [r9], #-40	; 0xffffffd8
 610:	09030105 	stmdbeq	r3, {r0, r2, r8}
 614:	5a23053c 	bpl	8c1b0c <startup-0x1f73e4f4>
 618:	054c0a05 	strbeq	r0, [ip, #-2565]	; 0xfffff5fb
 61c:	2f2f2205 	svccs	0x002f2205
 620:	2f07052f 	svccs	0x0007052f
 624:	7a030a05 	bvc	c2e40 <startup-0x1ff3d1c0>
 628:	4401053c 	strmi	r0, [r1], #-1340	; 0xfffffac4
 62c:	01000502 	tsteq	r0, r2, lsl #10
 630:	Address 0x0000000000000630 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6f73645f 	svcvs	0x0073645f
   4:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
   8:	00656c64 	rsbeq	r6, r5, r4, ror #24
   c:	7a69735f 	bvc	1a5cd90 <startup-0x1e5a3270>
  10:	725f0065 	subsvc	r0, pc, #101, 0	; 0x65
  14:	34646e61 	strbtcc	r6, [r4], #-3681	; 0xfffff19f
  18:	72640038 	rsbvc	r0, r4, #56, 0	; 0x38
  1c:	705f7761 	subsvc	r7, pc, r1, ror #14
  20:	67796c6f 	ldrbvs	r6, [r9, -pc, ror #24]!
  24:	5f006e6f 	svcpl	0x00006e6f
  28:	72656d65 	rsbvc	r6, r5, #6464	; 0x1940
  2c:	636e6567 	cmnvs	lr, #432013312	; 0x19c00000
  30:	552f0079 	strpl	r0, [pc, #-121]!	; ffffffbf <ball_object+0xdffff75b>
  34:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  38:	63616a2f 	cmnvs	r1, #192512	; 0x2f000
  3c:	6562626f 	strbvs	r6, [r2, #-623]!	; 0xfffffd91
  40:	61666772 	smcvs	26226	; 0x6672
  44:	442f6b6c 	strtmi	r6, [pc], #-2924	; 4c <startup-0x1fffffb4>
  48:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
  4c:	432f706f 			; <UNDEFINED> instruction: 0x432f706f
  50:	6f72702d 	svcvs	0x0072702d
  54:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
  58:	6972656d 	ldmdbvs	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
  5c:	6d2f676e 	stcvs	7, cr6, [pc, #-440]!	; fffffeac <ball_object+0xdffff648>
  60:	616c706f 	cmnvs	ip, pc, rrx
  64:	61726f62 	cmnvs	r2, r2, ror #30
  68:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  6c:	6d2f7265 	sfmvs	f7, 4, [pc, #-404]!	; fffffee0 <ball_object+0xdffff67c>
  70:	7065766f 	rsbvc	r7, r5, pc, ror #12
  74:	2f676e6f 	svccs	0x00676e6f
  78:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  7c:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  80:	65640063 	strbvs	r0, [r4, #-99]!	; 0xffffff9d
  84:	5f79616c 	svcpl	0x0079616c
  88:	6e303532 	mrcvs	5, 1, r3, cr0, cr2, {1}
  8c:	69640073 	stmdbvs	r4!, {r0, r1, r4, r5, r6}^
  90:	64007872 	strvs	r7, [r0], #-2162	; 0xfffff78e
  94:	00797269 	rsbseq	r7, r9, r9, ror #4
  98:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
  9c:	6365725f 	cmnvs	r5, #-268435451	; 0xf0000005
  a0:	6c676174 	stfvse	f6, [r7], #-464	; 0xfffffe30
  a4:	645f0065 	ldrbvs	r0, [pc], #-101	; ac <startup-0x1fffff54>
  a8:	00617461 	rsbeq	r7, r1, r1, ror #8
  ac:	7263775f 	rsbvc	r7, r3, #24903680	; 0x17c0000
  b0:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
  b4:	6174735f 	cmnvs	r4, pc, asr r3
  b8:	5f006574 	svcpl	0x00006574
  bc:	72736377 	rsbsvc	r6, r3, #-603979775	; 0xdc000001
  c0:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
  c4:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
  c8:	00657461 	rsbeq	r7, r5, r1, ror #8
  cc:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
  d0:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
  d4:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
  d8:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
  dc:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
  e0:	7300746e 	movwvc	r7, #1134	; 0x46e
  e4:	735f7465 	cmpvc	pc, #1694498816	; 0x65000000
  e8:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
  ec:	626c5f00 	rsbvs	r5, ip, #0, 30
  f0:	7a697366 	bvc	1a5ce90 <startup-0x1e5a3170>
  f4:	5f5f0065 	svcpl	0x005f0065
  f8:	61636f6c 	cmnvs	r3, ip, ror #30
  fc:	745f656c 	ldrbvc	r6, [pc], #-1388	; 104 <startup-0x1ffffefc>
 100:	766f6d00 	strbtvc	r6, [pc], -r0, lsl #26
 104:	61625f65 	cmnvs	r2, r5, ror #30
 108:	626f6c6c 	rsbvs	r6, pc, #108, 24	; 0x6c00
 10c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 110:	626d5f00 	rsbvs	r5, sp, #0, 30
 114:	776f7472 			; <UNDEFINED> instruction: 0x776f7472
 118:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
 11c:	00657461 	rsbeq	r7, r5, r1, ror #8
 120:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 124:	6f6d0034 	svcvs	0x006d0034
 128:	5f006576 	svcpl	0x00006576
 12c:	5f6d745f 	svcpl	0x006d745f
 130:	00636573 	rsbeq	r6, r3, r3, ror r5
 134:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
 138:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
 13c:	776f725f 			; <UNDEFINED> instruction: 0x776f725f
 140:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
 144:	6f6c2067 	svcvs	0x006c2067
 148:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 14c:	6e00746e 	cdpvs	4, 0, cr7, cr0, cr14, {3}
 150:	6f706d75 	svcvs	0x00706d75
 154:	73746e69 	cmnvc	r4, #1680	; 0x690
 158:	62755f00 	rsbsvs	r5, r5, #0, 30
 15c:	70006675 	andvc	r6, r0, r5, ror r6
 160:	67796c6f 	ldrbvs	r6, [r9, -pc, ror #24]!
 164:	6f706e6f 	svcvs	0x00706e6f
 168:	00746e69 	rsbseq	r6, r4, r9, ror #28
 16c:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
 170:	5f5f0065 	svcpl	0x005f0065
 174:	685f6d74 	ldmdavs	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 178:	0072756f 	rsbseq	r7, r2, pc, ror #10
 17c:	66735f5f 	uhsaxvs	r5, r3, pc	; <UNPREDICTABLE>
 180:	6e6f5f00 	cdpvs	15, 6, cr5, cr15, cr0, {0}
 184:	6978655f 	ldmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}^
 188:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
 18c:	5f007367 	svcpl	0x00007367
 190:	6b6f6f63 	blvs	1bdbf24 <startup-0x1e4240dc>
 194:	5f006569 	svcpl	0x00006569
 198:	6c67735f 	stclvs	3, cr7, [r7], #-380	; 0xfffffe84
 19c:	50006575 	andpl	r6, r0, r5, ror r5
 1a0:	594c4f50 	stmdbpl	ip, {r4, r6, r8, r9, sl, fp, lr}^
 1a4:	4e494f50 	mcrmi	15, 2, r4, cr9, cr0, {2}
 1a8:	65740054 	ldrbvs	r0, [r4, #-84]!	; 0xffffffac
 1ac:	5000706d 	andpl	r7, r0, sp, rrx
 1b0:	54434552 	strbpl	r4, [r3], #-1362	; 0xfffffaae
 1b4:	6c665f00 	stclvs	15, cr5, [r6], #-0
 1b8:	00736761 	rsbseq	r6, r3, r1, ror #14
 1bc:	5f73695f 	svcpl	0x0073695f
 1c0:	00617863 	rsbeq	r7, r1, r3, ror #16
 1c4:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
 1c8:	5f006e69 	svcpl	0x00006e69
 1cc:	736b6c62 	cmnvc	fp, #25088	; 0x6200
 1d0:	00657a69 	rsbeq	r7, r5, r9, ror #20
 1d4:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
 1d8:	5f00656c 	svcpl	0x0000656c
 1dc:	62747663 	rsbsvs	r7, r4, #103809024	; 0x6300000
 1e0:	5f006675 	svcpl	0x00006675
 1e4:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
 1e8:	5f007465 	svcpl	0x00007465
 1ec:	7273626d 	rsbsvc	r6, r3, #-805306362	; 0xd0000006
 1f0:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
 1f4:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
 1f8:	00657461 	rsbeq	r7, r5, r1, ror #8
 1fc:	72626d5f 	rsbvc	r6, r2, #6080	; 0x17c0
 200:	5f6e656c 	svcpl	0x006e656c
 204:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 208:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
 20c:	6772616e 	ldrbvs	r6, [r2, -lr, ror #2]!
 210:	72640073 	rsbvc	r0, r4, #115, 0	; 0x73
 214:	625f7761 	subsvs	r7, pc, #25427968	; 0x1840000
 218:	6f6c6c61 	svcvs	0x006c6c61
 21c:	63656a62 	cmnvs	r5, #401408	; 0x62000
 220:	696c0074 	stmdbvs	ip!, {r2, r4, r5, r6}^
 224:	0032656e 	eorseq	r6, r2, lr, ror #10
 228:	736e665f 	cmnvc	lr, #99614720	; 0x5f00000
 22c:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 230:	00796174 	rsbseq	r6, r9, r4, ror r1
 234:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 238:	6a2f7372 	bvs	bdd008 <startup-0x1f422ff8>
 23c:	626f6361 	rsbvs	r6, pc, #-2080374783	; 0x84000001
 240:	67726562 	ldrbvs	r6, [r2, -r2, ror #10]!
 244:	6b6c6166 	blvs	1b187e4 <startup-0x1e4e781c>
 248:	7365442f 	cmnvc	r5, #788529152	; 0x2f000000
 24c:	706f746b 	rsbvc	r7, pc, fp, ror #8
 250:	702d432f 	eorvc	r4, sp, pc, lsr #6
 254:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
 258:	656d6d61 	strbvs	r6, [sp, #-3425]!	; 0xfffff29f
 25c:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
 260:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 264:	6f62616c 	svcvs	0x0062616c
 268:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 26c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 270:	766f6d2f 	strbtvc	r6, [pc], -pc, lsr #26
 274:	6e6f7065 	cdpvs	0, 6, cr7, cr15, cr5, {3}
 278:	735f0067 	cmpvc	pc, #103, 0	; 0x67
 27c:	006e6769 	rsbeq	r6, lr, r9, ror #14
 280:	6f6c665f 	svcvs	0x006c665f
 284:	745f6b63 	ldrbvc	r6, [pc], #-2915	; 28c <startup-0x1ffffd74>
 288:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
 28c:	72726564 	rsbsvc	r6, r2, #100, 10	; 0x19000000
 290:	69425f00 	stmdbvs	r2, {r8, r9, sl, fp, ip, lr}^
 294:	746e6967 	strbtvc	r6, [lr], #-2407	; 0xfffff699
 298:	61675f00 	cmnvs	r7, r0, lsl #30
 29c:	5f616d6d 	svcpl	0x00616d6d
 2a0:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 2a4:	006d6167 	rsbeq	r6, sp, r7, ror #2
 2a8:	6165725f 	cmnvs	r5, pc, asr r2
 2ac:	725f0064 	subsvc	r0, pc, #100, 0	; 0x64
 2b0:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
 2b4:	006b5f74 	rsbeq	r5, fp, r4, ror pc
 2b8:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 2bc:	775f5f00 	ldrbvc	r5, [pc, -r0, lsl #30]
 2c0:	00626863 	rsbeq	r6, r2, r3, ror #16
 2c4:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
 2c8:	0074756f 	rsbseq	r7, r4, pc, ror #10
 2cc:	7476635f 	ldrbtvc	r6, [r6], #-863	; 0xfffffca1
 2d0:	006e656c 	rsbeq	r6, lr, ip, ror #10
 2d4:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
 2d8:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 2dc:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
 2e0:	6d6f6c6f 	stclvs	12, cr6, [pc, #-444]!	; 12c <startup-0x1ffffed4>
 2e4:	6e5f006e 	cdpvs	0, 5, cr0, cr15, cr14, {3}
 2e8:	73626f69 	cmnvc	r2, #420	; 0x1a4
 2ec:	61726700 	cmnvs	r2, r0, lsl #14
 2f0:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 2f4:	7869705f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
 2f8:	635f6c65 	cmpvs	pc, #25856	; 0x6500
 2fc:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 300:	6f687300 	svcvs	0x00687300
 304:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
 308:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 30c:	2064656e 	rsbcs	r6, r4, lr, ror #10
 310:	00746e69 	rsbseq	r6, r4, r9, ror #28
 314:	70617267 	rsbvc	r7, r1, r7, ror #4
 318:	5f636968 	svcpl	0x00636968
 31c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 320:	6c6c6169 	stfvse	f6, [ip], #-420	; 0xfffffe5c
 324:	00657a69 	rsbeq	r7, r5, r9, ror #20
 328:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
 32c:	30746978 	rsbscc	r6, r4, r8, ror r9
 330:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 334:	6d5f7961 	vldrvs.16	s15, [pc, #-194]	; 27a <startup-0x1ffffd86>	; <UNPREDICTABLE>
 338:	6f726b69 	svcvs	0x00726b69
 33c:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
 340:	6c616e67 	stclvs	14, cr6, [r1], #-412	; 0xfffffe64
 344:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
 348:	73615f00 	cmnvc	r1, #0, 30
 34c:	6d697463 	cfstrdvs	mvd7, [r9, #-396]!	; 0xfffffe74
 350:	75625f65 	strbvc	r5, [r2, #-3941]!	; 0xfffff09b
 354:	70730066 	rsbsvc	r0, r3, r6, rrx
 358:	78646565 	stmdavc	r4!, {r0, r2, r5, r6, r8, sl, sp, lr}^
 35c:	65707300 	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
 360:	00796465 	rsbseq	r6, r9, r5, ror #8
 364:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
 368:	00746c75 	rsbseq	r6, r4, r5, ror ip
 36c:	63775f5f 	cmnvs	r7, #380	; 0x17c
 370:	4c5f0068 	mrrcmi	0, 6, r0, pc, cr8	; <UNPREDICTABLE>
 374:	5f4b434f 	svcpl	0x004b434f
 378:	69770054 	ldmdbvs	r7!, {r2, r4, r6}^
 37c:	745f746e 	ldrbvc	r7, [pc], #-1134	; 384 <startup-0x1ffffc7c>
 380:	6c665f00 	stclvs	15, cr5, [r6], #-0
 384:	32736761 	rsbscc	r6, r3, #25427968	; 0x1840000
 388:	61726700 	cmnvs	r2, r0, lsl #14
 38c:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 390:	7869705f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
 394:	735f6c65 	cmpvc	pc, #25856	; 0x6500
 398:	5f007465 	svcpl	0x00007465
 39c:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 3a0:	5f5f0065 	svcpl	0x005f0065
 3a4:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 3a8:	00726165 	rsbseq	r6, r2, r5, ror #2
 3ac:	616d6e5f 	cmnvs	sp, pc, asr lr
 3b0:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
 3b4:	74737900 	ldrbtvc	r7, [r3], #-2304	; 0xfffff700
 3b8:	64007065 	strvs	r7, [r0], #-101	; 0xffffff9b
 3bc:	5f776172 	svcpl	0x00776172
 3c0:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 3c4:	65747300 	ldrbvs	r7, [r4, #-768]!	; 0xfffffd00
 3c8:	50007065 	andpl	r7, r0, r5, rrx
 3cc:	454a424f 	strbmi	r4, [sl, #-591]	; 0xfffffdb1
 3d0:	5f005443 	svcpl	0x00005443
 3d4:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 3d8:	656b0066 	strbvs	r0, [fp, #-102]!	; 0xffffff9a
 3dc:	5f006279 	svcpl	0x00006279
 3e0:	5f6d745f 	svcpl	0x006d745f
 3e4:	006e6f6d 	rsbeq	r6, lr, sp, ror #30
 3e8:	6c6c6162 	stfvse	f6, [ip], #-392	; 0xfffffe78
 3ec:	6a626f5f 	bvs	189c170 <startup-0x1e763e90>
 3f0:	00746365 	rsbseq	r6, r4, r5, ror #6
 3f4:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
 3f8:	00746978 	rsbseq	r6, r4, r8, ror r9
 3fc:	4f454750 	svcmi	0x00454750
 400:	5254454d 	subspl	r4, r4, #322961408	; 0x13400000
 404:	5f5f0059 	svcpl	0x005f0059
 408:	64696473 	strbtvs	r6, [r9], #-1139	; 0xfffffb8d
 40c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 410:	666f5f00 	strbtvs	r5, [pc], -r0, lsl #30
 414:	00745f66 	rsbseq	r5, r4, r6, ror #30
 418:	5f746573 	svcpl	0x00746573
 41c:	6c6c6162 	stfvse	f6, [ip], #-392	; 0xfffffe78
 420:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
 424:	735f7463 	cmpvc	pc, #1660944384	; 0x63000000
 428:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
 42c:	656c6300 	strbvs	r6, [ip, #-768]!	; 0xfffffd00
 430:	625f7261 	subsvs	r7, pc, #268435462	; 0x10000006
 434:	6f6c6c61 	svcvs	0x006c6c61
 438:	63656a62 	cmnvs	r5, #401408	; 0x62000
 43c:	6c660074 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30
 440:	0074616f 	rsbseq	r6, r4, pc, ror #2
 444:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
 448:	73696c65 	cmnvc	r9, #25856	; 0x6500
 44c:	72650074 	rsbvc	r0, r5, #116, 0	; 0x74
 450:	00726f72 	rsbseq	r6, r2, r2, ror pc
 454:	7463775f 	strbtvc	r7, [r3], #-1887	; 0xfffff8a1
 458:	5f626d6f 	svcpl	0x00626d6f
 45c:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 460:	6e750065 	cdpvs	0, 7, cr0, cr5, cr5, {3}
 464:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 468:	63206465 			; <UNDEFINED> instruction: 0x63206465
 46c:	00726168 	rsbseq	r6, r2, r8, ror #2
 470:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
 474:	5f685f00 	svcpl	0x00685f00
 478:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
 47c:	6873006f 	ldmdavs	r3!, {r0, r1, r2, r3, r5, r6}^
 480:	2074726f 	rsbscs	r7, r4, pc, ror #4
 484:	00746e69 	rsbseq	r6, r4, r9, ror #28
 488:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 48c:	6164795f 	cmnvs	r4, pc, asr r9
 490:	5f5f0079 	svcpl	0x005f0079
 494:	66756273 			; <UNDEFINED> instruction: 0x66756273
 498:	6f695f00 	svcvs	0x00695f00
 49c:	67007362 	strvs	r7, [r0, -r2, ror #6]
 4a0:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 4a4:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 4a8:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 4ac:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
 4b0:	006e6565 	rsbeq	r6, lr, r5, ror #10
 4b4:	49465f5f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
 4b8:	5f00454c 	svcpl	0x0000454c
 4bc:	7473626d 	ldrbtvc	r6, [r3], #-621	; 0xfffffd93
 4c0:	5f657461 	svcpl	0x00657461
 4c4:	5f5f0074 	svcpl	0x005f0074
 4c8:	4c494673 	mcrrmi	6, 7, r4, r9, cr3
 4cc:	6d5f0045 	ldclvs	0, cr0, [pc, #-276]	; 3c0 <startup-0x1ffffc40>
 4d0:	61747362 	cmnvs	r4, r2, ror #6
 4d4:	5f006574 	svcpl	0x00006574
 4d8:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
 4dc:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
 4e0:	61620074 	smcvs	8196	; 0x2004
 4e4:	675f6c6c 	ldrbvs	r6, [pc, -ip, ror #24]
 4e8:	656d6f65 	strbvs	r6, [sp, #-3941]!	; 0xfffff09b
 4ec:	00797274 	rsbseq	r7, r9, r4, ror r2
 4f0:	6c626d5f 	stclvs	13, cr6, [r2], #-380	; 0xfffffe84
 4f4:	735f6e65 	cmpvc	pc, #1616	; 0x650
 4f8:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 4fc:	6e695f00 	cdpvs	15, 6, cr5, cr9, cr0, {0}
 500:	695f0063 	ldmdbvs	pc, {r0, r1, r5, r6}^	; <UNPREDICTABLE>
 504:	5f00646e 	svcpl	0x0000646e
 508:	61636f6c 	cmnvs	r3, ip, ror #30
 50c:	5f00656c 	svcpl	0x0000656c
 510:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
 514:	70756e61 	rsbsvc	r6, r5, r1, ror #28
 518:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
 51c:	63657073 	cmnvs	r5, #115, 0	; 0x73
 520:	65696669 	strbvs	r6, [r9, #-1641]!	; 0xfffff997
 524:	6f6c5f64 	svcvs	0x006c5f64
 528:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
 52c:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
 530:	6d5f006f 	ldclvs	0, cr0, [pc, #-444]	; 37c <startup-0x1ffffc84>
 534:	64777861 	ldrbtvs	r7, [r7], #-2145	; 0xfffff79f
 538:	725f0073 	subsvc	r0, pc, #115, 0	; 0x73
 53c:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
 540:	65735f00 	ldrbvs	r5, [r3, #-3840]!	; 0xfffff100
 544:	5f006465 	svcpl	0x00006465
 548:	756f635f 	strbvc	r6, [pc, #-863]!	; 1f1 <startup-0x1ffffe0f>
 54c:	5f00746e 	svcpl	0x0000746e
 550:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 554:	5f5f006b 	svcpl	0x005f006b
 558:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 55c:	735f0065 	cmpvc	pc, #101, 0	; 0x65
 560:	006b6565 	rsbeq	r6, fp, r5, ror #10
 564:	6f70665f 	svcvs	0x0070665f
 568:	00745f73 	rsbseq	r5, r4, r3, ror pc
 56c:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 570:	6e696d5f 	mcrvs	13, 3, r6, cr9, cr15, {2}
 574:	61747300 	cmnvs	r4, r0, lsl #6
 578:	70757472 	rsbsvc	r7, r5, r2, ror r4
 57c:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
 580:	70615f74 	rsbvc	r5, r1, r4, ror pc
 584:	6d5f0070 	ldclvs	0, cr0, [pc, #-448]	; 3cc <startup-0x1ffffc34>
 588:	00746c75 	rsbseq	r6, r4, r5, ror ip
 58c:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
 590:	5f6b6f74 	svcpl	0x006b6f74
 594:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
 598:	6e665f00 	cdpvs	15, 6, cr5, cr6, cr0, {0}
 59c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 5a0:	4f740073 	svcmi	0x00740073
 5a4:	5f006a62 	svcpl	0x00006a62
 5a8:	00646461 	rsbeq	r6, r4, r1, ror #8
 5ac:	4c555f5f 	mrrcmi	15, 5, r5, r5, cr15	; <UNPREDICTABLE>
 5b0:	00676e6f 	rsbeq	r6, r7, pc, ror #28
 5b4:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
 5b8:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
 5bc:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
 5c0:	61726400 	cmnvs	r2, r0, lsl #8
 5c4:	675f0077 			; <UNDEFINED> instruction: 0x675f0077
 5c8:	61626f6c 	cmnvs	r2, ip, ror #30
 5cc:	6d695f6c 	stclvs	15, cr5, [r9, #-432]!	; 0xfffffe50
 5d0:	65727570 	ldrbvs	r7, [r2, #-1392]!	; 0xfffffa90
 5d4:	7274705f 	rsbsvc	r7, r4, #95, 0	; 0x5f
 5d8:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
 5dc:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
 5e0:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
 5e4:	775f0064 	ldrbvc	r0, [pc, -r4, rrx]
 5e8:	5f007364 	svcpl	0x00007364
 5ec:	5f6d745f 	svcpl	0x006d745f
 5f0:	79616477 	stmdbvc	r1!, {r0, r1, r2, r4, r5, r6, sl, sp, lr}^
 5f4:	6c675f00 	stclvs	15, cr5, [r7], #-0
 5f8:	73006575 	movwvc	r6, #1397	; 0x575
 5fc:	78657a69 	stmdavc	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
 600:	77656e00 	strbvc	r6, [r5, -r0, lsl #28]!
 604:	736f705f 	cmnvc	pc, #95, 0	; 0x5f
 608:	656e0078 	strbvs	r0, [lr, #-120]!	; 0xffffff88
 60c:	6f705f77 	svcvs	0x00705f77
 610:	47007973 	smlsdxmi	r0, r3, r9, r7
 614:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
 618:	39203939 	stmdbcc	r0!, {r0, r3, r4, r5, r8, fp, ip, sp}
 61c:	312e322e 			; <UNDEFINED> instruction: 0x312e322e
 620:	31303220 	teqcc	r0, r0, lsr #4
 624:	32303139 	eorscc	r3, r0, #1073741838	; 0x4000000e
 628:	72282035 	eorvc	r2, r8, #53, 0	; 0x35
 62c:	61656c65 	cmnvs	r5, r5, ror #24
 630:	20296573 	eorcs	r6, r9, r3, ror r5
 634:	4d52415b 	ldfmie	f4, [r2, #-364]	; 0xfffffe94
 638:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
 63c:	622d392d 	eorvs	r3, sp, #737280	; 0xb4000
 640:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
 644:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
 648:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
 64c:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
 650:	39353737 	ldmdbcc	r5!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
 654:	2d205d39 	stccs	13, cr5, [r0, #-228]!	; 0xffffff1c
 658:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
 65c:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
 660:	6f6c666d 	svcvs	0x006c666d
 664:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
 668:	733d6962 	teqvc	sp, #1605632	; 0x188000
 66c:	2074666f 	rsbscs	r6, r4, pc, ror #12
 670:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
 674:	613d6863 	teqvs	sp, r3, ror #16
 678:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
 67c:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
 680:	4f2d2067 	svcmi	0x002d2067
 684:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
 688:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
 68c:	5f003939 	svcpl	0x00003939
 690:	6134366c 	teqvs	r4, ip, ror #12
 694:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
 698:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
 69c:	75665f67 	strbvc	r5, [r6, #-3943]!	; 0xfffff099
 6a0:	5f00636e 	svcpl	0x0000636e
 6a4:	6675626e 	ldrbtvs	r6, [r5], -lr, ror #4
 6a8:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
 6ac:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
 6b0:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 6b8 <startup-0x1ffff948>
 6b4:	73695f6d 	cmnvc	r9, #436	; 0x1b4
 6b8:	00747364 	rsbseq	r7, r4, r4, ror #6
 6bc:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 6c0:	69746c61 	ldmdbvs	r4!, {r0, r5, r6, sl, fp, sp, lr}^
 6c4:	625f656d 	subsvs	r6, pc, #457179136	; 0x1b400000
 6c8:	5f006675 	svcpl	0x00006675
 6cc:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 6d0:	69730065 	ldmdbvs	r3!, {r0, r2, r5, r6}^
 6d4:	0079657a 	rsbseq	r6, r9, sl, ror r5
 6d8:	3834725f 	ldmdacc	r4!, {r0, r1, r2, r3, r4, r6, r9, ip, sp, lr}
 6dc:	61747300 	cmnvs	r4, r0, lsl #6
 6e0:	5f007472 	svcpl	0x00007472
 6e4:	6f74626d 	svcvs	0x0074626d
 6e8:	735f6377 	cmpvc	pc, #-603979775	; 0xdc000001
 6ec:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 6f0:	35705f00 	ldrbcc	r5, [r0, #-3840]!	; 0xfffff100
 6f4:	696c0073 	stmdbvs	ip!, {r0, r1, r4, r5, r6}^
 6f8:	0033656e 	eorseq	r6, r3, lr, ror #10
 6fc:	6e69616d 	powvsez	f6, f1, #5.0
 700:	494c5000 	stmdbmi	ip, {ip, lr}^
 704:	6400454e 	strvs	r4, [r0], #-1358	; 0xfffffab2
 708:	61746c65 	cmnvs	r4, r5, ror #24
 70c:	65640078 	strbvs	r0, [r4, #-120]!	; 0xffffff88
 710:	5f79616c 	svcpl	0x0079616c
 714:	6c6c696d 			; <UNDEFINED> instruction: 0x6c6c696d
 718:	5f5f0069 	svcpl	0x005f0069
 71c:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; 554 <startup-0x1ffffaac>
 720:	00796164 	rsbseq	r6, r9, r4, ror #2

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000006 	andeq	r0, r0, r6
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	20000016 	andcs	r0, r0, r6, lsl r0
  3c:	00000006 	andeq	r0, r0, r6
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	2000001c 	andcs	r0, r0, ip, lsl r0
  4c:	00000006 	andeq	r0, r0, r6
  50:	0000000c 	andeq	r0, r0, ip
  54:	00000000 	andeq	r0, r0, r0
  58:	20000022 	andcs	r0, r0, r2, lsr #32
  5c:	00000006 	andeq	r0, r0, r6
  60:	00000018 	andeq	r0, r0, r8, lsl r0
  64:	00000000 	andeq	r0, r0, r0
  68:	20000028 	andcs	r0, r0, r8, lsr #32
  6c:	0000003c 	andeq	r0, r0, ip, lsr r0
  70:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  74:	41018e02 	tstmi	r1, r2, lsl #28
  78:	0000070d 	andeq	r0, r0, sp, lsl #14
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	20000064 	andcs	r0, r0, r4, rrx
  88:	00000098 	muleq	r0, r8, r0
  8c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  90:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  94:	180e4101 	stmdane	lr, {r0, r8, lr}
  98:	00070d41 	andeq	r0, r7, r1, asr #26
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	200000fc 	strdcs	r0, [r0], -ip
  a8:	00000062 	andeq	r0, r0, r2, rrx
  ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  b0:	41018e02 	tstmi	r1, r2, lsl #28
  b4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  b8:	00000007 	andeq	r0, r0, r7
  bc:	0000001c 	andeq	r0, r0, ip, lsl r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	2000015e 	andcs	r0, r0, lr, asr r1
  c8:	00000062 	andeq	r0, r0, r2, rrx
  cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  d0:	41018e02 	tstmi	r1, r2, lsl #28
  d4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  d8:	00000007 	andeq	r0, r0, r7
  dc:	0000001c 	andeq	r0, r0, ip, lsl r0
  e0:	00000000 	andeq	r0, r0, r0
  e4:	200001c0 	andcs	r0, r0, r0, asr #3
  e8:	0000009a 	muleq	r0, sl, r0
  ec:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  f0:	41018e02 	tstmi	r1, r2, lsl #28
  f4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  f8:	00000007 	andeq	r0, r0, r7
  fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 100:	00000000 	andeq	r0, r0, r0
 104:	2000025a 	andcs	r0, r0, sl, asr r2
 108:	00000020 	andeq	r0, r0, r0, lsr #32
 10c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 110:	41018e02 	tstmi	r1, r2, lsl #28
 114:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 118:	00000007 	andeq	r0, r0, r7
 11c:	0000001c 	andeq	r0, r0, ip, lsl r0
 120:	00000000 	andeq	r0, r0, r0
 124:	2000027a 	andcs	r0, r0, sl, ror r2
 128:	00000066 	andeq	r0, r0, r6, rrx
 12c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 130:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 134:	280e4101 	stmdacs	lr, {r0, r8, lr}
 138:	00070d41 	andeq	r0, r7, r1, asr #26
 13c:	0000001c 	andeq	r0, r0, ip, lsl r0
 140:	00000000 	andeq	r0, r0, r0
 144:	200002e0 	andcs	r0, r0, r0, ror #5
 148:	00000064 	andeq	r0, r0, r4, rrx
 14c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 150:	41018e02 	tstmi	r1, r2, lsl #28
 154:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 158:	00000007 	andeq	r0, r0, r7
 15c:	0000001c 	andeq	r0, r0, ip, lsl r0
 160:	00000000 	andeq	r0, r0, r0
 164:	20000344 	andcs	r0, r0, r4, asr #6
 168:	00000054 	andeq	r0, r0, r4, asr r0
 16c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 170:	41018e02 	tstmi	r1, r2, lsl #28
 174:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 178:	00000007 	andeq	r0, r0, r7
 17c:	0000001c 	andeq	r0, r0, ip, lsl r0
 180:	00000000 	andeq	r0, r0, r0
 184:	20000398 	mulcs	r0, r8, r3
 188:	0000005a 	andeq	r0, r0, sl, asr r0
 18c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 190:	41018e02 	tstmi	r1, r2, lsl #28
 194:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
 198:	00000007 	andeq	r0, r0, r7
 19c:	0000001c 	andeq	r0, r0, ip, lsl r0
 1a0:	00000000 	andeq	r0, r0, r0
 1a4:	200003f2 	strdcs	r0, [r0], -r2
 1a8:	000000f8 	strdeq	r0, [r0], -r8
 1ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1b0:	41018e02 	tstmi	r1, r2, lsl #28
 1b4:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
 1b8:	00000007 	andeq	r0, r0, r7
 1bc:	0000001c 	andeq	r0, r0, ip, lsl r0
 1c0:	00000000 	andeq	r0, r0, r0
 1c4:	200004ea 	andcs	r0, r0, sl, ror #9
 1c8:	0000014e 	andeq	r0, r0, lr, asr #2
 1cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1d0:	41018e02 	tstmi	r1, r2, lsl #28
 1d4:	0d41300e 	stcleq	0, cr3, [r1, #-56]	; 0xffffffc8
 1d8:	00000007 	andeq	r0, r0, r7
 1dc:	00000018 	andeq	r0, r0, r8, lsl r0
 1e0:	00000000 	andeq	r0, r0, r0
 1e4:	20000638 	andcs	r0, r0, r8, lsr r6
 1e8:	00000044 	andeq	r0, r0, r4, asr #32
 1ec:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1f0:	41018e02 	tstmi	r1, r2, lsl #28
 1f4:	0000070d 	andeq	r0, r0, sp, lsl #14
 1f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1fc:	00000000 	andeq	r0, r0, r0
 200:	2000067c 	andcs	r0, r0, ip, ror r6
 204:	00000056 	andeq	r0, r0, r6, asr r0
 208:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 20c:	41018e02 	tstmi	r1, r2, lsl #28
 210:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 214:	00000007 	andeq	r0, r0, r7
 218:	0000001c 	andeq	r0, r0, ip, lsl r0
 21c:	00000000 	andeq	r0, r0, r0
 220:	200006d2 	ldrdcs	r0, [r0], -r2
 224:	00000030 	andeq	r0, r0, r0, lsr r0
 228:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 22c:	41018e02 	tstmi	r1, r2, lsl #28
 230:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 234:	00000007 	andeq	r0, r0, r7
 238:	0000000c 	andeq	r0, r0, ip
 23c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 240:	7c010001 	stcvc	0, cr0, [r1], {1}
 244:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 248:	0000000c 	andeq	r0, r0, ip
 24c:	00000238 	andeq	r0, r0, r8, lsr r2
 250:	20000705 	andcs	r0, r0, r5, lsl #14
 254:	0000010a 	andeq	r0, r0, sl, lsl #2
