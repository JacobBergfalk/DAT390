
Debug/keypad:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:

 
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f90e 	bl	20000224 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:
//      intiera port gpio_port
//      skriv funktion out7seg()

void app_init(void){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
    
    // starta klockor port D
    *((unsigned long *) 0x40023830) = 0x18;
20000014:	4b07      	ldr	r3, [pc, #28]	; (20000034 <app_init+0x24>)
20000016:	2218      	movs	r2, #24
20000018:	601a      	str	r2, [r3, #0]
    
    *((unsigned long *) GPIO_D_MODER) = 0x55005555;
2000001a:	4b07      	ldr	r3, [pc, #28]	; (20000038 <app_init+0x28>)
2000001c:	4a07      	ldr	r2, [pc, #28]	; (2000003c <app_init+0x2c>)
2000001e:	601a      	str	r2, [r3, #0]
    *((unsigned long *) GPIO_D_PUPDR) = 0x00AA0000;
20000020:	4b07      	ldr	r3, [pc, #28]	; (20000040 <app_init+0x30>)
20000022:	22aa      	movs	r2, #170	; 0xaa
20000024:	0412      	lsls	r2, r2, #16
20000026:	601a      	str	r2, [r3, #0]
    
    *GPIO_D_OSPEEDR = 0x55555555;
20000028:	4b06      	ldr	r3, [pc, #24]	; (20000044 <app_init+0x34>)
2000002a:	4a07      	ldr	r2, [pc, #28]	; (20000048 <app_init+0x38>)
2000002c:	601a      	str	r2, [r3, #0]

}
2000002e:	46c0      	nop			; (mov r8, r8)
20000030:	46bd      	mov	sp, r7
20000032:	bd80      	pop	{r7, pc}
20000034:	40023830 	andmi	r3, r2, r0, lsr r8
20000038:	40020c00 	andmi	r0, r2, r0, lsl #24
2000003c:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000040:	40020c0c 	andmi	r0, r2, ip, lsl #24
20000044:	40020c08 	andmi	r0, r2, r8, lsl #24
20000048:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

2000004c <keyb>:

unsigned char keyb(void){
2000004c:	b590      	push	{r4, r7, lr}
2000004e:	b087      	sub	sp, #28
20000050:	af00      	add	r7, sp, #0
    int col, row;
    unsigned char key[] = {1, 2, 3, 0xA, 4, 5, 6, 0xB, 7, 8, 9, 0xC, 0xE, 0, 0xF, 0xD };
20000052:	003b      	movs	r3, r7
20000054:	4a16      	ldr	r2, [pc, #88]	; (200000b0 <keyb+0x64>)
20000056:	ca13      	ldmia	r2!, {r0, r1, r4}
20000058:	c313      	stmia	r3!, {r0, r1, r4}
2000005a:	6812      	ldr	r2, [r2, #0]
2000005c:	601a      	str	r2, [r3, #0]
    for(row = 1; row <= 4; row++) {
2000005e:	2301      	movs	r3, #1
20000060:	617b      	str	r3, [r7, #20]
20000062:	e019      	b.n	20000098 <keyb+0x4c>
        Activate_row(row);       
20000064:	697b      	ldr	r3, [r7, #20]
20000066:	0018      	movs	r0, r3
20000068:	f000 f824 	bl	200000b4 <Activate_row>
        col = Read_colomn();
2000006c:	f000 f854 	bl	20000118 <Read_colomn>
20000070:	0003      	movs	r3, r0
20000072:	613b      	str	r3, [r7, #16]
        if( (col != 0 )) {
20000074:	693b      	ldr	r3, [r7, #16]
20000076:	2b00      	cmp	r3, #0
20000078:	d00b      	beq.n	20000092 <keyb+0x46>
            Activate_row(0);
2000007a:	2000      	movs	r0, #0
2000007c:	f000 f81a 	bl	200000b4 <Activate_row>
            return key [4*(row-1)+(col-1) ];
20000080:	697b      	ldr	r3, [r7, #20]
20000082:	3b01      	subs	r3, #1
20000084:	009a      	lsls	r2, r3, #2
20000086:	693b      	ldr	r3, [r7, #16]
20000088:	3b01      	subs	r3, #1
2000008a:	18d3      	adds	r3, r2, r3
2000008c:	003a      	movs	r2, r7
2000008e:	5cd3      	ldrb	r3, [r2, r3]
20000090:	e009      	b.n	200000a6 <keyb+0x5a>
    for(row = 1; row <= 4; row++) {
20000092:	697b      	ldr	r3, [r7, #20]
20000094:	3301      	adds	r3, #1
20000096:	617b      	str	r3, [r7, #20]
20000098:	697b      	ldr	r3, [r7, #20]
2000009a:	2b04      	cmp	r3, #4
2000009c:	dde2      	ble.n	20000064 <keyb+0x18>
        }
    }
    Activate_row(0);
2000009e:	2000      	movs	r0, #0
200000a0:	f000 f808 	bl	200000b4 <Activate_row>
    return 0xFF;
200000a4:	23ff      	movs	r3, #255	; 0xff
}
200000a6:	0018      	movs	r0, r3
200000a8:	46bd      	mov	sp, r7
200000aa:	b007      	add	sp, #28
200000ac:	bd90      	pop	{r4, r7, pc}
200000ae:	46c0      	nop			; (mov r8, r8)
200000b0:	2000023c 	andcs	r0, r0, ip, lsr r2

200000b4 <Activate_row>:

void Activate_row(unsigned int r){
200000b4:	b580      	push	{r7, lr}
200000b6:	b082      	sub	sp, #8
200000b8:	af00      	add	r7, sp, #0
200000ba:	6078      	str	r0, [r7, #4]
    
    switch(r) {
200000bc:	687b      	ldr	r3, [r7, #4]
200000be:	2b04      	cmp	r3, #4
200000c0:	d01b      	beq.n	200000fa <Activate_row+0x46>
200000c2:	687b      	ldr	r3, [r7, #4]
200000c4:	2b04      	cmp	r3, #4
200000c6:	d81c      	bhi.n	20000102 <Activate_row+0x4e>
200000c8:	687b      	ldr	r3, [r7, #4]
200000ca:	2b03      	cmp	r3, #3
200000cc:	d011      	beq.n	200000f2 <Activate_row+0x3e>
200000ce:	687b      	ldr	r3, [r7, #4]
200000d0:	2b03      	cmp	r3, #3
200000d2:	d816      	bhi.n	20000102 <Activate_row+0x4e>
200000d4:	687b      	ldr	r3, [r7, #4]
200000d6:	2b01      	cmp	r3, #1
200000d8:	d003      	beq.n	200000e2 <Activate_row+0x2e>
200000da:	687b      	ldr	r3, [r7, #4]
200000dc:	2b02      	cmp	r3, #2
200000de:	d004      	beq.n	200000ea <Activate_row+0x36>
200000e0:	e00f      	b.n	20000102 <Activate_row+0x4e>
        
        case 1: *GPIO_ODR_HIGH = 0x10; break;
200000e2:	4b0c      	ldr	r3, [pc, #48]	; (20000114 <Activate_row+0x60>)
200000e4:	2210      	movs	r2, #16
200000e6:	701a      	strb	r2, [r3, #0]
200000e8:	e00f      	b.n	2000010a <Activate_row+0x56>
        case 2: *GPIO_ODR_HIGH = 0x20; break;
200000ea:	4b0a      	ldr	r3, [pc, #40]	; (20000114 <Activate_row+0x60>)
200000ec:	2220      	movs	r2, #32
200000ee:	701a      	strb	r2, [r3, #0]
200000f0:	e00b      	b.n	2000010a <Activate_row+0x56>
        case 3: *GPIO_ODR_HIGH = 0x40; break;
200000f2:	4b08      	ldr	r3, [pc, #32]	; (20000114 <Activate_row+0x60>)
200000f4:	2240      	movs	r2, #64	; 0x40
200000f6:	701a      	strb	r2, [r3, #0]
200000f8:	e007      	b.n	2000010a <Activate_row+0x56>
        case 4: *GPIO_ODR_HIGH = 0x80; break;
200000fa:	4b06      	ldr	r3, [pc, #24]	; (20000114 <Activate_row+0x60>)
200000fc:	2280      	movs	r2, #128	; 0x80
200000fe:	701a      	strb	r2, [r3, #0]
20000100:	e003      	b.n	2000010a <Activate_row+0x56>
        default: *GPIO_ODR_HIGH = 0x00; break;
20000102:	4b04      	ldr	r3, [pc, #16]	; (20000114 <Activate_row+0x60>)
20000104:	2200      	movs	r2, #0
20000106:	701a      	strb	r2, [r3, #0]
20000108:	46c0      	nop			; (mov r8, r8)
        
    }
}
2000010a:	46c0      	nop			; (mov r8, r8)
2000010c:	46bd      	mov	sp, r7
2000010e:	b002      	add	sp, #8
20000110:	bd80      	pop	{r7, pc}
20000112:	46c0      	nop			; (mov r8, r8)
20000114:	40020c15 	andmi	r0, r2, r5, lsl ip

20000118 <Read_colomn>:

int Read_colomn(void){
20000118:	b580      	push	{r7, lr}
2000011a:	b082      	sub	sp, #8
2000011c:	af00      	add	r7, sp, #0
    
    unsigned char c;
    c = *GPIO_IDR_HIGH;
2000011e:	4a12      	ldr	r2, [pc, #72]	; (20000168 <Read_colomn+0x50>)
20000120:	1dfb      	adds	r3, r7, #7
20000122:	7812      	ldrb	r2, [r2, #0]
20000124:	701a      	strb	r2, [r3, #0]
    
    if(c & 0x8) return 4;
20000126:	1dfb      	adds	r3, r7, #7
20000128:	781b      	ldrb	r3, [r3, #0]
2000012a:	2208      	movs	r2, #8
2000012c:	4013      	ands	r3, r2
2000012e:	d001      	beq.n	20000134 <Read_colomn+0x1c>
20000130:	2304      	movs	r3, #4
20000132:	e015      	b.n	20000160 <Read_colomn+0x48>
    if(c & 0x4) return 3;
20000134:	1dfb      	adds	r3, r7, #7
20000136:	781b      	ldrb	r3, [r3, #0]
20000138:	2204      	movs	r2, #4
2000013a:	4013      	ands	r3, r2
2000013c:	d001      	beq.n	20000142 <Read_colomn+0x2a>
2000013e:	2303      	movs	r3, #3
20000140:	e00e      	b.n	20000160 <Read_colomn+0x48>
    if(c & 0x2) return 2;
20000142:	1dfb      	adds	r3, r7, #7
20000144:	781b      	ldrb	r3, [r3, #0]
20000146:	2202      	movs	r2, #2
20000148:	4013      	ands	r3, r2
2000014a:	d001      	beq.n	20000150 <Read_colomn+0x38>
2000014c:	2302      	movs	r3, #2
2000014e:	e007      	b.n	20000160 <Read_colomn+0x48>
    if(c & 0x1) return 1;
20000150:	1dfb      	adds	r3, r7, #7
20000152:	781b      	ldrb	r3, [r3, #0]
20000154:	2201      	movs	r2, #1
20000156:	4013      	ands	r3, r2
20000158:	d001      	beq.n	2000015e <Read_colomn+0x46>
2000015a:	2301      	movs	r3, #1
2000015c:	e000      	b.n	20000160 <Read_colomn+0x48>
    return 0;
2000015e:	2300      	movs	r3, #0
}
20000160:	0018      	movs	r0, r3
20000162:	46bd      	mov	sp, r7
20000164:	b002      	add	sp, #8
20000166:	bd80      	pop	{r7, pc}
20000168:	40020c11 	andmi	r0, r2, r1, lsl ip

2000016c <out7seg>:


void out7seg(unsigned char c){
2000016c:	b580      	push	{r7, lr}
2000016e:	b082      	sub	sp, #8
20000170:	af00      	add	r7, sp, #0
20000172:	0002      	movs	r2, r0
20000174:	1dfb      	adds	r3, r7, #7
20000176:	701a      	strb	r2, [r3, #0]
    
    switch(c) {
20000178:	1dfb      	adds	r3, r7, #7
2000017a:	781b      	ldrb	r3, [r3, #0]
2000017c:	2b0f      	cmp	r3, #15
2000017e:	d844      	bhi.n	2000020a <out7seg+0x9e>
20000180:	009a      	lsls	r2, r3, #2
20000182:	4b26      	ldr	r3, [pc, #152]	; (2000021c <out7seg+0xb0>)
20000184:	18d3      	adds	r3, r2, r3
20000186:	681b      	ldr	r3, [r3, #0]
20000188:	469f      	mov	pc, r3
        case 0: *GPIO_ODR_LOW = 0x3F; break; // 00111111
2000018a:	4b25      	ldr	r3, [pc, #148]	; (20000220 <out7seg+0xb4>)
2000018c:	223f      	movs	r2, #63	; 0x3f
2000018e:	701a      	strb	r2, [r3, #0]
20000190:	e03f      	b.n	20000212 <out7seg+0xa6>
        case 1: *GPIO_ODR_LOW = 0x06; break; // 00000110
20000192:	4b23      	ldr	r3, [pc, #140]	; (20000220 <out7seg+0xb4>)
20000194:	2206      	movs	r2, #6
20000196:	701a      	strb	r2, [r3, #0]
20000198:	e03b      	b.n	20000212 <out7seg+0xa6>
        case 2: *GPIO_ODR_LOW = 0x5B; break; // 01011011
2000019a:	4b21      	ldr	r3, [pc, #132]	; (20000220 <out7seg+0xb4>)
2000019c:	225b      	movs	r2, #91	; 0x5b
2000019e:	701a      	strb	r2, [r3, #0]
200001a0:	e037      	b.n	20000212 <out7seg+0xa6>
        case 3: *GPIO_ODR_LOW = 0x4F; break; // 01001111
200001a2:	4b1f      	ldr	r3, [pc, #124]	; (20000220 <out7seg+0xb4>)
200001a4:	224f      	movs	r2, #79	; 0x4f
200001a6:	701a      	strb	r2, [r3, #0]
200001a8:	e033      	b.n	20000212 <out7seg+0xa6>
        case 4: *GPIO_ODR_LOW = 0x66; break; // 01100110
200001aa:	4b1d      	ldr	r3, [pc, #116]	; (20000220 <out7seg+0xb4>)
200001ac:	2266      	movs	r2, #102	; 0x66
200001ae:	701a      	strb	r2, [r3, #0]
200001b0:	e02f      	b.n	20000212 <out7seg+0xa6>
        case 5: *GPIO_ODR_LOW = 0x6D; break; // 01101101
200001b2:	4b1b      	ldr	r3, [pc, #108]	; (20000220 <out7seg+0xb4>)
200001b4:	226d      	movs	r2, #109	; 0x6d
200001b6:	701a      	strb	r2, [r3, #0]
200001b8:	e02b      	b.n	20000212 <out7seg+0xa6>
        case 6: *GPIO_ODR_LOW = 0x7D; break; // 01111101
200001ba:	4b19      	ldr	r3, [pc, #100]	; (20000220 <out7seg+0xb4>)
200001bc:	227d      	movs	r2, #125	; 0x7d
200001be:	701a      	strb	r2, [r3, #0]
200001c0:	e027      	b.n	20000212 <out7seg+0xa6>
        case 7: *GPIO_ODR_LOW = 0x07; break; // 00000111
200001c2:	4b17      	ldr	r3, [pc, #92]	; (20000220 <out7seg+0xb4>)
200001c4:	2207      	movs	r2, #7
200001c6:	701a      	strb	r2, [r3, #0]
200001c8:	e023      	b.n	20000212 <out7seg+0xa6>
        case 8: *GPIO_ODR_LOW = 0x7F; break; // 01111111
200001ca:	4b15      	ldr	r3, [pc, #84]	; (20000220 <out7seg+0xb4>)
200001cc:	227f      	movs	r2, #127	; 0x7f
200001ce:	701a      	strb	r2, [r3, #0]
200001d0:	e01f      	b.n	20000212 <out7seg+0xa6>
        case 9: *GPIO_ODR_LOW = 0x6F; break; // 01101111
200001d2:	4b13      	ldr	r3, [pc, #76]	; (20000220 <out7seg+0xb4>)
200001d4:	226f      	movs	r2, #111	; 0x6f
200001d6:	701a      	strb	r2, [r3, #0]
200001d8:	e01b      	b.n	20000212 <out7seg+0xa6>
        case 0xA: *GPIO_ODR_LOW = 0x77; break; // 01110111
200001da:	4b11      	ldr	r3, [pc, #68]	; (20000220 <out7seg+0xb4>)
200001dc:	2277      	movs	r2, #119	; 0x77
200001de:	701a      	strb	r2, [r3, #0]
200001e0:	e017      	b.n	20000212 <out7seg+0xa6>
        case 0xB: *GPIO_ODR_LOW = 0x7C; break; // 01111100
200001e2:	4b0f      	ldr	r3, [pc, #60]	; (20000220 <out7seg+0xb4>)
200001e4:	227c      	movs	r2, #124	; 0x7c
200001e6:	701a      	strb	r2, [r3, #0]
200001e8:	e013      	b.n	20000212 <out7seg+0xa6>
        case 0xC: *GPIO_ODR_LOW = 0x39; break; // 00111001
200001ea:	4b0d      	ldr	r3, [pc, #52]	; (20000220 <out7seg+0xb4>)
200001ec:	2239      	movs	r2, #57	; 0x39
200001ee:	701a      	strb	r2, [r3, #0]
200001f0:	e00f      	b.n	20000212 <out7seg+0xa6>
        case 0xD: *GPIO_ODR_LOW = 0x5E; break; // 01011110
200001f2:	4b0b      	ldr	r3, [pc, #44]	; (20000220 <out7seg+0xb4>)
200001f4:	225e      	movs	r2, #94	; 0x5e
200001f6:	701a      	strb	r2, [r3, #0]
200001f8:	e00b      	b.n	20000212 <out7seg+0xa6>
        case 0xE: *GPIO_ODR_LOW = 0x79; break; // 01111001
200001fa:	4b09      	ldr	r3, [pc, #36]	; (20000220 <out7seg+0xb4>)
200001fc:	2279      	movs	r2, #121	; 0x79
200001fe:	701a      	strb	r2, [r3, #0]
20000200:	e007      	b.n	20000212 <out7seg+0xa6>
        case 0xF: *GPIO_ODR_LOW = 0x71; break; // 01110001
20000202:	4b07      	ldr	r3, [pc, #28]	; (20000220 <out7seg+0xb4>)
20000204:	2271      	movs	r2, #113	; 0x71
20000206:	701a      	strb	r2, [r3, #0]
20000208:	e003      	b.n	20000212 <out7seg+0xa6>
        default: *GPIO_ODR_LOW = 0x00; break; // turn off display
2000020a:	4b05      	ldr	r3, [pc, #20]	; (20000220 <out7seg+0xb4>)
2000020c:	2200      	movs	r2, #0
2000020e:	701a      	strb	r2, [r3, #0]
20000210:	46c0      	nop			; (mov r8, r8)
    }
}
20000212:	46c0      	nop			; (mov r8, r8)
20000214:	46bd      	mov	sp, r7
20000216:	b002      	add	sp, #8
20000218:	bd80      	pop	{r7, pc}
2000021a:	46c0      	nop			; (mov r8, r8)
2000021c:	2000024c 	andcs	r0, r0, ip, asr #4
20000220:	40020c14 	andmi	r0, r2, r4, lsl ip

20000224 <main>:


void main(void){
20000224:	b580      	push	{r7, lr}
20000226:	af00      	add	r7, sp, #0
    unsigned char c;
    app_init();
20000228:	f7ff fef2 	bl	20000010 <app_init>
    
    while(1) {
        out7seg( keyb());
2000022c:	f7ff ff0e 	bl	2000004c <keyb>
20000230:	0003      	movs	r3, r0
20000232:	0018      	movs	r0, r3
20000234:	f7ff ff9a 	bl	2000016c <out7seg>
20000238:	e7f8      	b.n	2000022c <main+0x8>
2000023a:	46c0      	nop			; (mov r8, r8)
2000023c:	0a030201 	beq	200c0a48 <main+0xc0824>
20000240:	0b060504 	bleq	20181658 <main+0x181434>
20000244:	0c090807 	stceq	8, cr0, [r9], {7}
20000248:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000218 <out7seg+0xac>
2000024c:	2000018a 	andcs	r0, r0, sl, lsl #3
20000250:	20000192 	mulcs	r0, r2, r1
20000254:	2000019a 	mulcs	r0, sl, r1
20000258:	200001a2 	andcs	r0, r0, r2, lsr #3
2000025c:	200001aa 	andcs	r0, r0, sl, lsr #3
20000260:	200001b2 			; <UNDEFINED> instruction: 0x200001b2
20000264:	200001ba 			; <UNDEFINED> instruction: 0x200001ba
20000268:	200001c2 	andcs	r0, r0, r2, asr #3
2000026c:	200001ca 	andcs	r0, r0, sl, asr #3
20000270:	200001d2 	ldrdcs	r0, [r0], -r2
20000274:	200001da 	ldrdcs	r0, [r0], -sl
20000278:	200001e2 	andcs	r0, r0, r2, ror #3
2000027c:	200001ea 	andcs	r0, r0, sl, ror #3
20000280:	200001f2 	strdcs	r0, [r0], -r2
20000284:	200001fa 	strdcs	r0, [r0], -sl
20000288:	20000202 	andcs	r0, r0, r2, lsl #4

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000180 	andeq	r0, r0, r0, lsl #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	0000960c 	andeq	r9, r0, ip, lsl #12
  14:	00011000 	andeq	r1, r1, r0
	...
  24:	010b0200 	mrseq	r0, R11_fiq
  28:	71010000 	mrsvc	r0, (UNDEF: 1)
  2c:	00022406 	andeq	r2, r2, r6, lsl #8
  30:	00001620 	andeq	r1, r0, r0, lsr #12
  34:	469c0100 	ldrmi	r0, [ip], r0, lsl #2
  38:	03000000 	movweq	r0, #0
  3c:	72010063 	andvc	r0, r1, #99, 0	; 0x63
  40:	00004613 	andeq	r4, r0, r3, lsl r6
  44:	01040000 	mrseq	r0, (UNDEF: 4)
  48:	0000fd08 	andeq	pc, r0, r8, lsl #26
  4c:	00e90500 	rsceq	r0, r9, r0, lsl #10
  50:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
  54:	00016c06 	andeq	r6, r1, r6, lsl #24
  58:	0000b820 	andeq	fp, r0, r0, lsr #16
  5c:	719c0100 	orrsvc	r0, ip, r0, lsl #2
  60:	06000000 	streq	r0, [r0], -r0
  64:	59010063 	stmdbpl	r1, {r0, r1, r5, r6}
  68:	0000461c 	andeq	r4, r0, ip, lsl r6
  6c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
  70:	00f10700 	rscseq	r0, r1, r0, lsl #14
  74:	4c010000 	stcmi	0, cr0, [r1], {-0}
  78:	00009905 	andeq	r9, r0, r5, lsl #18
  7c:	00011800 	andeq	r1, r1, r0, lsl #16
  80:	00005420 	andeq	r5, r0, r0, lsr #8
  84:	999c0100 	ldmibls	ip, {r8}
  88:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
  8c:	4e010063 	cdpmi	0, 0, cr0, cr1, cr3, {3}
  90:	00004613 	andeq	r4, r0, r3, lsl r6
  94:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
  98:	05040900 	streq	r0, [r4, #-2304]	; 0xfffff700
  9c:	00746e69 	rsbseq	r6, r4, r9, ror #28
  a0:	00008905 	andeq	r8, r0, r5, lsl #18
  a4:	063f0100 	ldrteq	r0, [pc], -r0, lsl #2
  a8:	200000b4 	strhcs	r0, [r0], -r4
  ac:	00000064 	andeq	r0, r0, r4, rrx
  b0:	00c49c01 	sbceq	r9, r4, r1, lsl #24
  b4:	72060000 	andvc	r0, r6, #0, 0
  b8:	203f0100 	eorscs	r0, pc, r0, lsl #2
  bc:	000000c4 	andeq	r0, r0, r4, asr #1
  c0:	00749102 	rsbseq	r9, r4, r2, lsl #2
  c4:	7c070404 	cfstrsvc	mvf0, [r7], {4}
  c8:	0a000000 	beq	d0 <startup-0x1fffff30>
  cc:	000000e4 	andeq	r0, r0, r4, ror #1
  d0:	460f3001 	strmi	r3, [pc], -r1
  d4:	4c000000 	stcmi	0, cr0, [r0], {-0}
  d8:	68200000 	stmdavs	r0!, {}	; <UNPREDICTABLE>
  dc:	01000000 	mrseq	r0, (UNDEF: 0)
  e0:	00014f9c 	muleq	r1, ip, pc	; <UNPREDICTABLE>
  e4:	6f630800 	svcvs	0x00630800
  e8:	3101006c 	tstcc	r1, ip, rrx
  ec:	00009909 	andeq	r9, r0, r9, lsl #18
  f0:	68910200 	ldmvs	r1, {r9}
  f4:	776f7208 	strbvc	r7, [pc, -r8, lsl #4]!
  f8:	0e310100 	rsfeqs	f0, f1, f0
  fc:	00000099 	muleq	r0, r9, r0
 100:	086c9102 	stmdaeq	ip!, {r1, r8, ip, pc}^
 104:	0079656b 	rsbseq	r6, r9, fp, ror #10
 108:	4f133201 	svcmi	0x00133201
 10c:	02000001 	andeq	r0, r0, #1, 0
 110:	890b5891 	stmdbhi	fp, {r0, r4, r7, fp, ip, lr}
 114:	01000000 	mrseq	r0, (UNDEF: 0)
 118:	00990934 	addseq	r0, r9, r4, lsr r9
 11c:	01240000 			; <UNDEFINED> instruction: 0x01240000
 120:	000c0000 	andeq	r0, ip, r0
 124:	0000640d 	andeq	r6, r0, sp, lsl #8
 128:	00002e20 	andeq	r2, r0, r0, lsr #28
 12c:	00890b00 	addeq	r0, r9, r0, lsl #22
 130:	34010000 	strcc	r0, [r1], #-0
 134:	00009909 	andeq	r9, r0, r9, lsl #18
 138:	00013f00 	andeq	r3, r1, r0, lsl #30
 13c:	0e000c00 	cdpeq	12, 0, cr0, cr0, cr0, {0}
 140:	000000f1 	strdeq	r0, [r0], -r1
 144:	990f3501 	stmdbls	pc, {r0, r8, sl, ip, sp}	; <UNPREDICTABLE>
 148:	0c000000 	stceq	0, cr0, [r0], {-0}
 14c:	0f000000 	svceq	0x00000000
 150:	00000046 	andeq	r0, r0, r6, asr #32
 154:	0000015f 	andeq	r0, r0, pc, asr r1
 158:	0000c410 	andeq	ip, r0, r0, lsl r4
 15c:	11000f00 	tstne	r0, r0, lsl #30
 160:	0000015c 	andeq	r0, r0, ip, asr r1
 164:	10062401 	andne	r2, r6, r1, lsl #8
 168:	3c200000 	stccc	0, cr0, [r0], #-0
 16c:	01000000 	mrseq	r0, (UNDEF: 0)
 170:	0154119c 			; <UNDEFINED> instruction: 0x0154119c
 174:	1a010000 	bne	4017c <startup-0x1ffbfe84>
 178:	00000006 	andeq	r0, r0, r6
 17c:	00000c20 	andeq	r0, r0, r0, lsr #24
 180:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23, 0
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	01111927 	tsteq	r1, r7, lsr #18
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  28:	01194296 			; <UNDEFINED> instruction: 0x01194296
  2c:	03000013 	movweq	r0, #19
  30:	08030034 	stmdaeq	r3, {r2, r4, r5}
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	13490b39 	movtne	r0, #39737	; 0x9b39
  3c:	24040000 	strcs	r0, [r4], #-0
  40:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  44:	000e030b 	andeq	r0, lr, fp, lsl #6
  48:	012e0500 			; <UNDEFINED> instruction: 0x012e0500
  4c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  50:	0b3b0b3a 	bleq	ec2d40 <startup-0x1f13d2c0>
  54:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  58:	06120111 			; <UNDEFINED> instruction: 0x06120111
  5c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  60:	00130119 	andseq	r0, r3, r9, lsl r1
  64:	00050600 	andeq	r0, r5, r0, lsl #12
  68:	0b3a0803 	bleq	e8207c <startup-0x1f17df84>
  6c:	0b390b3b 	bleq	e42d60 <startup-0x1f1bd2a0>
  70:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  74:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
  78:	03193f01 	tsteq	r9, #1, 30
  7c:	3b0b3a0e 	blcc	2ce8bc <startup-0x1fd31744>
  80:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  84:	11134919 	tstne	r3, r9, lsl r9
  88:	40061201 	andmi	r1, r6, r1, lsl #4
  8c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  90:	00001301 	andeq	r1, r0, r1, lsl #6
  94:	03003408 	movweq	r3, #1032	; 0x408
  98:	3b0b3a08 	blcc	2ce8c0 <startup-0x1fd31740>
  9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  a0:	00180213 	andseq	r0, r8, r3, lsl r2
  a4:	00240900 	eoreq	r0, r4, r0, lsl #18
  a8:	0b3e0b0b 	bleq	f82cdc <startup-0x1f07d324>
  ac:	00000803 	andeq	r0, r0, r3, lsl #16
  b0:	3f012e0a 	svccc	0x00012e0a
  b4:	3a0e0319 	bcc	380d20 <startup-0x1fc7f2e0>
  b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  bc:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  c0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  c4:	96184006 	ldrls	r4, [r8], -r6
  c8:	13011942 	movwne	r1, #6466	; 0x1942
  cc:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
  d0:	03193f01 	tsteq	r9, #1, 30
  d4:	3b0b3a0e 	blcc	2ce914 <startup-0x1fd316ec>
  d8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  dc:	01193c13 	tsteq	r9, r3, lsl ip
  e0:	0c000013 	stceq	0, cr0, [r0], {19}
  e4:	00000018 	andeq	r0, r0, r8, lsl r0
  e8:	11010b0d 	tstne	r1, sp, lsl #22
  ec:	00061201 	andeq	r1, r6, r1, lsl #4
  f0:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
  f4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  f8:	0b3b0b3a 	bleq	ec2de8 <startup-0x1f13d218>
  fc:	13490b39 	movtne	r0, #39737	; 0x9b39
 100:	0000193c 	andeq	r1, r0, ip, lsr r9
 104:	4901010f 	stmdbmi	r1, {r0, r1, r2, r3, r8}
 108:	00130113 	andseq	r0, r3, r3, lsl r1
 10c:	00211000 	eoreq	r1, r1, r0
 110:	0b2f1349 	bleq	bc4e3c <startup-0x1f43b1c4>
 114:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
 118:	03193f00 	tsteq	r9, #0, 30
 11c:	3b0b3a0e 	blcc	2ce95c <startup-0x1fd316a4>
 120:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 124:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 128:	97184006 	ldrls	r4, [r8, -r6]
 12c:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	0000022a 	andeq	r0, r0, sl, lsr #4
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	2000023a 	andcs	r0, r0, sl, lsr r2
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000215 	andeq	r0, r0, r5, lsl r2
   4:	00640003 	rsbeq	r0, r4, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
  20:	616a2f73 	smcvs	41715	; 0xa2f3
  24:	62626f63 	rsbvs	r6, r2, #396	; 0x18c
  28:	66677265 	strbtvs	r7, [r7], -r5, ror #4
  2c:	2f6b6c61 	svccs	0x006b6c61
  30:	6b736544 	blvs	1cd9548 <startup-0x1e326ab8>
  34:	2f706f74 	svccs	0x00706f74
  38:	72702d43 	rsbsvc	r2, r0, #4288	; 0x10c0
  3c:	6172676f 	cmnvs	r2, pc, ror #14
  40:	72656d6d 	rsbvc	r6, r5, #6976	; 0x1b40
  44:	2f676e69 	svccs	0x00676e69
  48:	6c706f6d 	ldclvs	15, cr6, [r0], #-436	; 0xfffffe4c
  4c:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  50:	6f697461 	svcvs	0x00697461
  54:	2f72656e 	svccs	0x0072656e
  58:	7079656b 	rsbsvc	r6, r9, fp, ror #10
  5c:	00006461 	andeq	r6, r0, r1, ror #8
  60:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  64:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  68:	00010063 	andeq	r0, r1, r3, rrx
  6c:	01050000 	mrseq	r0, (UNDEF: 5)
  70:	00020500 	andeq	r0, r2, r0, lsl #10
  74:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  78:	2113011a 	tstcs	r3, sl, lsl r1
  7c:	02212f21 	eoreq	r2, r1, #132	; 0x84
  80:	01010003 	tsteq	r1, r3
  84:	05001405 	streq	r1, [r0, #-1029]	; 0xfffffbfb
  88:	00001002 	andeq	r1, r0, r2
  8c:	01230320 			; <UNDEFINED> instruction: 0x01230320
  90:	05310505 	ldreq	r0, [r1, #-1285]!	; 0xfffffafb
  94:	05052025 	streq	r2, [r5, #-37]	; 0xffffffdb
  98:	20270530 	eorcs	r0, r7, r0, lsr r5
  9c:	052f0505 	streq	r0, [pc, #-1285]!	; fffffb9f <main+0xdffff97b>
  a0:	05052027 	streq	r2, [r5, #-39]	; 0xffffffd9
  a4:	2015053e 	andscs	r0, r5, lr, lsr r5
  a8:	05300105 	ldreq	r0, [r0, #-261]!	; 0xfffffefb
  ac:	1305e619 	movwne	lr, #22041	; 0x5619
  b0:	670d053e 	smladxvs	sp, lr, r5, r0
  b4:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
  b8:	0f052109 	svceq	0x00052109
  bc:	4b0b054b 	blmi	2c15f0 <startup-0x1fd3ea10>
  c0:	053d0d05 	ldreq	r0, [sp, #-3333]!	; 0xfffff2fb
  c4:	1a053d1f 	bne	14f548 <startup-0x1feb0ab8>
  c8:	2027052e 	eorcs	r0, r7, lr, lsr #10
  cc:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
  d0:	1f052018 	svcne	0x00052018
  d4:	02040200 	andeq	r0, r4, #0, 4
  d8:	00050537 	andeq	r0, r5, r7, lsr r5
  dc:	3c010402 	cfstrscc	mvf0, [r1], {2}
  e0:	3d0c0544 	cfstr32cc	mvfx0, [ip, #-272]	; 0xfffffef0
  e4:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
  e8:	05210104 	streq	r0, [r1, #-260]!	; 0xfffffefc
  ec:	05057622 	streq	r7, [r5, #-1570]	; 0xfffff9de
  f0:	0811054c 	ldmdaeq	r1, {r2, r3, r6, r8, sl}
  f4:	20200530 	eorcs	r0, r0, r0, lsr r5
  f8:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
  fc:	20052111 	andcs	r2, r5, r1, lsl r1
 100:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
 104:	05211105 	streq	r1, [r1, #-261]!	; 0xfffffefb
 108:	09052020 	stmdbeq	r5, {r5, sp}
 10c:	2111052e 	tstcs	r1, lr, lsr #10
 110:	05202005 	streq	r2, [r0, #-5]!
 114:	12052e09 	andne	r2, r5, #144	; 0x90
 118:	20210521 	eorcs	r0, r1, r1, lsr #10
 11c:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
 120:	16052301 	strne	r2, [r5], -r1, lsl #6
 124:	3f090576 	svccc	0x00090576
 128:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
 12c:	07053e0a 	streq	r3, [r5, -sl, lsl #28]
 130:	0018054a 	andseq	r0, r8, sl, asr #10
 134:	20010402 	andcs	r0, r1, r2, lsl #8
 138:	052f0a05 	streq	r0, [pc, #-2565]!	; fffff73b <main+0xdffff517>
 13c:	18054a07 	stmdane	r5, {r0, r1, r2, r9, fp, lr}
 140:	01040200 	mrseq	r0, R12_usr
 144:	2f0a0520 	svccs	0x000a0520
 148:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
 14c:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
 150:	0a052001 	beq	14815c <startup-0x1feb7ea4>
 154:	4a07052f 	bmi	1c1618 <startup-0x1fe3e9e8>
 158:	02001805 	andeq	r1, r0, #327680	; 0x50000
 15c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 160:	01052f0c 	tsteq	r5, ip, lsl #30
 164:	691e0521 	ldmdbvs	lr, {r0, r5, r8, sl}
 168:	05680505 	strbeq	r0, [r8, #-1285]!	; 0xfffffafb
 16c:	1f059111 	svcne	0x00059111
 170:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
 174:	05211105 	streq	r1, [r1, #-261]!	; 0xfffffefb
 178:	0905201f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sp}
 17c:	2111052e 	tstcs	r1, lr, lsr #10
 180:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
 184:	11052e09 	tstne	r5, r9, lsl #28
 188:	201f0521 	andscs	r0, pc, r1, lsr #10
 18c:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
 190:	1f052111 	svcne	0x00052111
 194:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
 198:	05211105 	streq	r1, [r1, #-261]!	; 0xfffffefb
 19c:	0905201f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sp}
 1a0:	2111052e 	tstcs	r1, lr, lsr #10
 1a4:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
 1a8:	11052e09 	tstne	r5, r9, lsl #28
 1ac:	201f0521 	andscs	r0, pc, r1, lsr #10
 1b0:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
 1b4:	1f052111 	svcne	0x00052111
 1b8:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
 1bc:	05211105 	streq	r1, [r1, #-261]!	; 0xfffffefb
 1c0:	0905201f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sp}
 1c4:	2113052e 	tstcs	r3, lr, lsr #10
 1c8:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
 1cc:	13052e09 	movwne	r2, #24073	; 0x5e09
 1d0:	20210521 	eorcs	r0, r1, r1, lsr #10
 1d4:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
 1d8:	21052113 	tstcs	r5, r3, lsl r1
 1dc:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
 1e0:	05211305 	streq	r1, [r1, #-773]!	; 0xfffffcfb
 1e4:	09052021 	stmdbeq	r5, {r0, r5, sp}
 1e8:	2113052e 	tstcs	r3, lr, lsr #10
 1ec:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
 1f0:	13052e09 	movwne	r2, #24073	; 0x5e09
 1f4:	20210521 	eorcs	r0, r1, r1, lsr #10
 1f8:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
 1fc:	20052112 	andcs	r2, r5, r2, lsl r1
 200:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
 204:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
 208:	05059310 	streq	r9, [r5, #-784]	; 0xfffffcf0
 20c:	00090530 	andeq	r0, r9, r0, lsr r5
 210:	31010402 	tstcc	r1, r2, lsl #8
 214:	01000702 	tsteq	r0, r2, lsl #14
 218:	Address 0x0000000000000218 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  80:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  84:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  88:	74634100 	strbtvc	r4, [r3], #-256	; 0xffffff00
  8c:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
  90:	6f725f65 	svcvs	0x00725f65
  94:	552f0077 	strpl	r0, [pc, #-119]!	; 25 <startup-0x1fffffdb>
  98:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  9c:	63616a2f 	cmnvs	r1, #192512	; 0x2f000
  a0:	6562626f 	strbvs	r6, [r2, #-623]!	; 0xfffffd91
  a4:	61666772 	smcvs	26226	; 0x6672
  a8:	442f6b6c 	strtmi	r6, [pc], #-2924	; b0 <startup-0x1fffff50>
  ac:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
  b0:	432f706f 			; <UNDEFINED> instruction: 0x432f706f
  b4:	6f72702d 	svcvs	0x0072702d
  b8:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
  bc:	6972656d 	ldmdbvs	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
  c0:	6d2f676e 	stcvs	7, cr6, [pc, #-440]!	; ffffff10 <main+0xdffffcec>
  c4:	616c706f 	cmnvs	ip, pc, rrx
  c8:	61726f62 	cmnvs	r2, r2, ror #30
  cc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  d0:	6b2f7265 	blvs	bdca6c <startup-0x1f423594>
  d4:	61707965 	cmnvs	r0, r5, ror #18
  d8:	74732f64 	ldrbtvc	r2, [r3], #-3940	; 0xfffff09c
  dc:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  e0:	00632e70 	rsbeq	r2, r3, r0, ror lr
  e4:	6279656b 	rsbsvs	r6, r9, #448790528	; 0x1ac00000
  e8:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
  ec:	67657337 			; <UNDEFINED> instruction: 0x67657337
  f0:	61655200 	cmnvs	r5, r0, lsl #4
  f4:	6f635f64 	svcvs	0x00635f64
  f8:	6e6d6f6c 	cdpvs	15, 6, cr6, cr13, cr12, {3}
  fc:	736e7500 	cmnvc	lr, #0, 10
 100:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 104:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 108:	6d007261 	sfmvs	f7, 4, [r0, #-388]	; 0xfffffe7c
 10c:	006e6961 	rsbeq	r6, lr, r1, ror #18
 110:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 114:	6a2f7372 	bvs	bdcee4 <startup-0x1f42311c>
 118:	626f6361 	rsbvs	r6, pc, #-2080374783	; 0x84000001
 11c:	67726562 	ldrbvs	r6, [r2, -r2, ror #10]!
 120:	6b6c6166 	blvs	1b186c0 <startup-0x1e4e7940>
 124:	7365442f 	cmnvc	r5, #788529152	; 0x2f000000
 128:	706f746b 	rsbvc	r7, pc, fp, ror #8
 12c:	702d432f 	eorvc	r4, sp, pc, lsr #6
 130:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
 134:	656d6d61 	strbvs	r6, [sp, #-3425]!	; 0xfffff29f
 138:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
 13c:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 140:	6f62616c 	svcvs	0x0062616c
 144:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 148:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 14c:	79656b2f 	stmdbvc	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 150:	00646170 	rsbeq	r6, r4, r0, ror r1
 154:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 158:	00707574 	rsbseq	r7, r0, r4, ror r5
 15c:	5f707061 	svcpl	0x00707061
 160:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	0000003c 	andeq	r0, r0, ip, lsr r0
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	2000004c 	andcs	r0, r0, ip, asr #32
  48:	00000068 	andeq	r0, r0, r8, rrx
  4c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  50:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  54:	280e4101 	stmdacs	lr, {r0, r8, lr}
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	200000b4 	strhcs	r0, [r0], -r4
  68:	00000064 	andeq	r0, r0, r4, rrx
  6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  78:	00000007 	andeq	r0, r0, r7
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	20000118 	andcs	r0, r0, r8, lsl r1
  88:	00000054 	andeq	r0, r0, r4, asr r0
  8c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  90:	41018e02 	tstmi	r1, r2, lsl #28
  94:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  98:	00000007 	andeq	r0, r0, r7
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	2000016c 	andcs	r0, r0, ip, ror #2
  a8:	000000b8 	strheq	r0, [r0], -r8
  ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  b0:	41018e02 	tstmi	r1, r2, lsl #28
  b4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  b8:	00000007 	andeq	r0, r0, r7
  bc:	00000018 	andeq	r0, r0, r8, lsl r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	20000224 	andcs	r0, r0, r4, lsr #4
  c8:	00000016 	andeq	r0, r0, r6, lsl r0
  cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  d0:	41018e02 	tstmi	r1, r2, lsl #28
  d4:	0000070d 	andeq	r0, r0, sp, lsl #14
