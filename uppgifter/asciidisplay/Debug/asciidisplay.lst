
Debug/asciidisplay:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
unsigned char ascii_read_status(void);

__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f830 	bl	20000068 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <ascii_init>:


void ascii_init(void) {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
    
    *GPIO_E_ODRHIGH = 0b0000111000;
20000014:	4b0a      	ldr	r3, [pc, #40]	; (20000040 <ascii_init+0x30>)
20000016:	2238      	movs	r2, #56	; 0x38
20000018:	701a      	strb	r2, [r3, #0]
    delay_mikro(40);
2000001a:	2028      	movs	r0, #40	; 0x28
2000001c:	f000 f8ec 	bl	200001f8 <delay_mikro>
    *GPIO_E_ODRHIGH = 0b0000001110;
20000020:	4b07      	ldr	r3, [pc, #28]	; (20000040 <ascii_init+0x30>)
20000022:	220e      	movs	r2, #14
20000024:	701a      	strb	r2, [r3, #0]
    delay_mikro(40);
20000026:	2028      	movs	r0, #40	; 0x28
20000028:	f000 f8e6 	bl	200001f8 <delay_mikro>
    *GPIO_E_ODRHIGH = 0b0000000110;
2000002c:	4b04      	ldr	r3, [pc, #16]	; (20000040 <ascii_init+0x30>)
2000002e:	2206      	movs	r2, #6
20000030:	701a      	strb	r2, [r3, #0]
    delay_mikro(40);
20000032:	2028      	movs	r0, #40	; 0x28
20000034:	f000 f8e0 	bl	200001f8 <delay_mikro>
    
}
20000038:	46c0      	nop			; (mov r8, r8)
2000003a:	46bd      	mov	sp, r7
2000003c:	bd80      	pop	{r7, pc}
2000003e:	46c0      	nop			; (mov r8, r8)
20000040:	40021015 	andmi	r1, r2, r5, lsl r0

20000044 <app_init>:

void app_init(void) {
20000044:	b580      	push	{r7, lr}
20000046:	af00      	add	r7, sp, #0
    
    //för fördröjning
    // starta klockor port D och E 
    *((unsigned long *) 0x40023830) = 0x18;
20000048:	4b04      	ldr	r3, [pc, #16]	; (2000005c <app_init+0x18>)
2000004a:	2218      	movs	r2, #24
2000004c:	601a      	str	r2, [r3, #0]
    *((unsigned long *) GPIO_E_MODER) = 0x00005555;
2000004e:	4b04      	ldr	r3, [pc, #16]	; (20000060 <app_init+0x1c>)
20000050:	4a04      	ldr	r2, [pc, #16]	; (20000064 <app_init+0x20>)
20000052:	601a      	str	r2, [r3, #0]
}
20000054:	46c0      	nop			; (mov r8, r8)
20000056:	46bd      	mov	sp, r7
20000058:	bd80      	pop	{r7, pc}
2000005a:	46c0      	nop			; (mov r8, r8)
2000005c:	40023830 	andmi	r3, r2, r0, lsr r8
20000060:	40021000 	andmi	r1, r2, r0
20000064:	00005555 	andeq	r5, r0, r5, asr r5

20000068 <main>:

void main(void){
20000068:	b5b0      	push	{r4, r5, r7, lr}
2000006a:	b08a      	sub	sp, #40	; 0x28
2000006c:	af00      	add	r7, sp, #0
    char *s;
    char test1[] = "Alfanumerisk ";
2000006e:	2414      	movs	r4, #20
20000070:	193b      	adds	r3, r7, r4
20000072:	4a1c      	ldr	r2, [pc, #112]	; (200000e4 <main+0x7c>)
20000074:	ca23      	ldmia	r2!, {r0, r1, r5}
20000076:	c323      	stmia	r3!, {r0, r1, r5}
20000078:	8812      	ldrh	r2, [r2, #0]
2000007a:	801a      	strh	r2, [r3, #0]
    char test2[] = "Display - test";
2000007c:	1d3b      	adds	r3, r7, #4
2000007e:	4a1a      	ldr	r2, [pc, #104]	; (200000e8 <main+0x80>)
20000080:	ca23      	ldmia	r2!, {r0, r1, r5}
20000082:	c323      	stmia	r3!, {r0, r1, r5}
20000084:	8811      	ldrh	r1, [r2, #0]
20000086:	8019      	strh	r1, [r3, #0]
20000088:	7892      	ldrb	r2, [r2, #2]
2000008a:	709a      	strb	r2, [r3, #2]
    
    app_init();
2000008c:	f7ff ffda 	bl	20000044 <app_init>
    ascii_init();
20000090:	f7ff ffbe 	bl	20000010 <ascii_init>
    ascii_gotoxy(1,1);
20000094:	2101      	movs	r1, #1
20000096:	2001      	movs	r0, #1
20000098:	f000 f828 	bl	200000ec <ascii_gotoxy>
    s = test1;
2000009c:	193b      	adds	r3, r7, r4
2000009e:	627b      	str	r3, [r7, #36]	; 0x24
    
    while( *s ) ascii_write_char( *s++);
200000a0:	e006      	b.n	200000b0 <main+0x48>
200000a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200000a4:	1c5a      	adds	r2, r3, #1
200000a6:	627a      	str	r2, [r7, #36]	; 0x24
200000a8:	781b      	ldrb	r3, [r3, #0]
200000aa:	0018      	movs	r0, r3
200000ac:	f000 f844 	bl	20000138 <ascii_write_char>
200000b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200000b2:	781b      	ldrb	r3, [r3, #0]
200000b4:	2b00      	cmp	r3, #0
200000b6:	d1f4      	bne.n	200000a2 <main+0x3a>
    ascii_gotoxy(1,2);
200000b8:	2102      	movs	r1, #2
200000ba:	2001      	movs	r0, #1
200000bc:	f000 f816 	bl	200000ec <ascii_gotoxy>
    s = test2;
200000c0:	1d3b      	adds	r3, r7, #4
200000c2:	627b      	str	r3, [r7, #36]	; 0x24
    while( *s) ascii_write_char( *s++);
200000c4:	e006      	b.n	200000d4 <main+0x6c>
200000c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200000c8:	1c5a      	adds	r2, r3, #1
200000ca:	627a      	str	r2, [r7, #36]	; 0x24
200000cc:	781b      	ldrb	r3, [r3, #0]
200000ce:	0018      	movs	r0, r3
200000d0:	f000 f832 	bl	20000138 <ascii_write_char>
200000d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200000d6:	781b      	ldrb	r3, [r3, #0]
200000d8:	2b00      	cmp	r3, #0
200000da:	d1f4      	bne.n	200000c6 <main+0x5e>
    return 0;
200000dc:	46c0      	nop			; (mov r8, r8)
}
200000de:	46bd      	mov	sp, r7
200000e0:	b00a      	add	sp, #40	; 0x28
200000e2:	bdb0      	pop	{r4, r5, r7, pc}
200000e4:	200003e0 	andcs	r0, r0, r0, ror #7
200000e8:	200003f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

200000ec <ascii_gotoxy>:

void ascii_gotoxy(int x, int y) {
200000ec:	b580      	push	{r7, lr}
200000ee:	b082      	sub	sp, #8
200000f0:	af00      	add	r7, sp, #0
200000f2:	6078      	str	r0, [r7, #4]
200000f4:	6039      	str	r1, [r7, #0]
    *GPIO_E_ODRHIGH = x - 1;
200000f6:	687b      	ldr	r3, [r7, #4]
200000f8:	b2db      	uxtb	r3, r3
200000fa:	4a0e      	ldr	r2, [pc, #56]	; (20000134 <ascii_gotoxy+0x48>)
200000fc:	3b01      	subs	r3, #1
200000fe:	b2db      	uxtb	r3, r3
20000100:	7013      	strb	r3, [r2, #0]
    if(y == 2) {
20000102:	683b      	ldr	r3, [r7, #0]
20000104:	2b02      	cmp	r3, #2
20000106:	d106      	bne.n	20000116 <ascii_gotoxy+0x2a>
        *GPIO_E_ODRHIGH = *GPIO_E_ODRHIGH + 0x40;
20000108:	4b0a      	ldr	r3, [pc, #40]	; (20000134 <ascii_gotoxy+0x48>)
2000010a:	781b      	ldrb	r3, [r3, #0]
2000010c:	b2db      	uxtb	r3, r3
2000010e:	4a09      	ldr	r2, [pc, #36]	; (20000134 <ascii_gotoxy+0x48>)
20000110:	3340      	adds	r3, #64	; 0x40
20000112:	b2db      	uxtb	r3, r3
20000114:	7013      	strb	r3, [r2, #0]
    }
    ascii_write_cmd(0x80 | *GPIO_E_ODRHIGH);
20000116:	4b07      	ldr	r3, [pc, #28]	; (20000134 <ascii_gotoxy+0x48>)
20000118:	781b      	ldrb	r3, [r3, #0]
2000011a:	b2db      	uxtb	r3, r3
2000011c:	2280      	movs	r2, #128	; 0x80
2000011e:	4252      	negs	r2, r2
20000120:	4313      	orrs	r3, r2
20000122:	b2db      	uxtb	r3, r3
20000124:	0018      	movs	r0, r3
20000126:	f000 f8f1 	bl	2000030c <ascii_write_cmd>
}
2000012a:	46c0      	nop			; (mov r8, r8)
2000012c:	46bd      	mov	sp, r7
2000012e:	b002      	add	sp, #8
20000130:	bd80      	pop	{r7, pc}
20000132:	46c0      	nop			; (mov r8, r8)
20000134:	40021015 	andmi	r1, r2, r5, lsl r0

20000138 <ascii_write_char>:

void ascii_write_char(unsigned char c)  {
20000138:	b580      	push	{r7, lr}
2000013a:	b082      	sub	sp, #8
2000013c:	af00      	add	r7, sp, #0
2000013e:	0002      	movs	r2, r0
20000140:	1dfb      	adds	r3, r7, #7
20000142:	701a      	strb	r2, [r3, #0]
    
    while(( ascii_read_status() & 0x80) == 0x80){}
20000144:	46c0      	nop			; (mov r8, r8)
20000146:	f000 f90b 	bl	20000360 <ascii_read_status>
2000014a:	0003      	movs	r3, r0
2000014c:	001a      	movs	r2, r3
2000014e:	2380      	movs	r3, #128	; 0x80
20000150:	4013      	ands	r3, r2
20000152:	2b80      	cmp	r3, #128	; 0x80
20000154:	d0f7      	beq.n	20000146 <ascii_write_char+0xe>
    delay_mikro(8);
20000156:	2008      	movs	r0, #8
20000158:	f000 f84e 	bl	200001f8 <delay_mikro>
    ascii_write_data(c);
2000015c:	1dfb      	adds	r3, r7, #7
2000015e:	781b      	ldrb	r3, [r3, #0]
20000160:	0018      	movs	r0, r3
20000162:	f000 f8e8 	bl	20000336 <ascii_write_data>
    delay_mikro(44);
20000166:	202c      	movs	r0, #44	; 0x2c
20000168:	f000 f846 	bl	200001f8 <delay_mikro>
}
2000016c:	46c0      	nop			; (mov r8, r8)
2000016e:	46bd      	mov	sp, r7
20000170:	b002      	add	sp, #8
20000172:	bd80      	pop	{r7, pc}

20000174 <delay_250ns>:

void delay_250ns(void) {
20000174:	b580      	push	{r7, lr}
20000176:	af00      	add	r7, sp, #0
    
    /* SystemCoreClock = 168000000 */
    *STK_CTRL = 0;
20000178:	4b0c      	ldr	r3, [pc, #48]	; (200001ac <delay_250ns+0x38>)
2000017a:	2200      	movs	r2, #0
2000017c:	601a      	str	r2, [r3, #0]
    *STK_LOAD = ( (168/4) -1 );
2000017e:	4b0c      	ldr	r3, [pc, #48]	; (200001b0 <delay_250ns+0x3c>)
20000180:	2229      	movs	r2, #41	; 0x29
20000182:	601a      	str	r2, [r3, #0]
    *STK_VAL = 0;
20000184:	4b0b      	ldr	r3, [pc, #44]	; (200001b4 <delay_250ns+0x40>)
20000186:	2200      	movs	r2, #0
20000188:	601a      	str	r2, [r3, #0]
    *STK_CTRL = 5;
2000018a:	4b08      	ldr	r3, [pc, #32]	; (200001ac <delay_250ns+0x38>)
2000018c:	2205      	movs	r2, #5
2000018e:	601a      	str	r2, [r3, #0]
    while( (*STK_CTRL & 0x10000 )== 0 );
20000190:	46c0      	nop			; (mov r8, r8)
20000192:	4b06      	ldr	r3, [pc, #24]	; (200001ac <delay_250ns+0x38>)
20000194:	681a      	ldr	r2, [r3, #0]
20000196:	2380      	movs	r3, #128	; 0x80
20000198:	025b      	lsls	r3, r3, #9
2000019a:	4013      	ands	r3, r2
2000019c:	d0f9      	beq.n	20000192 <delay_250ns+0x1e>
    *STK_CTRL = 0;
2000019e:	4b03      	ldr	r3, [pc, #12]	; (200001ac <delay_250ns+0x38>)
200001a0:	2200      	movs	r2, #0
200001a2:	601a      	str	r2, [r3, #0]
}
200001a4:	46c0      	nop			; (mov r8, r8)
200001a6:	46bd      	mov	sp, r7
200001a8:	bd80      	pop	{r7, pc}
200001aa:	46c0      	nop			; (mov r8, r8)
200001ac:	e000e010 	and	lr, r0, r0, lsl r0
200001b0:	e000e020 	and	lr, r0, r0, lsr #32
200001b4:	e000e030 	and	lr, r0, r0, lsr r0

200001b8 <delay_milli>:

void delay_milli(unsigned int ms) {
200001b8:	b580      	push	{r7, lr}
200001ba:	b082      	sub	sp, #8
200001bc:	af00      	add	r7, sp, #0
200001be:	6078      	str	r0, [r7, #4]
    #ifdef SIMULATOR
        ms = ms/1000;
        ms++;
    #endif
    
    ms *= 1000;
200001c0:	687a      	ldr	r2, [r7, #4]
200001c2:	0013      	movs	r3, r2
200001c4:	015b      	lsls	r3, r3, #5
200001c6:	1a9b      	subs	r3, r3, r2
200001c8:	009b      	lsls	r3, r3, #2
200001ca:	189b      	adds	r3, r3, r2
200001cc:	00db      	lsls	r3, r3, #3
200001ce:	607b      	str	r3, [r7, #4]
    
    while( ms > 0 )
200001d0:	e00a      	b.n	200001e8 <delay_milli+0x30>
    {
        
    delay_250ns();
200001d2:	f7ff ffcf 	bl	20000174 <delay_250ns>
    delay_250ns();
200001d6:	f7ff ffcd 	bl	20000174 <delay_250ns>
    delay_250ns();
200001da:	f7ff ffcb 	bl	20000174 <delay_250ns>
    delay_250ns();
200001de:	f7ff ffc9 	bl	20000174 <delay_250ns>
    ms--;
200001e2:	687b      	ldr	r3, [r7, #4]
200001e4:	3b01      	subs	r3, #1
200001e6:	607b      	str	r3, [r7, #4]
    while( ms > 0 )
200001e8:	687b      	ldr	r3, [r7, #4]
200001ea:	2b00      	cmp	r3, #0
200001ec:	d1f1      	bne.n	200001d2 <delay_milli+0x1a>
    }
}
200001ee:	46c0      	nop			; (mov r8, r8)
200001f0:	46c0      	nop			; (mov r8, r8)
200001f2:	46bd      	mov	sp, r7
200001f4:	b002      	add	sp, #8
200001f6:	bd80      	pop	{r7, pc}

200001f8 <delay_mikro>:

void delay_mikro(unsigned int us) {
200001f8:	b580      	push	{r7, lr}
200001fa:	b082      	sub	sp, #8
200001fc:	af00      	add	r7, sp, #0
200001fe:	6078      	str	r0, [r7, #4]
    
    
    while( us > 0 ) {
20000200:	e00a      	b.n	20000218 <delay_mikro+0x20>
    
    delay_250ns();
20000202:	f7ff ffb7 	bl	20000174 <delay_250ns>
    delay_250ns();
20000206:	f7ff ffb5 	bl	20000174 <delay_250ns>
    delay_250ns();
2000020a:	f7ff ffb3 	bl	20000174 <delay_250ns>
    delay_250ns();
2000020e:	f7ff ffb1 	bl	20000174 <delay_250ns>
    us--;
20000212:	687b      	ldr	r3, [r7, #4]
20000214:	3b01      	subs	r3, #1
20000216:	607b      	str	r3, [r7, #4]
    while( us > 0 ) {
20000218:	687b      	ldr	r3, [r7, #4]
2000021a:	2b00      	cmp	r3, #0
2000021c:	d1f1      	bne.n	20000202 <delay_mikro+0xa>
    }
}
2000021e:	46c0      	nop			; (mov r8, r8)
20000220:	46c0      	nop			; (mov r8, r8)
20000222:	46bd      	mov	sp, r7
20000224:	b002      	add	sp, #8
20000226:	bd80      	pop	{r7, pc}

20000228 <ascii_ctrl_bit_set>:

void ascii_ctrl_bit_set( char x ){ /* x: bitmask bits are 1 to set */
20000228:	b580      	push	{r7, lr}
2000022a:	b084      	sub	sp, #16
2000022c:	af00      	add	r7, sp, #0
2000022e:	0002      	movs	r2, r0
20000230:	1dfb      	adds	r3, r7, #7
20000232:	701a      	strb	r2, [r3, #0]

    char c;
    c = *GPIO_E_ODRLOW;
20000234:	4a09      	ldr	r2, [pc, #36]	; (2000025c <ascii_ctrl_bit_set+0x34>)
20000236:	210f      	movs	r1, #15
20000238:	187b      	adds	r3, r7, r1
2000023a:	7812      	ldrb	r2, [r2, #0]
2000023c:	701a      	strb	r2, [r3, #0]
    *GPIO_E_ODRLOW = B_SELECT | x | c;
2000023e:	1dfa      	adds	r2, r7, #7
20000240:	187b      	adds	r3, r7, r1
20000242:	7812      	ldrb	r2, [r2, #0]
20000244:	781b      	ldrb	r3, [r3, #0]
20000246:	4313      	orrs	r3, r2
20000248:	b2db      	uxtb	r3, r3
2000024a:	4a04      	ldr	r2, [pc, #16]	; (2000025c <ascii_ctrl_bit_set+0x34>)
2000024c:	2104      	movs	r1, #4
2000024e:	430b      	orrs	r3, r1
20000250:	b2db      	uxtb	r3, r3
20000252:	7013      	strb	r3, [r2, #0]
}
20000254:	46c0      	nop			; (mov r8, r8)
20000256:	46bd      	mov	sp, r7
20000258:	b004      	add	sp, #16
2000025a:	bd80      	pop	{r7, pc}
2000025c:	40021014 	andmi	r1, r2, r4, lsl r0

20000260 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear( char x ){ /* x: bitmask bits are 1 to clear */
20000260:	b580      	push	{r7, lr}
20000262:	b084      	sub	sp, #16
20000264:	af00      	add	r7, sp, #0
20000266:	0002      	movs	r2, r0
20000268:	1dfb      	adds	r3, r7, #7
2000026a:	701a      	strb	r2, [r3, #0]

    char c;
    c = *GPIO_E_ODRLOW;
2000026c:	4a0d      	ldr	r2, [pc, #52]	; (200002a4 <ascii_ctrl_bit_clear+0x44>)
2000026e:	210f      	movs	r1, #15
20000270:	187b      	adds	r3, r7, r1
20000272:	7812      	ldrb	r2, [r2, #0]
20000274:	701a      	strb	r2, [r3, #0]
    c = c & ~x;
20000276:	1dfb      	adds	r3, r7, #7
20000278:	781b      	ldrb	r3, [r3, #0]
2000027a:	b25b      	sxtb	r3, r3
2000027c:	43db      	mvns	r3, r3
2000027e:	b25b      	sxtb	r3, r3
20000280:	187a      	adds	r2, r7, r1
20000282:	7812      	ldrb	r2, [r2, #0]
20000284:	b252      	sxtb	r2, r2
20000286:	4013      	ands	r3, r2
20000288:	b25a      	sxtb	r2, r3
2000028a:	187b      	adds	r3, r7, r1
2000028c:	701a      	strb	r2, [r3, #0]
    *GPIO_E_ODRLOW = B_SELECT | c;
2000028e:	4a05      	ldr	r2, [pc, #20]	; (200002a4 <ascii_ctrl_bit_clear+0x44>)
20000290:	187b      	adds	r3, r7, r1
20000292:	781b      	ldrb	r3, [r3, #0]
20000294:	2104      	movs	r1, #4
20000296:	430b      	orrs	r3, r1
20000298:	b2db      	uxtb	r3, r3
2000029a:	7013      	strb	r3, [r2, #0]
}
2000029c:	46c0      	nop			; (mov r8, r8)
2000029e:	46bd      	mov	sp, r7
200002a0:	b004      	add	sp, #16
200002a2:	bd80      	pop	{r7, pc}
200002a4:	40021014 	andmi	r1, r2, r4, lsl r0

200002a8 <ascii_read_controller>:

char ascii_read_controller( void ){
200002a8:	b580      	push	{r7, lr}
200002aa:	b082      	sub	sp, #8
200002ac:	af00      	add	r7, sp, #0
    
    char c;
    ascii_ctrl_bit_set( B_E );
200002ae:	2040      	movs	r0, #64	; 0x40
200002b0:	f7ff ffba 	bl	20000228 <ascii_ctrl_bit_set>
    delay_250ns();
200002b4:	f7ff ff5e 	bl	20000174 <delay_250ns>
    delay_250ns();
200002b8:	f7ff ff5c 	bl	20000174 <delay_250ns>
    c = *GPIO_E_IDRHIGH;
200002bc:	4a06      	ldr	r2, [pc, #24]	; (200002d8 <ascii_read_controller+0x30>)
200002be:	1dfb      	adds	r3, r7, #7
200002c0:	7812      	ldrb	r2, [r2, #0]
200002c2:	701a      	strb	r2, [r3, #0]
    ascii_ctrl_bit_clear( B_E );
200002c4:	2040      	movs	r0, #64	; 0x40
200002c6:	f7ff ffcb 	bl	20000260 <ascii_ctrl_bit_clear>
    return c;
200002ca:	1dfb      	adds	r3, r7, #7
200002cc:	781b      	ldrb	r3, [r3, #0]
}
200002ce:	0018      	movs	r0, r3
200002d0:	46bd      	mov	sp, r7
200002d2:	b002      	add	sp, #8
200002d4:	bd80      	pop	{r7, pc}
200002d6:	46c0      	nop			; (mov r8, r8)
200002d8:	40021011 	andmi	r1, r2, r1, lsl r0

200002dc <ascii_write_controller>:

void ascii_write_controller( char c ){
200002dc:	b580      	push	{r7, lr}
200002de:	b082      	sub	sp, #8
200002e0:	af00      	add	r7, sp, #0
200002e2:	0002      	movs	r2, r0
200002e4:	1dfb      	adds	r3, r7, #7
200002e6:	701a      	strb	r2, [r3, #0]
    
    ascii_ctrl_bit_set( B_E );
200002e8:	2040      	movs	r0, #64	; 0x40
200002ea:	f7ff ff9d 	bl	20000228 <ascii_ctrl_bit_set>
    *GPIO_E_ODRHIGH = c; 
200002ee:	4a06      	ldr	r2, [pc, #24]	; (20000308 <ascii_write_controller+0x2c>)
200002f0:	1dfb      	adds	r3, r7, #7
200002f2:	781b      	ldrb	r3, [r3, #0]
200002f4:	7013      	strb	r3, [r2, #0]
    ascii_ctrl_bit_clear( B_E );
200002f6:	2040      	movs	r0, #64	; 0x40
200002f8:	f7ff ffb2 	bl	20000260 <ascii_ctrl_bit_clear>
    delay_250ns();
200002fc:	f7ff ff3a 	bl	20000174 <delay_250ns>
}
20000300:	46c0      	nop			; (mov r8, r8)
20000302:	46bd      	mov	sp, r7
20000304:	b002      	add	sp, #8
20000306:	bd80      	pop	{r7, pc}
20000308:	40021015 	andmi	r1, r2, r5, lsl r0

2000030c <ascii_write_cmd>:

void ascii_write_cmd(unsigned char command) {
2000030c:	b580      	push	{r7, lr}
2000030e:	b082      	sub	sp, #8
20000310:	af00      	add	r7, sp, #0
20000312:	0002      	movs	r2, r0
20000314:	1dfb      	adds	r3, r7, #7
20000316:	701a      	strb	r2, [r3, #0]
    
    ascii_ctrl_bit_clear( B_RS );       // RS = 0 clEar
20000318:	2001      	movs	r0, #1
2000031a:	f7ff ffa1 	bl	20000260 <ascii_ctrl_bit_clear>
    ascii_ctrl_bit_clear( B_RW );       // RW = 0
2000031e:	2002      	movs	r0, #2
20000320:	f7ff ff9e 	bl	20000260 <ascii_ctrl_bit_clear>
    ascii_write_controller(command);
20000324:	1dfb      	adds	r3, r7, #7
20000326:	781b      	ldrb	r3, [r3, #0]
20000328:	0018      	movs	r0, r3
2000032a:	f7ff ffd7 	bl	200002dc <ascii_write_controller>
}
2000032e:	46c0      	nop			; (mov r8, r8)
20000330:	46bd      	mov	sp, r7
20000332:	b002      	add	sp, #8
20000334:	bd80      	pop	{r7, pc}

20000336 <ascii_write_data>:

void ascii_write_data(unsigned char data) {
20000336:	b580      	push	{r7, lr}
20000338:	b082      	sub	sp, #8
2000033a:	af00      	add	r7, sp, #0
2000033c:	0002      	movs	r2, r0
2000033e:	1dfb      	adds	r3, r7, #7
20000340:	701a      	strb	r2, [r3, #0]
    
    ascii_ctrl_bit_set( B_RS );
20000342:	2001      	movs	r0, #1
20000344:	f7ff ff70 	bl	20000228 <ascii_ctrl_bit_set>
    ascii_ctrl_bit_clear( B_RW ); 
20000348:	2002      	movs	r0, #2
2000034a:	f7ff ff89 	bl	20000260 <ascii_ctrl_bit_clear>
    ascii_write_controller(data);
2000034e:	1dfb      	adds	r3, r7, #7
20000350:	781b      	ldrb	r3, [r3, #0]
20000352:	0018      	movs	r0, r3
20000354:	f7ff ffc2 	bl	200002dc <ascii_write_controller>
}
20000358:	46c0      	nop			; (mov r8, r8)
2000035a:	46bd      	mov	sp, r7
2000035c:	b002      	add	sp, #8
2000035e:	bd80      	pop	{r7, pc}

20000360 <ascii_read_status>:

unsigned char ascii_read_status( void ){
20000360:	b590      	push	{r4, r7, lr}
20000362:	b083      	sub	sp, #12
20000364:	af00      	add	r7, sp, #0
    char c;
    *GPIO_E_MODER = 0x00005555;
20000366:	4b0b      	ldr	r3, [pc, #44]	; (20000394 <ascii_read_status+0x34>)
20000368:	4a0b      	ldr	r2, [pc, #44]	; (20000398 <ascii_read_status+0x38>)
2000036a:	601a      	str	r2, [r3, #0]
    ascii_ctrl_bit_set( B_RW );
2000036c:	2002      	movs	r0, #2
2000036e:	f7ff ff5b 	bl	20000228 <ascii_ctrl_bit_set>
    ascii_ctrl_bit_clear( B_RS );
20000372:	2001      	movs	r0, #1
20000374:	f7ff ff74 	bl	20000260 <ascii_ctrl_bit_clear>
    c = ascii_read_controller();
20000378:	1dfc      	adds	r4, r7, #7
2000037a:	f7ff ff95 	bl	200002a8 <ascii_read_controller>
2000037e:	0003      	movs	r3, r0
20000380:	7023      	strb	r3, [r4, #0]
    *GPIO_E_MODER = 0x55555555;
20000382:	4b04      	ldr	r3, [pc, #16]	; (20000394 <ascii_read_status+0x34>)
20000384:	4a05      	ldr	r2, [pc, #20]	; (2000039c <ascii_read_status+0x3c>)
20000386:	601a      	str	r2, [r3, #0]
    return c;
20000388:	1dfb      	adds	r3, r7, #7
2000038a:	781b      	ldrb	r3, [r3, #0]
}
2000038c:	0018      	movs	r0, r3
2000038e:	46bd      	mov	sp, r7
20000390:	b003      	add	sp, #12
20000392:	bd90      	pop	{r4, r7, pc}
20000394:	40021000 	andmi	r1, r2, r0
20000398:	00005555 	andeq	r5, r0, r5, asr r5
2000039c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200003a0 <ascii_read_data>:


char ascii_read_data( void ){
200003a0:	b590      	push	{r4, r7, lr}
200003a2:	b083      	sub	sp, #12
200003a4:	af00      	add	r7, sp, #0
    
    char c;
    *GPIO_E_MODER = 0x00005555;
200003a6:	4b0b      	ldr	r3, [pc, #44]	; (200003d4 <ascii_read_data+0x34>)
200003a8:	4a0b      	ldr	r2, [pc, #44]	; (200003d8 <ascii_read_data+0x38>)
200003aa:	601a      	str	r2, [r3, #0]
    ascii_ctrl_bit_set( B_RW );
200003ac:	2002      	movs	r0, #2
200003ae:	f7ff ff3b 	bl	20000228 <ascii_ctrl_bit_set>
    ascii_ctrl_bit_set( B_RS );
200003b2:	2001      	movs	r0, #1
200003b4:	f7ff ff38 	bl	20000228 <ascii_ctrl_bit_set>
    c = ascii_read_controller();
200003b8:	1dfc      	adds	r4, r7, #7
200003ba:	f7ff ff75 	bl	200002a8 <ascii_read_controller>
200003be:	0003      	movs	r3, r0
200003c0:	7023      	strb	r3, [r4, #0]
    *GPIO_E_MODER = 0x55555555;
200003c2:	4b04      	ldr	r3, [pc, #16]	; (200003d4 <ascii_read_data+0x34>)
200003c4:	4a05      	ldr	r2, [pc, #20]	; (200003dc <ascii_read_data+0x3c>)
200003c6:	601a      	str	r2, [r3, #0]
    return c;
200003c8:	1dfb      	adds	r3, r7, #7
200003ca:	781b      	ldrb	r3, [r3, #0]
    
200003cc:	0018      	movs	r0, r3
200003ce:	46bd      	mov	sp, r7
200003d0:	b003      	add	sp, #12
200003d2:	bd90      	pop	{r4, r7, pc}
200003d4:	40021000 	andmi	r1, r2, r0
200003d8:	00005555 	andeq	r5, r0, r5, asr r5
200003dc:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
200003e0:	61666c41 	cmnvs	r6, r1, asr #24
200003e4:	656d756e 	strbvs	r7, [sp, #-1390]!	; 0xfffffa92
200003e8:	6b736972 	blvs	21cda9b8 <ascii_read_data+0x1cda618>
200003ec:	00000020 	andeq	r0, r0, r0, lsr #32
200003f0:	70736944 	rsbsvc	r6, r3, r4, asr #18
200003f4:	2079616c 	rsbscs	r6, r9, ip, ror #2
200003f8:	6574202d 	ldrbvs	r2, [r4, #-45]!	; 0xffffffd3
200003fc:	00007473 	andeq	r7, r0, r3, ror r4

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000035e 	andeq	r0, r0, lr, asr r3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000007d 	andeq	r0, r0, sp, ror r0
  10:	0001900c 	andeq	r9, r1, ip
  14:	00014600 	andeq	r4, r1, r0, lsl #12
	...
  24:	01280200 			; <UNDEFINED> instruction: 0x01280200
  28:	c7010000 	strgt	r0, [r1, -r0]
  2c:	00004d06 	andeq	r4, r0, r6, lsl #26
  30:	0003a000 	andeq	sl, r3, r0
  34:	00004020 	andeq	r4, r0, r0, lsr #32
  38:	4d9c0100 	ldfmis	f0, [ip]
  3c:	03000000 	movweq	r0, #0
  40:	c9010063 	stmdbgt	r1, {r0, r1, r5, r6}
  44:	00004d0a 	andeq	r4, r0, sl, lsl #26
  48:	6f910200 	svcvs	0x00910200
  4c:	08010400 	stmdaeq	r1, {sl}
  50:	00000141 	andeq	r0, r0, r1, asr #2
  54:	00011602 	andeq	r1, r1, r2, lsl #12
  58:	0fbc0100 	svceq	0x00bc0100
  5c:	0000007c 	andeq	r0, r0, ip, ror r0
  60:	20000360 	andcs	r0, r0, r0, ror #6
  64:	00000040 	andeq	r0, r0, r0, asr #32
  68:	007c9c01 	rsbseq	r9, ip, r1, lsl #24
  6c:	63030000 	movwvs	r0, #12288	; 0x3000
  70:	0abd0100 	beq	fef40478 <ascii_read_data+0xdef400d8>
  74:	0000004d 	andeq	r0, r0, sp, asr #32
  78:	006f9102 	rsbeq	r9, pc, r2, lsl #2
  7c:	38080104 	stmdacc	r8, {r2, r8}
  80:	05000001 	streq	r0, [r0, #-1]
  84:	000000f9 	strdeq	r0, [r0], -r9
  88:	3606b501 	strcc	fp, [r6], -r1, lsl #10
  8c:	2a200003 	bcs	8000a0 <startup-0x1f7fff60>
  90:	01000000 	mrseq	r0, (UNDEF: 0)
  94:	0000a99c 	muleq	r0, ip, r9
  98:	01330600 	teqeq	r3, r0, lsl #12
  9c:	b5010000 	strlt	r0, [r1, #-0]
  a0:	00007c25 	andeq	r7, r0, r5, lsr #24
  a4:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
  a8:	02000500 	andeq	r0, r0, #0, 10
  ac:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
  b0:	00030c06 	andeq	r0, r3, r6, lsl #24
  b4:	00002a20 	andeq	r2, r0, r0, lsr #20
  b8:	cf9c0100 	svcgt	0x009c0100
  bc:	06000000 	streq	r0, [r0], -r0
  c0:	000001ec 	andeq	r0, r0, ip, ror #3
  c4:	7c24ae01 	stcvc	14, cr10, [r4], #-4
  c8:	02000000 	andeq	r0, r0, #0, 0
  cc:	05007791 	streq	r7, [r0, #-1937]	; 0xfffff86f
  d0:	0000005d 	andeq	r0, r0, sp, asr r0
  d4:	dc06a601 	stcle	6, cr10, [r6], {1}
  d8:	30200002 	eorcc	r0, r0, r2
  dc:	01000000 	mrseq	r0, (UNDEF: 0)
  e0:	0000f39c 	muleq	r0, ip, r3
  e4:	00630700 	rsbeq	r0, r3, r0, lsl #14
  e8:	4d23a601 	stcmi	6, cr10, [r3, #-4]!
  ec:	02000000 	andeq	r0, r0, #0, 0
  f0:	02007791 	andeq	r7, r0, #38010880	; 0x2440000
  f4:	00000047 	andeq	r0, r0, r7, asr #32
  f8:	4d069b01 	vstrmi	d9, [r6, #-4]
  fc:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
 100:	34200002 	strtcc	r0, [r0], #-2
 104:	01000000 	mrseq	r0, (UNDEF: 0)
 108:	00011b9c 	muleq	r1, ip, fp
 10c:	00630300 	rsbeq	r0, r3, r0, lsl #6
 110:	4d0a9d01 	stcmi	13, cr9, [sl, #-4]
 114:	02000000 	andeq	r0, r0, #0, 0
 118:	08007791 	stmdaeq	r0, {r0, r4, r7, r8, r9, sl, ip, sp, lr}
 11c:	00000026 	andeq	r0, r0, r6, lsr #32
 120:	60069301 	andvs	r9, r6, r1, lsl #6
 124:	48200002 	stmdami	r0!, {r1}
 128:	01000000 	mrseq	r0, (UNDEF: 0)
 12c:	00014c9c 	muleq	r1, ip, ip
 130:	00780700 	rsbseq	r0, r8, r0, lsl #14
 134:	4d219301 	stcmi	3, cr9, [r1, #-4]!
 138:	02000000 	andeq	r0, r0, #0, 0
 13c:	63036f91 	movwvs	r6, #16273	; 0x3f91
 140:	0a950100 	beq	fe540548 <ascii_read_data+0xde5401a8>
 144:	0000004d 	andeq	r0, r0, sp, asr #32
 148:	00779102 	rsbseq	r9, r7, r2, lsl #2
 14c:	00022608 	andeq	r2, r2, r8, lsl #12
 150:	068c0100 	streq	r0, [ip], r0, lsl #2
 154:	20000228 	andcs	r0, r0, r8, lsr #4
 158:	00000038 	andeq	r0, r0, r8, lsr r0
 15c:	017d9c01 	cmneq	sp, r1, lsl #24
 160:	78070000 	stmdavc	r7, {}	; <UNPREDICTABLE>
 164:	1f8c0100 	svcne	0x008c0100
 168:	0000004d 	andeq	r0, r0, sp, asr #32
 16c:	036f9102 	cmneq	pc, #-2147483648	; 0x80000000
 170:	8e010063 	cdphi	0, 0, cr0, cr1, cr3, {3}
 174:	00004d0a 	andeq	r4, r0, sl, lsl #26
 178:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 17c:	003b0500 	eorseq	r0, fp, r0, lsl #10
 180:	7f010000 	svcvc	0x00010000
 184:	0001f806 	andeq	pc, r1, r6, lsl #16
 188:	00003020 	andeq	r3, r0, r0, lsr #32
 18c:	a29c0100 	addsge	r0, ip, #0
 190:	07000001 	streq	r0, [r0, -r1]
 194:	01007375 	tsteq	r0, r5, ror r3
 198:	01a21f7f 			; <UNDEFINED> instruction: 0x01a21f7f
 19c:	91020000 	mrsls	r0, (UNDEF: 2)
 1a0:	04040074 	streq	r0, [r4], #-116	; 0xffffff8c
 1a4:	00001907 	andeq	r1, r0, r7, lsl #18
 1a8:	00000500 	andeq	r0, r0, r0, lsl #10
 1ac:	6b010000 	blvs	401b4 <startup-0x1ffbfe4c>
 1b0:	0001b806 	andeq	fp, r1, r6, lsl #16
 1b4:	00004020 	andeq	r4, r0, r0, lsr #32
 1b8:	ce9c0100 	fmlgte	f0, f4, f0
 1bc:	07000001 	streq	r0, [r0, -r1]
 1c0:	0100736d 	tsteq	r0, sp, ror #6
 1c4:	01a21f6b 			; <UNDEFINED> instruction: 0x01a21f6b
 1c8:	91020000 	mrsls	r0, (UNDEF: 2)
 1cc:	0a090074 	beq	2403a4 <startup-0x1fdbfc5c>
 1d0:	01000001 	tsteq	r0, r1
 1d4:	01740660 	cmneq	r4, r0, ror #12
 1d8:	00442000 	subeq	r2, r4, r0
 1dc:	9c010000 	stcls	0, cr0, [r1], {-0}
 1e0:	00021505 	andeq	r1, r2, r5, lsl #10
 1e4:	06580100 	ldrbeq	r0, [r8], -r0, lsl #2
 1e8:	20000138 	andcs	r0, r0, r8, lsr r1
 1ec:	0000003c 	andeq	r0, r0, ip, lsr r0
 1f0:	02249c01 	eoreq	r9, r4, #256	; 0x100
 1f4:	63070000 	movwvs	r0, #28672	; 0x7000
 1f8:	25580100 	ldrbcs	r0, [r8, #-256]	; 0xffffff00
 1fc:	0000007c 	andeq	r0, r0, ip, ror r0
 200:	0a779102 	beq	1de4610 <startup-0x1e21b9f0>
 204:	0000003b 	andeq	r0, r0, fp, lsr r0
 208:	24052f01 	strcs	r2, [r5], #-3841	; 0xfffff0ff
 20c:	15000002 	strne	r0, [r0, #-2]
 210:	0b000002 	bleq	220 <startup-0x1ffffde0>
 214:	00f90c00 	rscseq	r0, r9, r0, lsl #24
 218:	5c010000 	stcpl	0, cr0, [r1], {-0}
 21c:	00022405 	andeq	r2, r2, r5, lsl #8
 220:	00000b00 	andeq	r0, r0, r0, lsl #22
 224:	6905040d 	stmdbvs	r5, {r0, r2, r3, sl}
 228:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
 22c:	0000000c 	andeq	r0, r0, ip
 230:	ec065001 	stc	0, cr5, [r6], {1}
 234:	4c200000 	stcmi	0, cr0, [r0], #-0
 238:	01000000 	mrseq	r0, (UNDEF: 0)
 23c:	00026a9c 	muleq	r2, ip, sl
 240:	00780700 	rsbseq	r0, r8, r0, lsl #14
 244:	24175001 	ldrcs	r5, [r7], #-1
 248:	02000002 	andeq	r0, r0, #2, 0
 24c:	79077491 	stmdbvc	r7, {r0, r4, r7, sl, ip, sp, lr}
 250:	1e500100 	rdfnes	f0, f0, f0
 254:	00000224 	andeq	r0, r0, r4, lsr #4
 258:	0c709102 	ldfeqp	f1, [r0], #-8
 25c:	00000200 	andeq	r0, r0, r0, lsl #4
 260:	24055501 	strcs	r5, [r5], #-1281	; 0xfffffaff
 264:	0b000002 	bleq	274 <startup-0x1ffffd8c>
 268:	10050000 	andne	r0, r5, r0
 26c:	01000002 	tsteq	r0, r2
 270:	0068063f 	rsbeq	r0, r8, pc, lsr r6
 274:	00842000 	addeq	r2, r4, r0
 278:	9c010000 	stcls	0, cr0, [r1], {-0}
 27c:	000002f2 	strdeq	r0, [r0], -r2
 280:	01007303 	tsteq	r0, r3, lsl #6
 284:	02f20b40 	rscseq	r0, r2, #64, 22	; 0x10000
 288:	91020000 	mrsls	r0, (UNDEF: 2)
 28c:	01f40e6c 	mvnseq	r0, ip, ror #28
 290:	41010000 	mrsmi	r0, (UNDEF: 1)
 294:	0002f80a 	andeq	pc, r2, sl, lsl #16
 298:	5c910200 	lfmpl	f0, 4, [r1], {0}
 29c:	0001fa0e 	andeq	pc, r1, lr, lsl #20
 2a0:	0a420100 	beq	10806a8 <startup-0x1ef7f958>
 2a4:	00000308 	andeq	r0, r0, r8, lsl #6
 2a8:	0a4c9102 	beq	13246b8 <startup-0x1ecdb948>
 2ac:	0000000c 	andeq	r0, r0, ip
 2b0:	24054601 	strcs	r4, [r5], #-1537	; 0xfffff9ff
 2b4:	bd000002 	stclt	0, cr0, [r0, #-8]
 2b8:	0b000002 	bleq	2c8 <startup-0x1ffffd38>
 2bc:	00a20f00 	adceq	r0, r2, r0, lsl #30
 2c0:	000e2000 	andeq	r2, lr, r0
 2c4:	02d90000 	sbcseq	r0, r9, #0, 0
 2c8:	150c0000 	strne	r0, [ip, #-0]
 2cc:	01000002 	tsteq	r0, r2
 2d0:	02241149 	eoreq	r1, r4, #1073741842	; 0x40000012
 2d4:	000b0000 	andeq	r0, fp, r0
 2d8:	00c61000 	sbceq	r1, r6, r0
 2dc:	000e2000 	andeq	r2, lr, r0
 2e0:	150c0000 	strne	r0, [ip, #-0]
 2e4:	01000002 	tsteq	r0, r2
 2e8:	02241149 	eoreq	r1, r4, #1073741842	; 0x40000012
 2ec:	000b0000 	andeq	r0, fp, r0
 2f0:	04110000 	ldreq	r0, [r1], #-0
 2f4:	0000004d 	andeq	r0, r0, sp, asr #32
 2f8:	00004d12 	andeq	r4, r0, r2, lsl sp
 2fc:	00030800 	andeq	r0, r3, r0, lsl #16
 300:	01a21300 			; <UNDEFINED> instruction: 0x01a21300
 304:	000d0000 	andeq	r0, sp, r0
 308:	00004d12 	andeq	r4, r0, r2, lsl sp
 30c:	00031800 	andeq	r1, r3, r0, lsl #16
 310:	01a21300 			; <UNDEFINED> instruction: 0x01a21300
 314:	000e0000 	andeq	r0, lr, r0
 318:	00007409 	andeq	r7, r0, r9, lsl #8
 31c:	06370100 	ldrteq	r0, [r7], -r0, lsl #2
 320:	20000044 	andcs	r0, r0, r4, asr #32
 324:	00000024 	andeq	r0, r0, r4, lsr #32
 328:	39059c01 	stmdbcc	r5, {r0, sl, fp, ip, pc}
 32c:	01000002 	tsteq	r0, r2
 330:	0010062c 	andseq	r0, r0, ip, lsr #12
 334:	00342000 	eorseq	r2, r4, r0
 338:	9c010000 	stcls	0, cr0, [r1], {-0}
 33c:	0000034f 	andeq	r0, r0, pc, asr #6
 340:	00003b0c 	andeq	r3, r0, ip, lsl #22
 344:	052f0100 	streq	r0, [pc, #-256]!	; 24c <startup-0x1ffffdb4>
 348:	00000224 	andeq	r0, r0, r4, lsr #4
 34c:	0900000b 	stmdbeq	r0, {r0, r1, r3}
 350:	000001e4 	andeq	r0, r0, r4, ror #3
 354:	00062301 	andeq	r2, r6, r1, lsl #6
 358:	0c200000 	stceq	0, cr0, [r0], #-0
 35c:	01000000 	mrseq	r0, (UNDEF: 0)
 360:	Address 0x0000000000000360 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23, 0
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	13491927 	movtne	r1, #39207	; 0x9927
  24:	06120111 			; <UNDEFINED> instruction: 0x06120111
  28:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  2c:	00130119 	andseq	r0, r3, r9, lsl r1
  30:	00340300 	eorseq	r0, r4, r0, lsl #6
  34:	0b3a0803 	bleq	e82048 <startup-0x1f17dfb8>
  38:	0b390b3b 	bleq	e42d2c <startup-0x1f1bd2d4>
  3c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  40:	24040000 	strcs	r0, [r4], #-0
  44:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  48:	000e030b 	andeq	r0, lr, fp, lsl #6
  4c:	012e0500 			; <UNDEFINED> instruction: 0x012e0500
  50:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  54:	0b3b0b3a 	bleq	ec2d44 <startup-0x1f13d2bc>
  58:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  5c:	06120111 			; <UNDEFINED> instruction: 0x06120111
  60:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  64:	00130119 	andseq	r0, r3, r9, lsl r1
  68:	00050600 	andeq	r0, r5, r0, lsl #12
  6c:	0b3a0e03 	bleq	e83880 <startup-0x1f17c780>
  70:	0b390b3b 	bleq	e42d64 <startup-0x1f1bd29c>
  74:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  78:	05070000 	streq	r0, [r7, #-0]
  7c:	3a080300 	bcc	200c84 <startup-0x1fdff37c>
  80:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  84:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  88:	08000018 	stmdaeq	r0, {r3, r4}
  8c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  90:	0b3a0e03 	bleq	e838a4 <startup-0x1f17c75c>
  94:	0b390b3b 	bleq	e42d88 <startup-0x1f1bd278>
  98:	01111927 	tsteq	r1, r7, lsr #18
  9c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  a0:	01194297 			; <UNDEFINED> instruction: 0x01194297
  a4:	09000013 	stmdbeq	r0, {r0, r1, r4}
  a8:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  ac:	0b3a0e03 	bleq	e838c0 <startup-0x1f17c740>
  b0:	0b390b3b 	bleq	e42da4 <startup-0x1f1bd25c>
  b4:	01111927 	tsteq	r1, r7, lsr #18
  b8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  bc:	00194297 	mulseq	r9, r7, r2
  c0:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
  c4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  c8:	0b3b0b3a 	bleq	ec2db8 <startup-0x1f13d248>
  cc:	13490b39 	movtne	r0, #39737	; 0x9b39
  d0:	1301193c 	movwne	r1, #6460	; 0x193c
  d4:	180b0000 	stmdane	fp, {}	; <UNPREDICTABLE>
  d8:	0c000000 	stceq	0, cr0, [r0], {-0}
  dc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  e0:	0b3a0e03 	bleq	e838f4 <startup-0x1f17c70c>
  e4:	0b390b3b 	bleq	e42dd8 <startup-0x1f1bd228>
  e8:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
  ec:	240d0000 	strcs	r0, [sp], #-0
  f0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  f4:	0008030b 	andeq	r0, r8, fp, lsl #6
  f8:	00340e00 	eorseq	r0, r4, r0, lsl #28
  fc:	0b3a0e03 	bleq	e83910 <startup-0x1f17c6f0>
 100:	0b390b3b 	bleq	e42df4 <startup-0x1f1bd20c>
 104:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 108:	0b0f0000 	bleq	3c0110 <startup-0x1fc3fef0>
 10c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 110:	00130106 	andseq	r0, r3, r6, lsl #2
 114:	010b1000 	mrseq	r1, (UNDEF: 11)
 118:	06120111 			; <UNDEFINED> instruction: 0x06120111
 11c:	0f110000 	svceq	0x00110000
 120:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 124:	12000013 	andne	r0, r0, #19, 0
 128:	13490101 	movtne	r0, #37121	; 0x9101
 12c:	00001301 	andeq	r1, r0, r1, lsl #6
 130:	49002113 	stmdbmi	r0, {r0, r1, r4, r8, sp}
 134:	000b2f13 	andeq	r2, fp, r3, lsl pc
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000003d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200003e0 	andcs	r0, r0, r0, ror #7
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000286 	andeq	r0, r0, r6, lsl #5
   4:	006a0003 	rsbeq	r0, sl, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
  20:	616a2f73 	smcvs	41715	; 0xa2f3
  24:	62626f63 	rsbvs	r6, r2, #396	; 0x18c
  28:	66677265 	strbtvs	r7, [r7], -r5, ror #4
  2c:	2f6b6c61 	svccs	0x006b6c61
  30:	6b736544 	blvs	1cd9548 <startup-0x1e326ab8>
  34:	2f706f74 	svccs	0x00706f74
  38:	72702d43 	rsbsvc	r2, r0, #4288	; 0x10c0
  3c:	6172676f 	cmnvs	r2, pc, ror #14
  40:	72656d6d 	rsbvc	r6, r5, #6976	; 0x1b40
  44:	2f676e69 	svccs	0x00676e69
  48:	6c706f6d 	ldclvs	15, cr6, [r0], #-436	; 0xfffffe4c
  4c:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  50:	6f697461 	svcvs	0x00697461
  54:	2f72656e 	svccs	0x0072656e
  58:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  5c:	73696469 	cmnvc	r9, #1761607680	; 0x69000000
  60:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
  64:	74730000 	ldrbtvc	r0, [r3], #-0
  68:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  6c:	00632e70 	rsbeq	r2, r3, r0, ror lr
  70:	00000001 	andeq	r0, r0, r1
  74:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  78:	00000002 	andeq	r0, r0, r2
  7c:	01230320 			; <UNDEFINED> instruction: 0x01230320
  80:	2f212113 	svccs	0x00212113
  84:	00030221 	andeq	r0, r3, r1, lsr #4
  88:	17050101 	strne	r0, [r5, -r1, lsl #2]
  8c:	10020500 	andne	r0, r2, r0, lsl #10
  90:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  94:	0505012b 	streq	r0, [r5, #-299]	; 0xfffffed5
  98:	20150530 	andscs	r0, r5, r0, lsr r5
  9c:	3d2f0505 	cfstr32cc	mvfx0, [pc, #-20]!	; 90 <startup-0x1fffff70>
  a0:	05201505 	streq	r1, [r0, #-1285]!	; 0xfffffafb
  a4:	053d2f05 	ldreq	r2, [sp, #-3845]!	; 0xfffff0fb
  a8:	05052015 	streq	r2, [r5, #-21]	; 0xffffffeb
  ac:	3e01052f 	cfsh32cc	mvfx0, mvfx1, #31
  b0:	05681505 	strbeq	r1, [r8, #-1285]!	; 0xfffffafb
  b4:	25053205 	strcs	r3, [r5, #-517]	; 0xfffffdfb
  b8:	2f050520 	svccs	0x00050520
  bc:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
  c0:	10052f01 	andne	r2, r5, r1, lsl #30
  c4:	3e0a05a0 	cfsh32cc	mvfx0, mvfx10, #-48
  c8:	84050575 	strhi	r0, [r5], #-1397	; 0xfffffa8b
  cc:	07052f2f 	streq	r2, [r5, -pc, lsr #30]
  d0:	300a054b 	andcc	r0, sl, fp, asr #10
  d4:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
  d8:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
  dc:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
  e0:	11053c02 	tstne	r5, r2, lsl #24
  e4:	02040200 	andeq	r0, r4, #0, 4
  e8:	000c0520 	andeq	r0, ip, r0, lsr #10
  ec:	3c010402 	cfstrscc	mvf0, [r1], {2}
  f0:	02000a05 	andeq	r0, r0, #20480	; 0x5000
  f4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
  f8:	07052f05 	streq	r2, [r5, -r5, lsl #30]
  fc:	2f0a054b 	svccs	0x000a054b
 100:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
 104:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
 108:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
 10c:	10053c02 	andne	r3, r5, r2, lsl #24
 110:	02040200 	andeq	r0, r4, #0, 4
 114:	000c0520 	andeq	r0, ip, r0, lsr #10
 118:	3c010402 	cfstrscc	mvf0, [r1], {2}
 11c:	02000a05 	andeq	r0, r0, #20480	; 0x5000
 120:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 124:	01052f0c 	tsteq	r5, ip, lsl #30
 128:	76210521 	strtvc	r0, [r1], -r1, lsr #10
 12c:	05591905 	ldrbeq	r1, [r9, #-2309]	; 0xfffff6fb
 130:	19052e05 	stmdbne	r5, {r0, r2, r9, sl, fp, sp}
 134:	2e150520 	cfmul64cs	mvdx0, mvdx5, mvdx0
 138:	05210705 	streq	r0, [r1, #-1797]!	; 0xfffff8fb
 13c:	09053d1b 	stmdbeq	r5, {r0, r1, r3, r4, r8, sl, fp, ip, sp}
 140:	202b053c 	eorcs	r0, fp, ip, lsr r5
 144:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
 148:	0505221c 	streq	r2, [r5, #-540]	; 0xfffffde4
 14c:	7501053c 	strvc	r0, [r1, #-1340]	; 0xfffffac4
 150:	05762905 	ldrbeq	r2, [r6, #-2309]!	; 0xfffff6fb
 154:	0d05680a 	stceq	8, cr6, [r5, #-40]	; 0xffffffd8
 158:	01040200 	mrseq	r0, R12_usr
 15c:	00210520 	eoreq	r0, r1, r0, lsr #10
 160:	3c010402 	cfstrscc	mvf0, [r1], {2}
 164:	02000a05 	andeq	r0, r0, #20480	; 0x5000
 168:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 16c:	593d2f05 	ldmdbpl	sp!, {r0, r2, r8, r9, sl, fp, sp}
 170:	053d0105 	ldreq	r0, [sp, #-261]!	; 0xfffffefb
 174:	05054c18 	streq	r4, [r5, #-3096]	; 0xfffff3e8
 178:	200f0531 	andcs	r0, pc, r1, lsr r5	; <UNPREDICTABLE>
 17c:	052f0505 	streq	r0, [pc, #-1285]!	; fffffc7f <ascii_read_data+0xdffff8df>
 180:	0505200f 	streq	r2, [r5, #-15]
 184:	200e052f 	andcs	r0, lr, pc, lsr #10
 188:	052f0505 	streq	r0, [pc, #-1285]!	; fffffc8b <ascii_read_data+0xdffff8eb>
 18c:	0a05200f 	beq	1481d0 <startup-0x1feb7e30>
 190:	000d052f 	andeq	r0, sp, pc, lsr #10
 194:	20010402 	andcs	r0, r1, r2, lsl #8
 198:	02001705 	andeq	r1, r0, #1310720	; 0x140000
 19c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 1a0:	0402000a 	streq	r0, [r2], #-10
 1a4:	05053c01 	streq	r3, [r5, #-3073]	; 0xfffff3ff
 1a8:	200f0521 	andcs	r0, pc, r1, lsr #10
 1ac:	052f0105 	streq	r0, [pc, #-261]!	; af <startup-0x1fffff51>
 1b0:	0805a023 	stmdaeq	r5, {r0, r1, r5, sp, pc}
 1b4:	840a0551 	strhi	r0, [sl], #-1361	; 0xfffffaaf
 1b8:	2f230505 	svccs	0x00230505
 1bc:	07052f2f 	streq	r2, [r5, -pc, lsr #30]
 1c0:	030a052f 	movweq	r0, #42287	; 0xa52f
 1c4:	01053c79 	tsteq	r5, r9, ror ip
 1c8:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
 1cc:	0a055a23 	beq	156a60 <startup-0x1fea95a0>
 1d0:	2205054d 	andcs	r0, r5, #322961408	; 0x13400000
 1d4:	052f2f2f 	streq	r2, [pc, #-3887]!	; fffff2ad <ascii_read_data+0xdfffef0d>
 1d8:	0a052f07 	beq	14bdfc <startup-0x1feb4204>
 1dc:	053c7a03 	ldreq	r7, [ip, #-2563]!	; 0xfffff5fd
 1e0:	22054401 	andcs	r4, r5, #16777216	; 0x1000000
 1e4:	6909055a 	stmdbvs	r9, {r1, r3, r4, r6, r8, sl}
 1e8:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
 1ec:	05054b14 	streq	r4, [r5, #-2836]	; 0xfffff4ec
 1f0:	20140566 	andscs	r0, r4, r6, ror #10
 1f4:	054b0105 	strbeq	r0, [fp, #-261]	; 0xfffffefb
 1f8:	09056824 	stmdbeq	r5, {r2, r5, fp, sp, lr}
 1fc:	20070569 	andcs	r0, r7, r9, ror #10
 200:	054b0b05 	strbeq	r0, [fp, #-2821]	; 0xfffff4fb
 204:	05059e07 	streq	r9, [r5, #-3591]	; 0xfffff1f9
 208:	2014052f 	andscs	r0, r4, pc, lsr #10
 20c:	05670105 	strbeq	r0, [r7, #-261]!	; 0xfffffefb
 210:	05056823 	streq	r6, [r5, #-2083]	; 0xfffff7dd
 214:	052f3d3f 	streq	r3, [pc, #-3391]!	; fffff4dd <ascii_read_data+0xdffff13d>
 218:	07052f09 	streq	r2, [r5, -r9, lsl #30]
 21c:	3d050520 	cfstr32cc	mvfx0, [r5, #-128]	; 0xffffff80
 220:	053d0c05 	ldreq	r0, [sp, #-3077]!	; 0xfffff3fb
 224:	26052f01 	strcs	r2, [r5], -r1, lsl #30
 228:	68050576 	stmdavs	r5, {r1, r2, r4, r5, r6, r8, sl}
 22c:	2015053d 	andscs	r0, r5, sp, lsr r5
 230:	3d3d0505 	cfldr32cc	mvfx0, [sp, #-20]!	; 0xffffffec
 234:	052f0105 	streq	r0, [pc, #-261]!	; 137 <startup-0x1ffffec9>
 238:	0505682d 	streq	r6, [r5, #-2093]	; 0xfffff7d3
 23c:	053d3d68 	ldreq	r3, [sp, #-3432]!	; 0xfffff298
 240:	2b055901 	blcs	15664c <startup-0x1fea99b4>
 244:	6805054c 	stmdavs	r5, {r2, r3, r6, r8, sl}
 248:	01053d3d 	tsteq	r5, sp, lsr sp
 24c:	4c280559 	cfstr32mi	mvfx0, [r8], #-356	; 0xfffffe9c
 250:	053e0505 	ldreq	r0, [lr, #-1285]!	; 0xfffffafb
 254:	05052013 	streq	r2, [r5, #-19]	; 0xffffffed
 258:	09053d2f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8, sl, fp, ip, sp}
 25c:	5905053d 	stmdbpl	r5, {r0, r2, r3, r4, r5, r8, sl}
 260:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
 264:	01052f0c 	tsteq	r5, ip, lsl #30
 268:	a11d052f 	tstge	sp, pc, lsr #10
 26c:	053f0505 	ldreq	r0, [pc, #-1285]!	; fffffd6f <ascii_read_data+0xdffff9cf>
 270:	05052013 	streq	r2, [r5, #-19]	; 0xffffffed
 274:	09053d2f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8, sl, fp, ip, sp}
 278:	5905053d 	stmdbpl	r5, {r0, r2, r3, r4, r5, r8, sl}
 27c:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
 280:	01052f0c 	tsteq	r5, ip, lsl #30
 284:	000a0230 	andeq	r0, sl, r0, lsr r2
 288:	Address 0x0000000000000288 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	616c6564 	cmnvs	ip, r4, ror #10
   4:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
   8:	00696c6c 	rsbeq	r6, r9, ip, ror #24
   c:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  10:	6f675f69 	svcvs	0x00675f69
  14:	79786f74 	ldmdbvc	r8!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
  18:	736e7500 	cmnvc	lr, #0, 10
  1c:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  20:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
  24:	73610074 	cmnvc	r1, #116, 0	; 0x74
  28:	5f696963 	svcpl	0x00696963
  2c:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
  30:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
  34:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
  38:	64007261 	strvs	r7, [r0], #-609	; 0xfffffd9f
  3c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
  40:	6b696d5f 	blvs	1a5b5c4 <startup-0x1e5a4a3c>
  44:	61006f72 	tstvs	r0, r2, ror pc
  48:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
  4c:	6165725f 	cmnvs	r5, pc, asr r2
  50:	6f635f64 	svcvs	0x00635f64
  54:	6f72746e 	svcvs	0x0072746e
  58:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
  5c:	63736100 	cmnvs	r3, #0
  60:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
  64:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
  68:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
  6c:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; fffffea4 <ascii_read_data+0xdffffb04>
  70:	0072656c 	rsbseq	r6, r2, ip, ror #10
  74:	5f707061 	svcpl	0x00707061
  78:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
  7c:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
  80:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
  84:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  88:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  8c:	31393130 	teqcc	r9, r0, lsr r1
  90:	20353230 	eorscs	r3, r5, r0, lsr r2
  94:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  98:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  9c:	415b2029 	cmpmi	fp, r9, lsr #32
  a0:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  a4:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  a8:	6172622d 	cmnvs	r2, sp, lsr #4
  ac:	2068636e 	rsbcs	r6, r8, lr, ror #6
  b0:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  b4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  b8:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  bc:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
  c0:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  c4:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  c8:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
  cc:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
  d0:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
  d4:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
  d8:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
  dc:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  e0:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  e4:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  e8:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  ec:	20304f2d 	eorscs	r4, r0, sp, lsr #30
  f0:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
  f4:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
  f8:	63736100 	cmnvs	r3, #0
  fc:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 100:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 104:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
 108:	65640061 	strbvs	r0, [r4, #-97]!	; 0xffffff9f
 10c:	5f79616c 	svcpl	0x0079616c
 110:	6e303532 	mrcvs	5, 1, r3, cr0, cr2, {1}
 114:	73610073 	cmnvc	r1, #115, 0	; 0x73
 118:	5f696963 	svcpl	0x00696963
 11c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 120:	6174735f 	cmnvs	r4, pc, asr r3
 124:	00737574 	rsbseq	r7, r3, r4, ror r5
 128:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 12c:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
 130:	645f6461 	ldrbvs	r6, [pc], #-1121	; 138 <startup-0x1ffffec8>
 134:	00617461 	rsbeq	r7, r1, r1, ror #8
 138:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 13c:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 140:	61686320 	cmnvs	r8, r0, lsr #6
 144:	552f0072 	strpl	r0, [pc, #-114]!	; da <startup-0x1fffff26>
 148:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 14c:	63616a2f 	cmnvs	r1, #192512	; 0x2f000
 150:	6562626f 	strbvs	r6, [r2, #-623]!	; 0xfffffd91
 154:	61666772 	smcvs	26226	; 0x6672
 158:	442f6b6c 	strtmi	r6, [pc], #-2924	; 160 <startup-0x1ffffea0>
 15c:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
 160:	432f706f 			; <UNDEFINED> instruction: 0x432f706f
 164:	6f72702d 	svcvs	0x0072702d
 168:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
 16c:	6972656d 	ldmdbvs	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
 170:	6d2f676e 	stcvs	7, cr6, [pc, #-440]!	; ffffffc0 <ascii_read_data+0xdffffc20>
 174:	616c706f 	cmnvs	ip, pc, rrx
 178:	61726f62 	cmnvs	r2, r2, ror #30
 17c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 180:	612f7265 			; <UNDEFINED> instruction: 0x612f7265
 184:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 188:	70736964 	rsbsvc	r6, r3, r4, ror #18
 18c:	0079616c 	rsbseq	r6, r9, ip, ror #2
 190:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 194:	6a2f7372 	bvs	bdcf64 <startup-0x1f42309c>
 198:	626f6361 	rsbvs	r6, pc, #-2080374783	; 0x84000001
 19c:	67726562 	ldrbvs	r6, [r2, -r2, ror #10]!
 1a0:	6b6c6166 	blvs	1b18740 <startup-0x1e4e78c0>
 1a4:	7365442f 	cmnvc	r5, #788529152	; 0x2f000000
 1a8:	706f746b 	rsbvc	r7, pc, fp, ror #8
 1ac:	702d432f 	eorvc	r4, sp, pc, lsr #6
 1b0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
 1b4:	656d6d61 	strbvs	r6, [sp, #-3425]!	; 0xfffff29f
 1b8:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
 1bc:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 1c0:	6f62616c 	svcvs	0x0062616c
 1c4:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 1c8:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 1cc:	6373612f 	cmnvs	r3, #-1073741813	; 0xc000000b
 1d0:	69646969 	stmdbvs	r4!, {r0, r3, r5, r6, r8, fp, sp, lr}^
 1d4:	616c7073 	smcvs	50947	; 0xc703
 1d8:	74732f79 	ldrbtvc	r2, [r3], #-3961	; 0xfffff087
 1dc:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 1e0:	00632e70 	rsbeq	r2, r3, r0, ror lr
 1e4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 1e8:	00707574 	rsbseq	r7, r0, r4, ror r5
 1ec:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
 1f0:	00646e61 	rsbeq	r6, r4, r1, ror #28
 1f4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 1f8:	65740031 	ldrbvs	r0, [r4, #-49]!	; 0xffffffcf
 1fc:	00327473 	eorseq	r7, r2, r3, ror r4
 200:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 204:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 208:	5f657469 	svcpl	0x00657469
 20c:	00646d63 	rsbeq	r6, r4, r3, ror #26
 210:	6e69616d 	powvsez	f6, f1, #5.0
 214:	63736100 	cmnvs	r3, #0
 218:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 21c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 220:	6168635f 	cmnvs	r8, pc, asr r3
 224:	73610072 	cmnvc	r1, #114, 0	; 0x72
 228:	5f696963 	svcpl	0x00696963
 22c:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
 230:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
 234:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
 238:	63736100 	cmnvs	r3, #0
 23c:	695f6969 	ldmdbvs	pc, {r0, r3, r5, r6, r8, fp, sp, lr}^	; <UNPREDICTABLE>
 240:	0074696e 	rsbseq	r6, r4, lr, ror #18

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000034 	andeq	r0, r0, r4, lsr r0
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000044 	andcs	r0, r0, r4, asr #32
  48:	00000024 	andeq	r0, r0, r4, lsr #32
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0000070d 	andeq	r0, r0, sp, lsl #14
  58:	00000020 	andeq	r0, r0, r0, lsr #32
  5c:	00000000 	andeq	r0, r0, r0
  60:	20000068 	andcs	r0, r0, r8, rrx
  64:	00000084 	andeq	r0, r0, r4, lsl #1
  68:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
  6c:	87038504 	strhi	r8, [r3, -r4, lsl #10]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0d41380e 	stcleq	8, cr3, [r1, #-56]	; 0xffffffc8
  78:	00000007 	andeq	r0, r0, r7
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	200000ec 	andcs	r0, r0, ip, ror #1
  88:	0000004c 	andeq	r0, r0, ip, asr #32
  8c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  90:	41018e02 	tstmi	r1, r2, lsl #28
  94:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  98:	00000007 	andeq	r0, r0, r7
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	20000138 	andcs	r0, r0, r8, lsr r1
  a8:	0000003c 	andeq	r0, r0, ip, lsr r0
  ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  b0:	41018e02 	tstmi	r1, r2, lsl #28
  b4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  b8:	00000007 	andeq	r0, r0, r7
  bc:	00000018 	andeq	r0, r0, r8, lsl r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	20000174 	andcs	r0, r0, r4, ror r1
  c8:	00000044 	andeq	r0, r0, r4, asr #32
  cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  d0:	41018e02 	tstmi	r1, r2, lsl #28
  d4:	0000070d 	andeq	r0, r0, sp, lsl #14
  d8:	0000001c 	andeq	r0, r0, ip, lsl r0
  dc:	00000000 	andeq	r0, r0, r0
  e0:	200001b8 			; <UNDEFINED> instruction: 0x200001b8
  e4:	00000040 	andeq	r0, r0, r0, asr #32
  e8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  ec:	41018e02 	tstmi	r1, r2, lsl #28
  f0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  f4:	00000007 	andeq	r0, r0, r7
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
  fc:	00000000 	andeq	r0, r0, r0
 100:	200001f8 	strdcs	r0, [r0], -r8
 104:	00000030 	andeq	r0, r0, r0, lsr r0
 108:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 10c:	41018e02 	tstmi	r1, r2, lsl #28
 110:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 114:	00000007 	andeq	r0, r0, r7
 118:	0000001c 	andeq	r0, r0, ip, lsl r0
 11c:	00000000 	andeq	r0, r0, r0
 120:	20000228 	andcs	r0, r0, r8, lsr #4
 124:	00000038 	andeq	r0, r0, r8, lsr r0
 128:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 12c:	41018e02 	tstmi	r1, r2, lsl #28
 130:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 134:	00000007 	andeq	r0, r0, r7
 138:	0000001c 	andeq	r0, r0, ip, lsl r0
 13c:	00000000 	andeq	r0, r0, r0
 140:	20000260 	andcs	r0, r0, r0, ror #4
 144:	00000048 	andeq	r0, r0, r8, asr #32
 148:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 14c:	41018e02 	tstmi	r1, r2, lsl #28
 150:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 154:	00000007 	andeq	r0, r0, r7
 158:	0000001c 	andeq	r0, r0, ip, lsl r0
 15c:	00000000 	andeq	r0, r0, r0
 160:	200002a8 	andcs	r0, r0, r8, lsr #5
 164:	00000034 	andeq	r0, r0, r4, lsr r0
 168:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 16c:	41018e02 	tstmi	r1, r2, lsl #28
 170:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 174:	00000007 	andeq	r0, r0, r7
 178:	0000001c 	andeq	r0, r0, ip, lsl r0
 17c:	00000000 	andeq	r0, r0, r0
 180:	200002dc 	ldrdcs	r0, [r0], -ip
 184:	00000030 	andeq	r0, r0, r0, lsr r0
 188:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 18c:	41018e02 	tstmi	r1, r2, lsl #28
 190:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 194:	00000007 	andeq	r0, r0, r7
 198:	0000001c 	andeq	r0, r0, ip, lsl r0
 19c:	00000000 	andeq	r0, r0, r0
 1a0:	2000030c 	andcs	r0, r0, ip, lsl #6
 1a4:	0000002a 	andeq	r0, r0, sl, lsr #32
 1a8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1ac:	41018e02 	tstmi	r1, r2, lsl #28
 1b0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1b4:	00000007 	andeq	r0, r0, r7
 1b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1bc:	00000000 	andeq	r0, r0, r0
 1c0:	20000336 	andcs	r0, r0, r6, lsr r3
 1c4:	0000002a 	andeq	r0, r0, sl, lsr #32
 1c8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1cc:	41018e02 	tstmi	r1, r2, lsl #28
 1d0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1d4:	00000007 	andeq	r0, r0, r7
 1d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1dc:	00000000 	andeq	r0, r0, r0
 1e0:	20000360 	andcs	r0, r0, r0, ror #6
 1e4:	00000040 	andeq	r0, r0, r0, asr #32
 1e8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 1ec:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 1f0:	180e4101 	stmdane	lr, {r0, r8, lr}
 1f4:	00070d41 	andeq	r0, r7, r1, asr #26
 1f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1fc:	00000000 	andeq	r0, r0, r0
 200:	200003a0 	andcs	r0, r0, r0, lsr #7
 204:	00000040 	andeq	r0, r0, r0, asr #32
 208:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 20c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 210:	180e4101 	stmdane	lr, {r0, r8, lr}
 214:	00070d41 	andeq	r0, r7, r1, asr #26
